{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { IOEndpoint, IOOptions, IOPromise, createIOPromise } from 'type-r'\r\n\r\nexport type Index = number[];\r\n\r\nexport function create( key : string ){\r\n    return new LocalStorageEndpoint( key );\r\n}\r\n\r\nexport { create as localStorageIO }\r\n\r\nexport class LocalStorageEndpoint implements IOEndpoint {\r\n    constructor( public key : string ){\r\n    }\r\n\r\n    resolve( value ){\r\n        return createIOPromise( ( resolve, reject ) => {\r\n            setTimeout( () =>{\r\n                resolve( value )\r\n            }, 0 );\r\n        });\r\n    }\r\n    \r\n    reject( value ){\r\n        return createIOPromise( ( resolve, reject ) => {\r\n            setTimeout( () => reject( value ), 0 );\r\n        });\r\n    }\r\n\r\n    create( json, options : IOOptions ) {\r\n        const { index } = this;\r\n        index.push( json.id = String( ( index[ 0 ] as number )++ ) );\r\n        this.index = index;\r\n        this.set( json );\r\n        return this.resolve({ id : json.id });\r\n    }\r\n\r\n    set( json ){\r\n        localStorage.setItem( this.key + '#' + json.id, JSON.stringify( json ) );\r\n    }\r\n\r\n    get( id ){\r\n        return JSON.parse( localStorage.getItem( this.key + '#' + id ) );\r\n    }\r\n\r\n    update( id, json, options : IOOptions ) {\r\n        json.id = id;\r\n        this.set( json );\r\n        return this.resolve( {} );\r\n    }\r\n\r\n    read( id, options : IOOptions ){\r\n        const existing = this.get( id );\r\n        return existing ?\r\n            this.resolve( existing ) : \r\n            this.reject( \"Not found\" );\r\n    }\r\n\r\n    destroy( id, options : IOOptions ){\r\n        const existing = this.get( id );\r\n        if( existing ){\r\n            localStorage.removeItem( this.key + '#' + id );\r\n            this.index = this.index.filter( x => x !== id );\r\n            return this.resolve( {} );\r\n        }\r\n        else{\r\n            return this.reject( \"Not found\" );\r\n        }\r\n    }\r\n\r\n    get index() : ( string | number )[]{\r\n        return JSON.parse( localStorage.getItem( this.key ) ) || [ 0 ];\r\n    }\r\n\r\n    set index( x ){\r\n        localStorage.setItem( this.key, JSON.stringify( x ) );\r\n    }\r\n\r\n    list( options? : IOOptions ) {\r\n        const { index } = this; \r\n        return this.resolve( this.index.slice( 1 ).map( id => this.get( id ) ) );\r\n    }\r\n\r\n    subscribe( events ) : any {}\r\n    unsubscribe( events) : any {}\r\n}"],"names":["create","key","LocalStorageEndpoint","this","value","createIOPromise","resolve","reject","setTimeout","json","options","index","push","id","String","set","localStorage","setItem","JSON","stringify","parse","getItem","existing","get","removeItem","filter","x","Object","slice","map","_this","events"],"mappings":"0PAIgBA,EAAQC,GACpB,OAAO,IAAIC,EAAsBD,oBAMjC,WAAoBA,GAAAE,SAAAF,EAyExB,OAtEIC,oBAAA,SAASE,GACL,OAAOC,kBAAiB,SAAEC,EAASC,GAC/BC,WAAY,WACRF,EAASF,IACV,MAIXF,mBAAA,SAAQE,GACJ,OAAOC,kBAAiB,SAAEC,EAASC,GAC/BC,WAAY,WAAM,OAAAD,EAAQH,IAAS,MAI3CF,mBAAA,SAAQO,EAAMC,GACF,IAAAC,aAIR,OAHAA,EAAMC,KAAMH,EAAKI,GAAKC,OAAUH,EAAO,OACvCR,KAAKQ,MAAQA,EACbR,KAAKY,IAAKN,GACHN,KAAKG,QAAQ,CAAEO,GAAKJ,EAAKI,MAGpCX,gBAAA,SAAKO,GACDO,aAAaC,QAASd,KAAKF,IAAM,IAAMQ,EAAKI,GAAIK,KAAKC,UAAWV,KAGpEP,gBAAA,SAAKW,GACD,OAAOK,KAAKE,MAAOJ,aAAaK,QAASlB,KAAKF,IAAM,IAAMY,KAG9DX,mBAAA,SAAQW,EAAIJ,EAAMC,GAGd,OAFAD,EAAKI,GAAKA,EACVV,KAAKY,IAAKN,GACHN,KAAKG,QAAS,KAGzBJ,iBAAA,SAAMW,EAAIH,GACN,IAAMY,EAAWnB,KAAKoB,IAAKV,GAC3B,OAAOS,EACHnB,KAAKG,QAASgB,GACdnB,KAAKI,OAAQ,cAGrBL,oBAAA,SAASW,EAAIH,GAET,OADiBP,KAAKoB,IAAKV,IAEvBG,aAAaQ,WAAYrB,KAAKF,IAAM,IAAMY,GAC1CV,KAAKQ,MAAQR,KAAKQ,MAAMc,OAAQ,SAAAC,GAAK,OAAAA,IAAMb,IACpCV,KAAKG,QAAS,KAGdH,KAAKI,OAAQ,cAI5BoB,sBAAIzB,yBAAJ,WACI,OAAOgB,KAAKE,MAAOJ,aAAaK,QAASlB,KAAKF,OAAW,CAAE,QAG/D,SAAWyB,GACPV,aAAaC,QAASd,KAAKF,IAAKiB,KAAKC,UAAWO,qCAGpDxB,iBAAA,SAAMQ,GAAN,sBAEI,OAAOP,KAAKG,QAASH,KAAKQ,MAAMiB,MAAO,GAAIC,IAAK,SAAAhB,GAAM,OAAAiB,EAAKP,IAAKV,OAGpEX,sBAAA,SAAW6B,KACX7B,wBAAA,SAAa6B"}