{"version":3,"file":"index.js","sources":["../../node_modules/tslib/tslib.es6.js","../../models/src/object-plus/tools.ts","../../models/src/object-plus/eventsource.ts","../../models/src/object-plus/mixins.ts","../../models/src/object-plus/events.ts","../../models/src/object-plus/logging.ts","../../models/src/io-tools.ts","../../models/src/traversable.ts","../../models/src/validation.ts","../../models/src/transactions.ts","../../models/src/record/updates.ts","../../models/src/record/metatypes/any.ts","../../models/src/record/metatypes/basic.ts","../../models/src/record/metatypes/date.ts","../../models/src/record/metatypes/owned.ts","../../models/src/record/metatypes/shared.ts","../../models/src/record/metatypes/index.ts","../../models/src/record/attrDef.ts","../../models/src/record/mixin.ts","../../models/src/record/io-mixin.ts","../../models/src/record/record.ts","../../models/src/record/index.ts","../../models/src/collection/commons.ts","../../models/src/collection/add.ts","../../models/src/collection/remove.ts","../../models/src/collection/set.ts","../../models/src/collection/arrayMethods.ts","../../models/src/collection/index.ts","../../models/src/relations/from.ts","../../models/src/relations/subsetOf.ts","../../models/src/relations/commons.ts","../../models/src/relations/store.ts","../../models/src/index.ts","../../ext-types/src/dates.ts","../../ext-types/src/integer.ts","../../ext-types/src/url.ts","../../ext-types/src/ip.ts","../../ext-types/src/email.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"," /** Similar to underscore `_.defaults` */\r\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\r\nexport function defaults< T >( dest : T, source : Object ) : T {\r\n    for( var name in source ) {\r\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\r\n            dest[ name ] = source[ name ];\r\n        }\r\n    }\r\n\r\n    if( arguments.length > 2 ){\r\n        for( let i = 2; i < arguments.length; i++ ){\r\n            const other = arguments[ i ];\r\n            other && defaults( dest, other );\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\n/** Check if value is raw JSON */\r\nexport function isValidJSON( value : any ) : boolean {\r\n    if( value === null ){\r\n        return true;\r\n    }\r\n\r\n    switch( typeof value ){\r\n    case 'number' :\r\n    case 'string' :\r\n    case 'boolean' :\r\n        return true;\r\n\r\n    case 'object':\r\n        var proto = Object.getPrototypeOf( value );\r\n\r\n        if( proto === Object.prototype || proto === Array.prototype ){\r\n            return every( value, isValidJSON );\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/** Get the base class constructor function.\r\n * @param Class Subclass constructor function.\r\n * @returns Base class constructor function.\r\n */\r\nexport function getBaseClass( Class : Function ) {\r\n    return Object.getPrototypeOf( Class.prototype ).constructor\r\n}\r\n\r\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\r\n    for( let name of names ){\r\n        const value = definition[ name ];\r\n        value === void 0 || ( Class.prototype[ name ] = value );\r\n    }\r\n}\r\n\r\n/** Checks whenever given object is an empty hash `{}` */\r\nexport function isEmpty( obj : {} ) : boolean {\r\n    if( obj ){\r\n        for( let key in obj ){\r\n            if( obj.hasOwnProperty( key ) ){\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport type Iteratee = ( value : any, key? : string | number ) => any;\r\n\r\nfunction someArray( arr : any[], fun : Iteratee ) : any {\r\n    let result;\r\n\r\n    for( let i = 0; i < arr.length; i++ ){\r\n        if( result = fun( arr[ i ], i ) ){\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nfunction someObject( obj : {}, fun : Iteratee ) : any {\r\n    let result;\r\n\r\n    for( let key in obj ){\r\n        if( obj.hasOwnProperty( key ) ){\r\n            if( result = fun( obj[ key ], key ) ){\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** Similar to underscore `_.some` */\r\nexport function some( obj, fun : Iteratee ) : any {\r\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\r\n        return someArray( obj, fun );\r\n    }\r\n    else{\r\n        return someObject( obj, fun );\r\n    }\r\n}\r\n\r\n/** Similar to underscore `_.every` */\r\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\r\n    return !some( obj, x => !predicate( x ) );\r\n}\r\n\r\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\r\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\r\n    let desc : PropertyDescriptor;\r\n\r\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\r\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\r\n    }\r\n\r\n    return desc;\r\n}\r\n\r\n/** Similar to underscore `_.omit` */\r\nexport function omit( source : {}, ...rest : string[] ) : {}\r\nexport function omit( source ) : {} {\r\n    const dest = {}, discard = {};\r\n\r\n    for( let i = 1; i < arguments.length; i ++ ){\r\n        discard[ arguments[ i ] ] = true;\r\n    }\r\n\r\n    for( var name in source ) {\r\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\r\n            dest[ name ] = source[ name ];\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\r\n * When `fun` returns `undefined`, skip this value. \r\n */\r\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\r\n    for( var name in source ) {\r\n        if( source.hasOwnProperty( name ) ) {\r\n            var value = fun( source[ name ], name );\r\n            value === void 0 || ( dest[ name ] = < A >value );\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\nexport function fastAssign< A >( dest : A, source : {} ) : A {\r\n    for( var name in source ) {\r\n        dest[ name ] = source[ name ];\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\r\n    for( var name in source ) {\r\n        if( dest[ name ] === void 0 ){\r\n            dest[ name ] = source[ name ];\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\n/** Similar to underscore `_.extend` and `Object.assign` */\r\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\r\nexport function assign< T >( dest : T, source : Object ) : T {\r\n    for( var name in source ) {\r\n        if( source.hasOwnProperty( name ) ) {\r\n            dest[ name ] = source[ name ];\r\n        }\r\n    }\r\n\r\n    if( arguments.length > 2 ){\r\n        for( let i = 2; i < arguments.length; i++ ){\r\n            const other = arguments[ i ];\r\n            other && assign( dest, other );\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\n/** Similar to underscore `_.keys` */\r\nexport function keys( o : any ) : string[]{\r\n    return o ? Object.keys( o ) : [];\r\n}\r\n\r\n/** Similar to underscore `_.once` */\r\nexport function once( func : Function ) : Function {\r\n    var memo, first = true;\r\n    return function() {\r\n        if ( first ) {\r\n            first = false;\r\n            memo = func.apply(this, arguments);\r\n            func = null;\r\n        }\r\n        return memo;\r\n    };\r\n}\r\n\r\nconst ArrayProto = Array.prototype,\r\n      DateProto = Date.prototype,\r\n      ObjectProto = Object.prototype;\r\n\r\n/**\r\n * Determine whenever two values are not equal, deeply traversing \r\n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\r\n * values are compared with strict comparison.\r\n */\r\nexport function notEqual( a : any, b : any) : boolean {\r\n    if( a === b ) return false;\r\n\r\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\r\n        const protoA = Object.getPrototypeOf( a );\r\n\r\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\r\n\r\n        switch( protoA ){\r\n            case DateProto   : return +a !== +b;\r\n            case ArrayProto  : return arraysNotEqual( a, b );\r\n            case ObjectProto :\r\n            case null:\r\n                return objectsNotEqual( a, b );\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction objectsNotEqual( a, b ) {\r\n    const keysA = Object.keys( a );\r\n\r\n    if( keysA.length !== Object.keys( b ).length ) return true;\r\n\r\n    for( let i = 0; i < keysA.length; i++ ) {\r\n        const key = keysA[ i ];\r\n\r\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction arraysNotEqual( a, b ) {\r\n    if( a.length !== b.length ) return true;\r\n\r\n    for( let i = 0; i < a.length; i++ ) {\r\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Create an object without Object prototype members except hasOwnProperty.\r\n * @param obj - optional parameter to populate the hash map from.\r\n */\r\nconst HashProto = Object.create( null );\r\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\r\n\r\nexport function hashMap( obj? ){\r\n    const hash = Object.create( HashProto );\r\n    return obj ? assign( hash, obj ) : hash;\r\n}","import { once as _once } from './tools'\r\n\r\n/*******************\r\n * Prebuilt events map, used for optimized bulk event subscriptions.\r\n *\r\n * const events = new EventMap({\r\n *      'change' : true, // Resend this event from self as it is.\r\n *      'change:attr' : 'localTargetFunction',\r\n *      'executedInTargetContext' : function(){ ... }\r\n *      'executedInNativeContext' : '^props.handler'\r\n * })\r\n */\r\nexport interface EventsDefinition {\r\n    [ events : string ] : Function | string | boolean\r\n}\r\n\r\n\r\nexport class EventMap {\r\n    handlers : EventDescriptor[] = [];\r\n\r\n    constructor( map? : EventsDefinition | EventMap ){\r\n        if( map ){\r\n            if( map instanceof EventMap ){\r\n                this.handlers = map.handlers.slice();\r\n            }\r\n            else{\r\n                map && this.addEventsMap( map );\r\n            }\r\n        }\r\n    }\r\n\r\n    merge( map : EventMap ){\r\n        this.handlers = this.handlers.concat( map.handlers );\r\n    }\r\n\r\n    addEventsMap( map : EventsDefinition ){\r\n        for( let names in map ){\r\n            this.addEvent( names, map[ names ] )\r\n        }\r\n    }\r\n\r\n    bubbleEvents( names : string ){\r\n        for( let name of names.split( eventSplitter ) ){\r\n            this.addEvent( name, getBubblingHandler( name ) );\r\n        }\r\n    }\r\n\r\n    addEvent( names : string, callback : Function | string | boolean ){\r\n        const { handlers } = this;\r\n\r\n        for( let name of names.split( eventSplitter ) ){\r\n            handlers.push( new EventDescriptor( name, callback ) );\r\n        }\r\n    }\r\n\r\n    subscribe( target : {}, source : EventSource ){\r\n        for( let event of this.handlers ){\r\n            on( source, event.name, event.callback, target );\r\n        }\r\n    }\r\n\r\n    unsubscribe( target : {}, source : EventSource ){\r\n        for( let event of this.handlers ){\r\n            off( source, event.name, event.callback, target );\r\n        }\r\n    }\r\n}\r\n\r\nexport class EventDescriptor {\r\n    callback : Function\r\n\r\n    constructor(\r\n        public name : string,\r\n        callback : Function | string | boolean\r\n    ){\r\n        if( callback === true ){\r\n            this.callback = getBubblingHandler( name );\r\n        }\r\n        else if( typeof callback === 'string' ){\r\n            this.callback =\r\n                function localCallback(){\r\n                    const handler = this[ callback ];\r\n                    handler && handler.apply( this, arguments );\r\n                };\r\n        }\r\n        else{\r\n            this.callback = <Function>callback;\r\n        }\r\n    }\r\n}\r\n\r\nconst _bubblingHandlers = {};\r\n\r\nfunction getBubblingHandler( event : string ){\r\n    return _bubblingHandlers[ event ] || (\r\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\r\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\r\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\r\n            else trigger2( this, event, a, b );\r\n        }\r\n    );\r\n}\r\n\r\nexport interface HandlersByEvent {\r\n    [ name : string ] : EventHandler\r\n}\r\n\r\nexport class EventHandler {\r\n    constructor( public callback : Callback, public context : any, public next = null ){}\r\n}\r\n\r\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\r\n    const head = _events[ name ];\r\n\r\n    let filteredHead, prev;\r\n\r\n    for( let ev = head; ev; ev = ev.next ){\r\n        // Element must be kept\r\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\r\n            ( context && context !== ev.context ) ){\r\n            \r\n            prev = ev;\r\n            filteredHead || ( filteredHead = ev );\r\n        }\r\n        // Element must be skipped\r\n        else{\r\n            if( prev ) prev.next = ev.next;\r\n        }\r\n    }\r\n\r\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\r\n}\r\n\r\nfunction listSend2( head : EventHandler, a, b ){\r\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\r\n}\r\n\r\nfunction listSend3( head : EventHandler, a, b, c ){\r\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\r\n}\r\n\r\nfunction listSend4( head : EventHandler, a, b, c, d ){\r\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\r\n}\r\n\r\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\r\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\r\n}\r\n\r\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\r\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\r\n}\r\n\r\nexport interface Callback extends Function {\r\n    _callback? : Function\r\n}\r\n\r\n/** @internal */\r\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\r\n    if( callback ){\r\n        const _events = source._events || ( source._events = Object.create( null ) );\r\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\r\n    }\r\n}\r\n\r\n/** @internal */\r\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\r\n    if( callback ){\r\n        const once : Callback = _once( function(){\r\n            off( source, name, once );\r\n            callback.apply(this, arguments);\r\n        });\r\n\r\n        once._callback = callback;\r\n        on( source, name, once, context );\r\n    }\r\n}\r\n\r\n/** @internal */\r\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\r\n    const { _events } = source;\r\n    if( _events ){\r\n        if( callback || context ) {\r\n            if( name ){\r\n                listOff( _events, name, callback, context );\r\n            }\r\n            else{\r\n                for( let name in _events ){\r\n                    listOff( _events, name, callback, context );\r\n                }\r\n            }\r\n        }\r\n        else if( name ){\r\n            _events[ name ] = void 0;\r\n        }\r\n        else{\r\n            source._events = void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface EventSource {\r\n    /** @internal */\r\n    _events : HandlersByEvent\r\n}\r\n\r\nconst eventSplitter = /\\s+/;\r\n\r\n/** @internal */\r\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\r\n    if( eventSplitter.test( events ) ){\r\n        const names = events.split( eventSplitter );\r\n        for( let name of names ) api( source, name, callback, context );\r\n    }\r\n    else api( source, events, callback, context );\r\n}\r\n\r\n/** @internal */\r\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\r\n\r\n/*********************************\r\n * Event-triggering API\r\n */\r\n\r\n/** @internal */\r\nexport function trigger2( self : EventSource, name : string, a, b ) : void {\r\n    const { _events } = self;\r\n    if( _events ){\r\n        const queue = _events[ name ],\r\n            { all } = _events;\r\n\r\n        listSend2( queue, a, b );\r\n        listSend3( all, name, a, b );\r\n    }\r\n};\r\n\r\n/** @internal */\r\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\r\n    const { _events } = self;\r\n    if( _events ){\r\n        const queue = _events[ name ],\r\n            { all } = _events;\r\n\r\n        listSend3( queue, a, b, c );\r\n        listSend4( all, name, a, b, c );\r\n    }\r\n};\r\n\r\n/** @internal */\r\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\r\n    const { _events } = self;\r\n    if( _events ){\r\n        const queue = _events[ name ],\r\n            { all } = _events;\r\n\r\n        listSend5( queue, a, b, c, d, e );\r\n        listSend6( all, name, a, b, c, d, e );\r\n    }\r\n};","/*****************************************************************\r\n * Mixins engine and @define metaprogramming class extensions\r\n *\r\n * Vlad Balin & Volicon, (c) 2016-2017\r\n */\r\nimport { __extends } from 'tslib';\r\nimport { assign, defaults, getBaseClass, hashMap, transform } from './tools';\r\n\r\nexport interface Subclass< T > extends MixableConstructor {\r\n    new ( ...args ) : T\r\n    prototype : T\r\n}\r\n\r\nexport interface MixableConstructor extends Function{\r\n    __super__? : object;\r\n    mixins? : MixinsState;\r\n    onExtend? : ( BaseClass : Function ) => void;\r\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\r\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\r\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\r\n}\r\n\r\nexport interface MixableDefinition {\r\n    mixins? : Mixin[]\r\n}\r\n\r\n/**\r\n * Base class, holding metaprogramming class extensions.\r\n * Supports mixins and Class.define metaprogramming method.\r\n */\r\nexport class Mixable {\r\n    static onExtend : ( BaseClass : Function ) => void;\r\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \r\n    static __super__ : object\r\n    static mixins : MixinsState;\r\n\r\n    /** \r\n     *  Must be called after inheritance and before 'define'.\r\n     */\r\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\r\n        const BaseClass : MixableConstructor = getBaseClass( this );\r\n\r\n        // Assign statics.\r\n        staticProps && assign( this, staticProps );\r\n\r\n        // Extract and apply mixins from the definition.\r\n        const { mixins, ...defineMixin } = protoProps;\r\n        mixins && this.mixins.merge( mixins );\r\n\r\n        // Unshift definition to the the prototype.\r\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\r\n\r\n        // Unshift definition from statics to the prototype.\r\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\r\n\r\n        // Call onDefine hook, if it's present.\r\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\r\n        \r\n        // Apply merge rules to inherited members. No mixins can be added after this point.\r\n        this.mixins.mergeInheritedMembers( BaseClass );\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\r\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\r\n        let TheSubclass : Subclass< T >;\r\n\r\n        // 1. Create the subclass (ES5 compatibility shim).\r\n        // If constructor function is given...\r\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\r\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\r\n            TheSubclass = spec.constructor as any;\r\n            __extends( TheSubclass, this );\r\n        }\r\n        // Otherwise, create the subclall in usual way.\r\n        else{\r\n            TheSubclass = class Subclass extends this {} as any;\r\n        }\r\n\r\n        predefine( TheSubclass );\r\n        spec && TheSubclass.define( spec, statics );\r\n\r\n        return TheSubclass;\r\n    }\r\n}\r\n\r\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\r\n * Forwards the call to the [[Mixable.predefine]];\r\n */\r\nexport function predefine( Constructor : MixableConstructor ) : void {\r\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\r\n\r\n    // Legacy systems support\r\n    Constructor.__super__ = BaseClass.prototype;\r\n    \r\n    // Initialize mixins structures...\r\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\r\n\r\n    // Make sure Ctor.mixins are ready before the callback...\r\n    MixinsState.get( Constructor );\r\n\r\n    // Call extend hook.\r\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\r\n}\r\n\r\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\r\n *  Forwards the call to [[Mixable.define]].\r\n */\r\nexport function define( ClassOrDefinition : Function ) : void;\r\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\r\nexport function define( ClassOrDefinition : object | MixableConstructor ){\r\n    // @define class\r\n    if( typeof ClassOrDefinition === 'function' ){\r\n        predefine( ClassOrDefinition );\r\n        ( ClassOrDefinition as MixableConstructor ).define();\r\n    }\r\n    // @define({ prop : val, ... }) class\r\n    else{\r\n        return function( Ctor : MixableConstructor ){\r\n            predefine( Ctor );\r\n            Ctor.define( ClassOrDefinition );\r\n        } as any;\r\n    }\r\n}\r\n\r\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\r\n    return ( Class : Function ) => {\r\n        const mixins = MixinsState.get( Class );\r\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\r\n    }\r\n}\r\n\r\n// Create simple property list decorator\r\nexport function propertyListDecorator( listName: string ) : PropertyDecorator {\r\n    return function propList(proto, name : string) {\r\n        const list = proto.hasOwnProperty( listName ) ?\r\n            proto[ listName ] : (proto[ listName ] = (proto[ listName ] || []).slice());  \r\n\r\n        list.push(name);\r\n    }\r\n}\r\n\r\nexport function definitionDecorator( definitionKey, value ){\r\n    return ( proto : object, name : string ) => {\r\n        MixinsState\r\n            .get( proto.constructor )\r\n            .mergeObject( proto, {\r\n                [ definitionKey ] : {\r\n                    [ name ] : value\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport class MixinsState {\r\n    mergeRules : MixinMergeRules;\r\n    definitionRules : MixinMergeRules;\r\n    definitions : object = {};\r\n    appliedMixins : Mixin[];\r\n\r\n    // Return mixins state for the class. Initialize if it's not exist.\r\n    static get( Class ) : MixinsState {\r\n        const { mixins } = Class;\r\n    \r\n        return mixins && Class === mixins.Class ? mixins :\r\n             Class.mixins = new MixinsState( Class );\r\n    }\r\n\r\n    constructor( public Class : MixableConstructor ){\r\n        const { mixins } = getBaseClass( Class );\r\n\r\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\r\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\r\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\r\n    }\r\n\r\n    getStaticDefinitions( BaseClass : Function ){\r\n        const definitions = hashMap(),\r\n            { Class } = this;\r\n\r\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\r\n            if( BaseClass[ name ] !== Class[ name ]){\r\n                return Class[ name ];\r\n            }\r\n        });\r\n    }\r\n\r\n    merge( mixins : Mixin[] ){\r\n        const proto      = this.Class.prototype,\r\n            { mergeRules } = this;\r\n\r\n        // Copy applied mixins array as it's going to be updated.\r\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\r\n\r\n        // Apply mixins in sequence...\r\n        for( let mixin of mixins ) {\r\n            // Mixins array should be flattened.\r\n            if( Array.isArray( mixin ) ) {\r\n                this.merge( mixin );\r\n            }\r\n            // Don't apply mixins twice.\r\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\r\n                appliedMixins.push( mixin );\r\n\r\n                // For constructors, merge _both_ static and prototype members.\r\n                if( typeof mixin === 'function' ){\r\n                    // Merge static members\r\n                    this.mergeObject( this.Class, mixin );\r\n\r\n                    // merge definitionRules and mergeRules\r\n                    const sourceMixins = ( mixin as any ).mixins;\r\n                    if( sourceMixins ){\r\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\r\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\r\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\r\n                    }\r\n\r\n                    // Prototypes are merged according with rules.\r\n                    this.mergeObject( proto, mixin.prototype );\r\n                }\r\n                // Handle plain object mixins.\r\n                else {\r\n                    this.mergeObject( proto, mixin );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    populate( ...ctors : Function[] ){\r\n        for( let Ctor of ctors ) {\r\n            MixinsState.get( Ctor ).merge([ this.Class ]);\r\n        }\r\n    }\r\n\r\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\r\n        forEachOwnProp( source, name => {\r\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\r\n            let rule : MixinMergeRule;\r\n\r\n            if( rule = this.definitionRules[ name ] ){\r\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\r\n            }\r\n\r\n            if( !rule || rule === mixinRules.protoValue  ){\r\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\r\n            }\r\n        });\r\n    }\r\n\r\n    mergeInheritedMembers( BaseClass : Function ){\r\n        const { mergeRules, Class } = this;\r\n\r\n        if( mergeRules ){\r\n            const proto = Class.prototype,\r\n                baseProto = BaseClass.prototype;\r\n\r\n            for( let name in mergeRules ) {\r\n                const rule = mergeRules[ name ];\r\n\r\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\r\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst dontMix = {\r\n    function : hashMap({\r\n        length : true,\r\n        prototype : true,\r\n        caller : true,\r\n        arguments : true,\r\n        name : true,\r\n        __super__ : true\r\n    }),\r\n    \r\n    object : hashMap({\r\n        constructor : true\r\n    })    \r\n}\r\n\r\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\r\n    const ignore = dontMix[ typeof object ];\r\n\r\n    for( let name of Object.getOwnPropertyNames( object ) ) {\r\n        ignore[ name ] || fun( name );\r\n    }\r\n}\r\n\r\nexport interface MixinMergeRules {\r\n    [ name : string ] : MixinMergeRule\r\n}\r\n\r\nexport type MixinMergeRule = ( a : any, b : any ) => any\r\nexport type Mixin = { [ key : string ] : any } | Function\r\n\r\n// @mixins( A, B, ... ) decorator.\r\nexport interface MixinRulesDecorator {\r\n    ( rules : MixinMergeRules ) : ClassDecorator\r\n    value( a : object, b : object) : object;\r\n    protoValue( a : object, b : object) : object;\r\n    merge( a : object, b : object ) : object;\r\n    pipe( a: Function, b : Function ) : Function;\r\n    defaults( a: Function, b : Function ) : Function;\r\n    classFirst( a: Function, b : Function ) : Function;\r\n    classLast( a: Function, b : Function ) : Function;\r\n    every( a: Function, b : Function ) : Function;\r\n    some( a: Function, b : Function ) : Function;\r\n}\r\n\r\nexport const mixins = ( ...list : Mixin[] ) => (\r\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\r\n);\r\n\r\n// @mixinRules({ name : rule, ... }) decorator.\r\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\r\n    ( Class : Function ) => {\r\n        const mixins = MixinsState.get( Class );\r\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\r\n    }\r\n) ) as MixinRulesDecorator;\r\n\r\n// Pre-defined mixin merge rules\r\n\r\nmixinRules.value = ( a, b ) => a;\r\n\r\nmixinRules.protoValue = ( a, b ) => a;\r\n\r\n// Recursively merge members\r\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\r\n\r\n    // Execute methods in pipe, with the class method executed last.\r\nmixinRules.pipe = ( a, b ) => (\r\n    function( x : any ) : any {\r\n        return a.call( this, b.call( this, x ) );\r\n    }\r\n);\r\n\r\n    // Assume methods return an object, and merge results with defaults (class method executed first)\r\nmixinRules.defaults = ( a : Function, b : Function ) => (\r\n    function() : object {\r\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\r\n    }\r\n);\r\n\r\n// Execute methods in sequence staring with the class method.\r\nmixinRules.classFirst = ( a : Function, b : Function ) => (\r\n    function() : void {\r\n        a.apply( this, arguments );\r\n        b.apply( this, arguments );\r\n    }\r\n);\r\n\r\n    // Execute methods in sequence ending with the class method.\r\nmixinRules.classLast = ( a : Function, b : Function ) => (\r\n    function() : void {\r\n        b.apply( this, arguments );\r\n        a.apply( this, arguments );\r\n    }\r\n)\r\n\r\n    // Execute methods in sequence returning the first falsy result.\r\nmixinRules.every = ( a : Function, b : Function ) =>(\r\n    function() : any {\r\n        return a.apply( this, arguments ) && b.apply( this, arguments );\r\n    }\r\n);\r\n    // Execute methods in sequence returning the first truthy result.\r\nmixinRules.some = ( a : Function, b : Function ) =>(\r\n    function() : any {\r\n        return a.apply( this, arguments ) || b.apply( this, arguments );\r\n    }\r\n);\r\n\r\n/**\r\n * Helpers\r\n */\r\n\r\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\r\n// Destination prop is defined, thus the merge rules must be applied.\r\n    if( dest.hasOwnProperty( name ) ){\r\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\r\n\r\n        if( destProp.configurable && 'value' in destProp ){\r\n            dest[ name ] = unshift ?\r\n                resolveRule( sourceProp.value, destProp.value, rule ) :\r\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\r\n        }\r\n    }\r\n    // If destination is empty, just copy the prop over.\r\n    else{\r\n        Object.defineProperty( dest, name, sourceProp );\r\n    }\r\n}\r\n\r\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\r\n    // When destination is empty, take the source.\r\n    if( dest === void 0 ) return source;\r\n\r\n    // In these cases we take non-empty destination:\r\n    if( !rule || source === void 0 ) return dest;\r\n\r\n    // In other cases we must merge values.\r\n    return rule( dest, source );\r\n}","import * as _eventsApi from './eventsource';\r\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource';\r\nimport { define, definitions, Mixable, MixableConstructor, mixinRules, MixinsState } from './mixins';\r\nimport { omit, transform } from './tools';\r\n\r\nconst { strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\r\n\r\nlet _idCount = 0;\r\n\r\nfunction uniqueId() : string {\r\n    return 'l' + _idCount++;\r\n}\r\n\r\nexport { EventMap, EventsDefinition };\r\n\r\nexport interface MessengerDefinition {\r\n    _localEvents? : EventMap\r\n    localEvents? : EventsDefinition\r\n    properties? : PropertyMap\r\n    [ name : string ] : any\r\n}\r\n\r\nexport interface PropertyMap {\r\n    [ name : string ] : Property\r\n}\r\n\r\nexport type Property = PropertyDescriptor | ( () => any )\r\n\r\nexport interface MessengersByCid {\r\n    [ cid : string ] : Messenger\r\n}\r\n\r\nexport type EventCallbacks<Context> = { [ events : string ] : EventCallback<Context> }\r\nexport type EventCallback<Context> = ( this : Context, ...args : any[] ) => void\r\n\r\n/*************************\r\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\r\n * This class itself can serve as both mixin and base class.\r\n */\r\n\r\n@define\r\n@definitions({\r\n    properties : mixinRules.merge,\r\n    localEvents : mixinRules.merge\r\n})\r\nexport class Messenger implements Mixable, EventSource {\r\n    // Define extendable mixin static properties.\r\n    /** @internal */\r\n    static __super__ : object;\r\n    static mixins : MixinsState;\r\n    static onExtend : ( BaseClass : Function ) => void;\r\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\r\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\r\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\r\n        // Handle localEvents definition\r\n        if( localEvents || _localEvents ){\r\n            const eventsMap = new EventMap( this.prototype._localEvents );\r\n\r\n            localEvents && eventsMap.addEventsMap( localEvents );\r\n            _localEvents && eventsMap.merge( _localEvents );\r\n            \r\n            this.prototype._localEvents = eventsMap;\r\n        }\r\n\r\n        // Handle properties definitions...\r\n        if( properties ){\r\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\r\n        }\r\n    }\r\n\r\n    /** @internal */ \r\n    _events : HandlersByEvent = void 0;\r\n\r\n    /** @internal */ \r\n    _listeningTo : MessengersByCid = void 0\r\n\r\n    /** Unique client-only id. */\r\n    cid : string\r\n\r\n    /** @internal Prototype-only property to manage automatic local events subscription */ \r\n    _localEvents : EventMap\r\n\r\n    constructor(){\r\n        this.cid = uniqueId();\r\n        this.initialize.apply( this, arguments );\r\n\r\n        // TODO: local events subscribe?\r\n    }\r\n\r\n    /** Method is called at the end of the constructor */\r\n    initialize() : void {}\r\n    \r\n    on( events : string | EventCallbacks<this>, callback?, context? ) : this {\r\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\r\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\r\n\r\n        return this;\r\n    }\r\n\r\n    once( events : string | EventCallbacks<this>, callback?, context? ) : this {\r\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\r\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\r\n\r\n        return this;\r\n    }\r\n\r\n    off( events? : string | EventCallbacks<this>, callback?, context? ) : this {\r\n        if( !events ) off( this, void 0, callback, context );\r\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\r\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\r\n\r\n        return this;\r\n    }\r\n\r\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\r\n    // passed the same arguments as `trigger` is, apart from the event name\r\n    // (unless you're listening on `\"all\"`, which will cause your callback to\r\n    // receive the true name of the event as the first argument).\r\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\r\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\r\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\r\n        else trigger2( this, name, a, b );\r\n        return this;\r\n    }\r\n\r\n    listenTo( source : Messenger, a : string | EventCallbacks<this>, b? : Function ) : this {\r\n        if( source ){\r\n            addReference( this, source );\r\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    listenToOnce( source : Messenger, a : string | EventCallbacks<this>, b? : Function ) : this {\r\n        if( source ){\r\n            addReference( this, source );\r\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    stopListening( a_source? : Messenger, a? : string | EventCallbacks<this>, b? : Function ) : this {\r\n        const { _listeningTo } = this;\r\n        if( _listeningTo ){\r\n            const removeAll = !( a || b ),\r\n                  second = !b && typeof a === 'object' ? this : b;\r\n\r\n            if( a_source ){\r\n                const source = _listeningTo[ a_source.cid ];\r\n                if( source ){\r\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\r\n                    source.off( a, second, this );\r\n                }\r\n            }\r\n            else if( a_source == null ){\r\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\r\n\r\n                if( removeAll ) ( this._listeningTo = void 0 );\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destructor. Stops messenger from listening to all objects,\r\n     * and stop others from listening to the messenger. \r\n     */\r\n    _disposed : boolean\r\n\r\n    dispose() : void {\r\n        if( this._disposed ) return;\r\n\r\n        this.stopListening();\r\n        this.off();\r\n\r\n        this._disposed = true;\r\n    }\r\n}\r\n\r\n/**\r\n * Backbone 1.2 API conformant Events mixin.\r\n */\r\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\r\n\r\n/**\r\n * Messenger Private Helpers \r\n */\r\n\r\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\r\n    if( x ){\r\n        return typeof x === 'function' ? { get : < () => any >x, configurable : true } : <PropertyDescriptor> x;\r\n    }\r\n}\r\n\r\nfunction addReference( listener : Messenger, source : Messenger ){\r\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\r\n            cid = source.cid || ( source.cid = uniqueId() );\r\n\r\n      listeningTo[ cid ] = source;\r\n}","import { Messenger } from './events'\r\nimport { define } from './mixins';\r\n\r\nexport type LogLevel = 'error' | 'warn' | 'debug' | 'info' | 'log';\r\nexport type LoggerEventHandler = ( topic : string, msg : string, props : object )  => void;\r\n\r\nexport const isProduction = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production',\r\n    logEvents : LogLevel[] =  isProduction ?\r\n        [ 'error', 'info' ] :\r\n        [ 'error', 'warn', 'debug', 'info', 'log' ];\r\n\r\n@define\r\nexport class Logger extends Messenger {\r\n    counter : { [ level in LogLevel ]? : number } = {}\r\n\r\n    // Log events of the given log level to the console, optionally filtered by topic\r\n    logToConsole( level : LogLevel, filter? : RegExp ) : this {\r\n        return this.on( level, ( topic, msg, props ) => {\r\n            if( !filter || filter.test( topic ) ){\r\n                const args = [ `[${topic}] ${msg}` ];\r\n        \r\n                for( let name in props ){\r\n                    args.push( `\\n\\t${name}:`, toString( props[ name ] ) );\r\n                }\r\n        \r\n                console[ level ].apply( console, args );\r\n            }\r\n        });\r\n    }\r\n\r\n    // Fire exception on the events of the given log level, optionally filtered by topic\r\n    throwOn( level : LogLevel, filter? : RegExp ) : this {\r\n        return this.on( level, ( topic, msg, props ) => {\r\n            if( !filter || filter.test( topic ) ){\r\n                throw new Error( `[${topic}] ${msg}` );\r\n            }\r\n        });\r\n    }\r\n\r\n    // Count log events of the given level, optionally filtered by topic\r\n    count( level : LogLevel, filter? : RegExp ) : this {\r\n        return this.on( level, ( topic, msg, props ) => {\r\n            if( !filter || filter.test( topic ) ){\r\n                this.counter[ level ] = ( this.counter[ level ] || 0 ) + 1;\r\n            }\r\n        });\r\n    }\r\n\r\n    trigger : ( level : LogLevel, topic : string, message : string, props? : object ) => this;\r\n    \r\n    off : ( event? : LogLevel ) => this;\r\n\r\n\r\n    on( handlers : { [ name in LogLevel ] : LoggerEventHandler } ) : this;\r\n    on( handlers : LogLevel, handler : LoggerEventHandler ) : this;\r\n    on( handlers : 'all', handler : ( level : LogLevel, topic : string, msg : string, props : object )  => void ) : this;\r\n    on( a : any, b? : any ){\r\n        return super.on( a, b );\r\n    }\r\n}\r\n\r\n/**\r\n * Convert objects to the plain text friendly format.\r\n * primitives as in JSON.\r\n */\r\nlet toString = typeof window === 'undefined' ? \r\n    something => {\r\n        if( something && typeof something === 'object' ){\r\n            const { __inner_state__ } = something,\r\n                value = __inner_state__ || something,\r\n                isArray = Array.isArray( value );\r\n\r\n            const body = isArray ? `[ length = ${ value.length } ]` : `{ ${ Object.keys( value ).join( ', ' )} }`;\r\n\r\n            return something.constructor.name + ' ' + body;\r\n        }\r\n\r\n        return JSON.stringify( something );\r\n    }\r\n    : x => x;\r\n\r\nexport const logger = new Logger();\r\n\r\nif( typeof console !== 'undefined' ) {\r\n    for( let event of logEvents ){\r\n        logger.logToConsole( event );\r\n    }\r\n}\r\n\r\nexport const throwingLogger = new Logger();\r\nthrowingLogger.throwOn( 'error' ).throwOn( 'warn' );\r\n\r\nexport const log : typeof logger.trigger = logger.trigger.bind( logger );","export interface IONode {\r\n    /** @internal */\r\n    _endpoint : IOEndpoint\r\n\r\n    /** @internal */\r\n    _ioPromise : IOPromise< this >\r\n}\r\n\r\nexport interface IOPromise<T> extends Promise<T> {\r\n    abort? : () => void\r\n}\r\n\r\nexport interface IOEndpoint {\r\n    list( options : IOOptions, collection? ) : IOPromise<any>\r\n    create( json : any, options : IOOptions, record? ) : IOPromise<any>\r\n    update( id : string | number, json :any, options : IOOptions, record? ) : IOPromise<any>\r\n    read( id : string | number, options : IOOptions, record? ) : IOPromise<any>\r\n    destroy( id : string | number, options : IOOptions, record? ) : IOPromise<any>\r\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\r\n    unsubscribe( events : IOEvents, collection? ) : void\r\n}\r\n\r\nexport interface IOOptions {\r\n    ioMethod? : 'save' | 'fetch'\r\n}\r\n\r\nexport interface IOEvents {\r\n    updated? : ( json : any ) => void\r\n    removed? : ( json : any ) => void\r\n}\r\n\r\nexport function getOwnerEndpoint( self ) : IOEndpoint {\r\n    // Check if we are the member of the collection...\r\n    const { collection } = self;\r\n    if( collection ){\r\n        return getOwnerEndpoint( collection );\r\n    }\r\n\r\n    // Now, if we're the member of the model...\r\n    if( self._owner ){\r\n        const { _endpoints } = self._owner;\r\n        return _endpoints && _endpoints[ self._ownerKey ];\r\n    }\r\n}\r\n\r\n/**\r\n * Create abortable promise.\r\n * Adds `promise.abort()` function which rejects the promise by default\r\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\r\n * which can be used to add custom abort handling.\r\n */\r\ndeclare var Promise: PromiseConstructorLike;\r\n\r\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\r\n    let resolve, reject, onAbort;\r\n\r\n    function abort( fn ){\r\n        onAbort = fn;\r\n    }\r\n\r\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\r\n        reject = a_reject;\r\n        resolve = a_resolve;\r\n        initialize( resolve, reject, abort );\r\n    }) as IOPromise<any>;\r\n\r\n    promise.abort = () => {\r\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\r\n    }\r\n\r\n    return promise;\r\n}\r\n\r\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\r\n\r\nexport function startIO( self : IONode, promise : IOPromise<any>, options : IOOptions, thenDo : ( json : any ) => any ) : IOPromise<any> {\r\n    // Stop pending I/O first...\r\n    abortIO( self );\r\n\r\n    self._ioPromise = promise\r\n        .then( resp => {\r\n            self._ioPromise = null;\r\n    \r\n            const result = thenDo ? thenDo( resp ) : resp;\r\n                \r\n            triggerAndBubble( self, 'sync', self, resp, options );\r\n                \r\n            return result;\r\n        } )  \r\n        .catch( err => {\r\n            self._ioPromise = null;\r\n            \r\n            // Overlaps with a new `error` event.\r\n            triggerAndBubble( self, 'error', self, err, options );\r\n            \r\n            throw err;\r\n        } ) as IOPromise<any>;\r\n\r\n    self._ioPromise.abort = promise.abort;\r\n\r\n    return self._ioPromise;\r\n}\r\n\r\nexport function abortIO( self : IONode ){\r\n    if( self._ioPromise && self._ioPromise.abort ){\r\n        self._ioPromise.abort();\r\n        self._ioPromise = null;\r\n    }\r\n}\r\n\r\nexport function triggerAndBubble( eventSource, ...args ){\r\n    eventSource.trigger.apply( eventSource, args );\r\n    const { collection } = eventSource;\r\n    collection && collection.trigger.apply( collection, args ); \r\n}","/**\r\n * Traversable objects and symbolic references\r\n */\r\nexport interface Traversable {\r\n    getStore() : Traversable\r\n    getOwner() : Traversable\r\n    get( key : string ) : any \r\n}\r\n\r\nconst referenceMask =  /\\^|(store\\.[^.]+)|([^.]+)/g;\r\n\r\n// Compile reference to function\r\nexport type ResolveReference = ( root : Traversable ) => any;  \r\n\r\nexport class CompiledReference {\r\n    resolve : ResolveReference\r\n    tail : string\r\n    local : boolean\r\n\r\n    constructor( reference : string, splitTail : boolean = false ){\r\n        const path = reference\r\n                        .match( referenceMask )\r\n                        .map( key => {\r\n                            if( key === '^' || key === 'owner' ) return 'getOwner()';\r\n\r\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\r\n\r\n                            if( key.indexOf( 'store.' ) === 0 ) return `getStore().get(\"${ key.substr( 6 ) }\")`;\r\n                            \r\n                            return key;\r\n                        } );\r\n               \r\n        this.tail = splitTail && path.pop();\r\n        this.local = !path.length;\r\n        \r\n        this.resolve = <any> new Function( 'self', `\r\n            var v = self.${ path.shift() };\r\n                           \r\n            ${ path.map( x => `\r\n                v = v && v.${ x };\r\n            `).join('')}\r\n\r\n            return v;\r\n        ` );\r\n    }\r\n}\r\n\r\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\r\n    const path = reference.match( referenceMask ),\r\n          skip = path.length - 1;\r\n    \r\n    let self = root;\r\n\r\n    for( var i = 0; i < skip; i++ ){\r\n        const key = path[ i ];\r\n        switch( key ){\r\n            case '~' : self = self.getStore(); break;\r\n            case '^' : self = self.getOwner(); break;\r\n            default  : self = self.get( key );\r\n        }\r\n\r\n        // Do nothing if object on the path doesn't exist.\r\n        if( !self ) return;\r\n    }\r\n\r\n    return action( self, path[ skip ] );\r\n}","export interface ChildrenErrors {\r\n    [ key : string ] : ValidationError | any\r\n} \r\n\r\nexport interface Validatable {\r\n    /** @internal */\r\n    _validateNested( errors : ChildrenErrors ) : number;\r\n    \r\n    validate( self : any ) : any\r\n    get( key : string ) : any\r\n}\r\n\r\n// Validation error object.\r\nexport class ValidationError {\r\n    // Invalid nested object keys \r\n    nested : ChildrenErrors \r\n    length : number\r\n\r\n    // Local error\r\n    error : any\r\n\r\n    constructor( obj : Validatable ){\r\n        this.length = obj._validateNested( this.nested = {} );\r\n\r\n        if( this.error = obj.validate( obj ) ){\r\n            this.length++;\r\n        }\r\n    }\r\n\r\n    each( iteratee : ( value : any, key : string ) => void ) : void {\r\n        const { error, nested } = this;\r\n\r\n        if( error ) iteratee( error, null );\r\n\r\n        for( const key in nested ){\r\n            iteratee( nested[ key ], key );\r\n        }\r\n    }\r\n\r\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\r\n        this.each( ( value : any, key : string ) => {\r\n            if( value instanceof ValidationError ){\r\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\r\n            }\r\n            else{\r\n                iteratee( value, key, object );\r\n            }\r\n        });\r\n    }\r\n}","import { abortIO, IOEndpoint, IONode, IOPromise } from './io-tools';\r\nimport { EventCallbacks, define, definitions, eventsApi, Logger, LogLevel, Messenger, MessengerDefinition, MessengersByCid, mixinRules, mixins, MixinsState, throwingLogger } from './object-plus';\r\nimport { resolveReference, Traversable } from './traversable';\r\nimport { ChildrenErrors, Validatable, ValidationError } from './validation';\r\n\r\nconst { trigger3, on, off } = eventsApi;\r\n/***\r\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \r\n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\r\n * 2. transaction.commit() - send and process all change events, and close transaction.\r\n */\r\n\r\n/** @private */\r\nexport interface TransactionalDefinition extends MessengerDefinition {\r\n    endpoint? : IOEndpoint\r\n}\r\n\r\nexport enum ItemsBehavior {\r\n    share       = 0b0001,\r\n    listen      = 0b0010,\r\n    persistent  = 0b0100\r\n}\r\n\r\n// Transactional object interface\r\n\r\nexport interface Transactional extends Messenger {}\r\n\r\n@define\r\n@definitions({\r\n    endpoint : mixinRules.value\r\n})\r\n@mixins( Messenger )\r\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\r\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\r\n    // Here goes 'Mixable' mixin.\r\n    static endpoint : IOEndpoint;\r\n    \r\n    /** @internal */\r\n    static __super__ : object;\r\n    \r\n    static mixins : MixinsState;\r\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\r\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\r\n\r\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\r\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\r\n        Messenger.onDefine.call( this, definitions, BaseClass );\r\n    };\r\n\r\n    static onExtend( BaseClass : typeof Transactional ) : void {\r\n        // Make sure we don't inherit class factories.\r\n        if( BaseClass.create === this.create ) {\r\n            this.create = Transactional.create;\r\n        }\r\n    }\r\n\r\n    // Define extendable mixin static properties.\r\n    static create<M extends new ( ...args ) => any>( this : M, a? : any, b? : any ) : InstanceType<M> {\r\n        return new (this as any)( a, b );\r\n    }\r\n\r\n    // State accessor.\r\n    /** @internal */\r\n    readonly __inner_state__ : any;\r\n\r\n    // Shared modifier (used by collections of shared models)\r\n    /** @internal */\r\n    _shared? : number; \r\n    \r\n    dispose() : void {\r\n        if( this._disposed ) return;\r\n        \r\n        abortIO( this );\r\n        this._owner = void 0;\r\n        this._ownerKey = void 0;\r\n        this.off();\r\n        this.stopListening();\r\n        this._disposed = true;\r\n    }\r\n    \r\n    cidPrefix : string\r\n\r\n    // Unique version token replaced on change\r\n    /** @internal */\r\n    _changeToken : {} = {}\r\n\r\n    // true while inside of the transaction\r\n    /** @internal */\r\n    _transaction : boolean = false;\r\n\r\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\r\n    /** @internal */\r\n    _isDirty  : TransactionOptions = null;\r\n\r\n    // Backreference set by owner (Record, Collection, or other object)\r\n    /** @internal */\r\n    _owner : Owner = void 0;\r\n\r\n    // Key supplied by owner. Used by record to identify attribute key.\r\n    // Only collections doesn't set the key, which is used to distinguish collections.\r\n    /** @internal */ \r\n    _ownerKey : string = void 0;\r\n\r\n    // Name of the change event\r\n    /** @internal */\r\n    _changeEventName : string\r\n\r\n    /**\r\n     * Subsribe for the changes.\r\n     */\r\n    onChanges( handler : Function, target? : Messenger ){\r\n        on( this, this._changeEventName, handler, target );\r\n    }\r\n\r\n    /**\r\n     * Unsubscribe from changes.\r\n     */\r\n    offChanges( handler? : Function, target? : Messenger ){\r\n        off( this, this._changeEventName, handler, target );\r\n    }\r\n\r\n    /**\r\n     * Listen to changes event. \r\n     */\r\n    listenToChanges( target : Transactional, handler ){\r\n        this.listenTo( target, target._changeEventName, handler );\r\n    }\r\n\r\n    constructor( cid : string | number ){\r\n        this.cid = this.cidPrefix + cid;\r\n    }\r\n\r\n    // Deeply clone ownership subtree\r\n    abstract clone( options? : CloneOptions ) : this\r\n    \r\n    // Execute given function in the scope of ad-hoc transaction.\r\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\r\n        const isRoot = transactionApi.begin( this );\r\n        const update = fun.call( this, this );\r\n        update && this.set( update );\r\n        isRoot && transactionApi.commit( this );\r\n    }\r\n\r\n    // Assign transactional object \"by value\", copying aggregated items.\r\n    assignFrom( source : Transactional | Object ) : this {\r\n        // Need to delay change events until change token willl by synced.\r\n        this.transaction( () =>{\r\n            this.set( ( <any>source ).__inner_state__ || source, { merge : true } );\r\n\r\n            // Synchronize change tokens\r\n            const { _changeToken } = source as any;\r\n    \r\n            if( _changeToken ){\r\n                this._changeToken = _changeToken;\r\n            }    \r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    // Create object from JSON. Throw if validation fail.\r\n    static from<T extends new ( a?, b? ) => Transactional >( this : T, json : any, { strict, ...options }  : { strict? : boolean } & TransactionOptions = {} ) :  InstanceType<T>{\r\n        const obj : Transactional = ( this as any ).create( json, { ...options, logger : strict ? throwingLogger : void 0 } );\r\n\r\n        if( strict && obj.validationError ){\r\n            obj.eachValidationError( ( error, key, obj ) => {\r\n                throw new Error( `${ obj.getClassName() }.${ key }: ${ error }` );\r\n            });\r\n        }\r\n\r\n        return obj as any;\r\n    }\r\n\r\n    // Apply bulk object update without any notifications, and return open transaction.\r\n    // Used internally to implement two-phase commit.\r\n    // Returns null if there are no any changes.\r\n    /** @internal */\r\n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\r\n\r\n    // Apply bulk in-place object update in scope of ad-hoc transaction \r\n    abstract set( values : any, options? : TransactionOptions ) : this;\r\n\r\n    \r\n    // Parse function applied when 'parse' option is set for transaction.\r\n    parse( data : any, options? : TransactionOptions ) : any { return data }\r\n\r\n    // Convert object to the serializable JSON structure\r\n    abstract toJSON( options? : object ) : {}\r\n\r\n    /*******************\r\n     * Traversals and member access\r\n     */\r\n    \r\n    // Get object member by its key.\r\n    abstract get( key : string ) : any\r\n\r\n    // Get object member by symbolic reference.\r\n    deepGet( reference : string ) : any {\r\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\r\n    }\r\n\r\n    //_isCollection : boolean\r\n\r\n    // Return owner skipping collections.\r\n    getOwner() : Owner {\r\n        return this._owner;\r\n    }\r\n\r\n    // Store used when owner chain store lookup failed. Static value in the prototype. \r\n    /** @internal */\r\n    _defaultStore : Transactional\r\n\r\n    // Locate the closest store. Store object stops traversal by overriding this method. \r\n    getStore() : Transactional {\r\n        const { _owner } = this;\r\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\r\n    }\r\n\r\n\r\n    /***************************************************\r\n     * Iteration API\r\n     */\r\n\r\n    // Loop through the members. Must be efficiently implemented in container class.\r\n\r\n    /** @internal */\r\n    _endpoint : IOEndpoint\r\n    \r\n    /** @internal */\r\n    _ioPromise : IOPromise<this>\r\n\r\n    hasPendingIO() : IOPromise<this> { return this._ioPromise; }\r\n\r\n    //fetch( options? : object ) : IOPromise<this> { throw new Error( \"Not implemented\" ); }\r\n\r\n    getEndpoint() : IOEndpoint {\r\n        return getOwnerEndpoint( this ) || this._endpoint;\r\n    }\r\n    \r\n    /*********************************\r\n     * Validation API\r\n     */\r\n\r\n    // Lazily evaluated validation error\r\n    /** @internal */\r\n    _validationError : ValidationError = void 0\r\n\r\n    // Validate ownership tree and return valudation error \r\n    get validationError() : ValidationError {\r\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\r\n        return error.length ? error : null; \r\n    }\r\n\r\n    // Validate nested members. Returns errors count.\r\n    /** @internal */\r\n    abstract _validateNested( errors : ChildrenErrors ) : number\r\n\r\n    // Object-level validator. Returns validation error.\r\n    validate( obj? : Transactional ) : any {}\r\n\r\n    // Return validation error (or undefined) for nested object with the given key. \r\n    getValidationError( key? : string ) : any {\r\n        var error = this.validationError;\r\n        return ( key ? error && error.nested[ key ] : error ) || null;\r\n    }\r\n\r\n    // Get validation error for the given symbolic reference.\r\n    deepValidationError( reference : string ) : any {\r\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\r\n    }\r\n\r\n    // Iterate through all validation errors across the ownership tree.\r\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\r\n        const { validationError } = this;\r\n        validationError && validationError.eachError( iteratee, this );\r\n    }\r\n\r\n    // Check whenever member with a given key is valid. \r\n    isValid( key? : string ) : boolean {\r\n        return !this.getValidationError( key );\r\n    }\r\n\r\n    valueOf() : Object { return this.cid; }\r\n    toString(){ return this.cid; }\r\n\r\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\r\n    getClassName() : string {\r\n        const { name } = <any>this.constructor;\r\n        if( name !== 'Subclass' ) return name;\r\n    }\r\n\r\n    // Logging interface for run time errors and warnings.\r\n    /** @internal */\r\n    abstract _log( level : LogLevel, topic : string, text : string, value : any, logger? : Logger ) : void\r\n}\r\n\r\nexport interface CloneOptions {\r\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\r\n    pinStore? : boolean\r\n}\r\n\r\n// Owner must accept children update events. It's an only way children communicates with an owner.\r\n/** @private */\r\nexport interface Owner extends Traversable, Messenger {\r\n    /** @internal */\r\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\r\n    \r\n    getOwner() : Owner\r\n    getStore() : Transactional\r\n}\r\n\r\n// Transaction object used for two-phase commit protocol.\r\n// Must be implemented by subclasses.\r\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\r\n/** @private */ \r\nexport interface Transaction {\r\n    // Object transaction is being made on.\r\n    object : Transactional\r\n\r\n    // Send out change events, process update triggers, and close transaction.\r\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\r\n    commit( initiator? : Transactional )\r\n}\r\n\r\n// Options for distributed transaction  \r\nexport interface TransactionOptions {\r\n    // Invoke parsing \r\n    parse? : boolean\r\n\r\n    // Optional logger\r\n    logger? : Logger\r\n\r\n    // Suppress change notifications and update triggers\r\n    silent? : boolean\r\n\r\n    // Update existing transactional members in place, or skip the update (ignored by models)\r\n    merge? : boolean // =true\r\n\r\n    // Should collections remove elements in set (ignored by models)  \r\n    remove? : boolean // =true\r\n\r\n    // Always replace enclosed objects with new instances\r\n    reset? : boolean // = false\r\n\r\n    // Do not dispose aggregated members\r\n    unset? : boolean\r\n\r\n    validate? : boolean\r\n\r\n    // IO method name if the transaction is initiated as a result of IO operation\r\n    ioMethod? : 'save' | 'fetch'\r\n\r\n    // The hint for IOEndpoint\r\n    // If `true`, `record.save()` will behave as \"upsert\" operation for the records having id.\r\n    upsert? : boolean\r\n}\r\n\r\n/**\r\n * Low-level transactions API. Must be used like this:\r\n * const isRoot = begin( record );\r\n * ...\r\n * isRoot && commit( record, options );\r\n * \r\n * When committing nested transaction, the flag must be set to true. \r\n * commit( object, options, isNested ) \r\n */\r\n\r\nexport const transactionApi = {\r\n    // Start transaction. Return true if it's the root one.\r\n    /** @private */\r\n    begin( object : Transactional ) : boolean {\r\n        return object._transaction ? false : ( object._transaction = true );  \r\n    },\r\n\r\n    // Mark object having changes inside of the current transaction.\r\n    // Returns true whenever there notifications are required.\r\n    /** @private */\r\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\r\n        // If silent option is in effect, don't set isDirty flag.\r\n        const dirty = !options.silent;\r\n        if( dirty ) object._isDirty = options;\r\n        \r\n        // Reset version token.\r\n        object._changeToken = {};\r\n\r\n        // Object is changed, so validation must happen again. Clear the cache.\r\n        object._validationError = void 0;\r\n\r\n        return dirty;\r\n    },\r\n\r\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\r\n    // Must be executed for the root transaction only.\r\n    /** @private */\r\n    commit( object : Transactional, initiator? : Transactional ){\r\n        let originalOptions = object._isDirty;\r\n\r\n        if( originalOptions ){\r\n            // Send the sequence of change events, handling chained handlers.\r\n            while( object._isDirty ){\r\n                const options = object._isDirty;\r\n                object._isDirty = null; \r\n                trigger3( object, object._changeEventName, object, options, initiator );\r\n            }\r\n            \r\n            // Mark transaction as closed.\r\n            object._transaction = false;\r\n\r\n            // Notify owner on changes out of transaction scope.  \r\n            const { _owner } = object;  \r\n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\r\n                _owner._onChildrenChange( object, originalOptions );\r\n            }\r\n        }\r\n        else{\r\n            // No changes. Silently close transaction.\r\n            object._isDirty = null;\r\n            object._transaction = false;\r\n        }\r\n    },\r\n\r\n    /************************************\r\n     * Ownership management\r\n     */\r\n\r\n    // Add reference to the record.\r\n    /** @private */\r\n    aquire( owner : Owner, child : Transactional, key? : string ) : void {\r\n        if( child._owner ) throw new ReferenceError( 'Trying to aquire ownership for an object already having an owner' );\r\n\r\n        child._owner = owner;\r\n        child._ownerKey = key;\r\n    },\r\n\r\n    // Remove reference to the record.\r\n    /** @private */\r\n    free( owner : Owner, child : Transactional ) : void {\r\n        if( owner === child._owner ){\r\n            child._owner = void 0;\r\n            child._ownerKey = void 0;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\r\n    // Check if we are the member of the collection...\r\n    const { collection } = self as any;\r\n    if( collection ){\r\n        return getOwnerEndpoint( collection );\r\n    }\r\n\r\n    // Now, if we're the member of the model...\r\n    if( self._owner ){\r\n        const { _endpoints } = self._owner as any;\r\n        return _endpoints && _endpoints[ self._ownerKey ];\r\n    }\r\n}\r\n","import { eventsApi } from '../object-plus';\r\nimport { Owner, Transaction, Transactional, transactionApi, TransactionOptions } from \"../transactions\";\r\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\r\n\r\nconst { trigger3 } = eventsApi;\r\n\r\nexport interface ConstructorsMixin {\r\n    Attributes : AttributesConstructor\r\n    AttributesCopy : AttributesCopyConstructor\r\n}\r\n\r\nexport interface ConstructorOptions extends TransactionOptions{\r\n    clone? : boolean\r\n}\r\n\r\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\r\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\r\n\r\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\r\n    // Attribute descriptors.\r\n    /** @internal */\r\n    _attributes : AttributesDescriptors\r\n\r\n    // Attribute values.\r\n    attributes : AttributesValues\r\n\r\n    // Previous attribute values.\r\n    /** @internal */\r\n    _previousAttributes : AttributesValues\r\n\r\n    // Changed attributes cache. \r\n    /** @internal */\r\n    _changedAttributes : AttributesValues\r\n}\r\n\r\nexport interface AttributesValues {\r\n    [ name : string ] : any\r\n}\r\n\r\nexport interface AttributesDescriptors {\r\n    [ name : string ] : AttributeUpdatePipeline\r\n}\r\n\r\nexport interface AttributeUpdatePipeline{\r\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\r\n}\r\n\r\n // Optimized single attribute transactional update. To be called from attributes setters\r\n // options.silent === false, parse === false. \r\nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\r\n    // Open the transaction.\r\n    const isRoot  = begin( record ),\r\n          options = {};\r\n\r\n    // Update attribute.      \r\n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\r\n        // Notify listeners on changes.\r\n        markAsDirty( record, options );\r\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\r\n    }\r\n\r\n    // Close the transaction.\r\n    isRoot && commit( record );\r\n}\r\n\r\nfunction begin( record : AttributesContainer ){\r\n    if( _begin( record ) ){\r\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\r\n        record._changedAttributes = null;\r\n        return true;\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\r\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\r\n    if( record._changedAttributes ){\r\n        record._changedAttributes = null;\r\n    }\r\n\r\n    return _markAsDirty( record, options );\r\n}\r\n\r\n/**\r\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\r\n * of attributes. It might create the major speedup.\r\n * \r\n * Create the dedicated pipeline for owned and shared attributes as well.\r\n * \r\n * Three elements of the pipeline:\r\n * - from constructor\r\n * - from assignment\r\n * - from `set`\r\n */\r\n\r\nexport const UpdateRecordMixin = {\r\n// Need to override it here, since begin/end transaction brackets are overriden. \r\n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\r\n        const isRoot = begin( this );\r\n        fun.call( this, this );\r\n        isRoot && commit( this );\r\n    },\r\n            \r\n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\r\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\r\n        const { _ownerKey } = child,\r\n              attribute = this._attributes[ _ownerKey ];\r\n\r\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\r\n    },\r\n\r\n    // Simulate attribute change \r\n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\r\n        // Touch an attribute in bounds of transaction\r\n        const isRoot = begin( this );\r\n\r\n        if( markAsDirty( this, options ) ){\r\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\r\n        }\r\n        \r\n        isRoot && commit( this );\r\n    },\r\n\r\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\r\n        const isRoot = begin( this ),\r\n                changes : string[] = [],\r\n                nested : RecordTransaction[]= [],\r\n                { _attributes } = this,\r\n                values = options.parse ? this.parse( a_values, options ) : a_values;\r\n\r\n        let unknown;\r\n\r\n        if( shouldBeAnObject( this, values, options ) ){\r\n            for( let name in values ){\r\n                const spec = _attributes[ name ];\r\n\r\n                if( spec ){\r\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\r\n                        changes.push( name );\r\n                    }\r\n                }\r\n                else{\r\n                    unknown || ( unknown = [] );\r\n                    unknown.push( `'${ name }'` );\r\n                }\r\n            }\r\n\r\n            if( unknown ){\r\n                unknownAttrsWarning( this, unknown, { values }, options );\r\n            }\r\n        }\r\n        \r\n        if( changes.length && markAsDirty( this, options ) ){\r\n            return new RecordTransaction( this, isRoot, nested, changes );\r\n        }\r\n        \r\n        // No changes, but there might be silent attributes with open transactions.\r\n        for( let pendingTransaction of nested ){\r\n            pendingTransaction.commit( this );\r\n        }\r\n\r\n        isRoot && commit( this );\r\n    }\r\n};\r\n\r\nexport function unknownAttrsWarning( record : AttributesContainer, unknown : string[], props, options ){\r\n    record._log( 'warn', 'Type-R:UnknownAttrs', `undefined attributes ${ unknown.join(', ')} are ignored.`, props, options.logger );\r\n}\r\n\r\n// One of the main performance tricks of Type-R.\r\n// Create loop unrolled constructors for internal attribute hash,\r\n// so the hidden class JIT optimization will be engaged and they will become static structs.\r\n// It dramatically improves record performance.\r\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\r\n    const attrs = Object.keys( attrDefs );\r\n\r\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\r\n        ${ attrs.map( attr =>`\r\n            this.${ attr } = values.${ attr };\r\n        `).join( '' ) }\r\n    `) as any;\r\n\r\n    AttributesCopy.prototype = Object.prototype;\r\n\r\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\r\n        var _attrs = record._attributes;\r\n\r\n        ${ attrs.map( attr =>`\r\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\r\n        `).join( '' ) }\r\n    `) as any;\r\n\r\n    Attributes.prototype = Object.prototype;\r\n\r\n    return { Attributes, AttributesCopy };\r\n}\r\n\r\nexport function shouldBeAnObject( record : AttributesContainer, values : object, options ){\r\n    if( values && values.constructor === Object ) return true;\r\n\r\n    record._log( 'error', 'Type-R:InvalidObject', 'update with non-object is ignored!', { values }, options.logger );\r\n    return false;\r\n}\r\n\r\n// Transaction class. Implements two-phase transactions on object's tree. \r\n// Transaction must be created if there are actual changes and when markIsDirty returns true. \r\nexport class RecordTransaction implements Transaction {\r\n    // open transaction\r\n    constructor( public object : AttributesContainer,\r\n                 public isRoot : boolean,\r\n                 public nested : Transaction[],\r\n                 public changes : string[] ){}\r\n\r\n    // commit transaction\r\n    commit( initiator? : AttributesContainer ) : void {\r\n        const { nested, object, changes } = this;\r\n\r\n        // Commit all pending nested transactions...\r\n        for( let transaction of nested ){ \r\n            transaction.commit( object );\r\n        }\r\n\r\n        // Notify listeners on attribute changes...\r\n        // Transaction is never created when silent option is set, so just send events out.\r\n        const { attributes, _isDirty } = object;\r\n        for( let key of changes ){\r\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\r\n        }\r\n\r\n        this.isRoot && commit( object, initiator );\r\n    }\r\n}","import { IOEndpoint } from '../../io-tools';\r\nimport { LogLevel, tools, Logger } from '../../object-plus';\r\nimport { TransactionOptions } from '../../transactions';\r\nimport { AttributesContainer, AttributeUpdatePipeline, RecordTransaction, setAttribute } from '../updates';\r\n\r\nconst { notEqual, assign} = tools;\r\n\r\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\r\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\r\n\r\nexport interface AttributeOptions {\r\n    _metatype? : typeof AnyType\r\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\r\n    isRequired? : boolean\r\n    changeEvents? : boolean\r\n\r\n    endpoint? : IOEndpoint\r\n\r\n    type? : Function\r\n    value? : any\r\n    hasCustomDefault? : boolean\r\n\r\n    parse? : Parse\r\n    toJSON? : AttributeToJSON\r\n   \r\n    getHooks? : GetHook[]\r\n    transforms? : Transform[]\r\n    changeHandlers? : ChangeHandler[]\r\n\r\n    _onChange? : ChangeAttrHandler\r\n}\r\n\r\nexport type Parse = ( value : any, key? : string ) => any;\r\nexport type GetHook = ( value : any, key? : string ) => any;\r\nexport type AttributeToJSON = ( value : any, key? : string ) => any\r\nexport type AttributeParse = ( value : any, key? : string ) => any\r\nexport type ChangeAttrHandler = ( ( value : any, attr? : string ) => void ) | string;\r\n\r\n// TODO: interface differs from options, do something obout it\r\nconst emptyOptions : TransactionOptions = {};\r\n\r\n/**\r\n * Typeless attribute. Is the base class for all other attributes.\r\n */\r\nexport class AnyType implements AttributeUpdatePipeline {\r\n    // Factory method to create attribute from options \r\n    static create : ( options : AttributeOptions, name : string ) => AnyType;\r\n    \r\n    /**\r\n     * Update pipeline functions\r\n     * =========================\r\n     *\r\n     * Stage 0. canBeUpdated( value )\r\n     * - presence of this function implies attribute's ability to update in place.\r\n     */\r\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\r\n\r\n    /**\r\n     * Stage 1. Transform stage\r\n     */\r\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\r\n\r\n    // convert attribute type to `this.type`.\r\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\r\n\r\n    /**\r\n     * Stage 2. Check if attr value is changed\r\n     */\r\n    isChanged( a : any, b : any ) : boolean {\r\n        return notEqual( a, b );\r\n    }\r\n\r\n    /**\r\n     * Stage 3. Handle attribute change\r\n     */\r\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\r\n\r\n    /**\r\n     * End update pipeline definitions.\r\n     */\r\n\r\n    // create empty object passing backbone options to constructor...\r\n    create() { return void 0; }\r\n\r\n    // generic clone function for typeless attributes\r\n    // Must be overriden in sublass\r\n    clone( value : any, record : AttributesContainer ) {\r\n        return value;\r\n    }\r\n\r\n    dispose( record : AttributesContainer, value : any ) : void {\r\n        this.handleChange( void 0, value, record, emptyOptions );\r\n    }\r\n\r\n    validate( record : AttributesContainer, value : any, key : string ) : any {}\r\n\r\n    toJSON( value, key, options? : object ) {\r\n        return value && value.toJSON ? value.toJSON( options ) : value;\r\n    }\r\n\r\n    createPropertyDescriptor() : PropertyDescriptor | void {\r\n        const { name, getHook } = this;\r\n\r\n        if( name !== 'id' ){\r\n            return {\r\n                // call to optimized set function for single argument.\r\n                set( value ){\r\n                    setAttribute( this, name, value );\r\n                },\r\n\r\n                // attach get hook to the getter function, if it present\r\n                get : (\r\n                    getHook ?\r\n                        function() {\r\n                            return getHook.call( this, this.attributes[ name ], name );\r\n                        } :\r\n                        function() { return this.attributes[ name ]; }\r\n                ),\r\n\r\n                configurable : true\r\n            }\r\n        }\r\n    }\r\n\r\n    value : any\r\n\r\n    // Used as global default value for the given metatype\r\n    static defaultValue : any;\r\n\r\n    type : Function\r\n\r\n    initialize( name : string, options : TransactionOptions ){}\r\n\r\n    options : AttributeOptions\r\n\r\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\r\n        const v = value === void 0 ? this.defaultValue() : value,\r\n            x = this.transform( v, void 0, record, options );\r\n            \r\n        this.handleChange( x, void 0, record, options );\r\n        return x;\r\n    }\r\n\r\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\r\n        const { name } = this,\r\n            { attributes } = record,\r\n              prev = attributes[ name ];\r\n\r\n        const next = this.transform( value, prev, record, options );\r\n        attributes[ name ] = next;\r\n\r\n        if( this.isChanged( next, prev ) ) {\r\n            // Do the rest of the job after assignment\r\n            this.handleChange( next, prev, record, options );\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    propagateChanges : boolean\r\n\r\n    protected _log( level : LogLevel, code : string, text : string, value, record : AttributesContainer, logger : Logger ){\r\n        record._log( level, code, `${record.getClassName()}.${ this.name } ${ text }`, {\r\n            'New value' : value,\r\n            'Prev. value' : record.attributes[ this.name ]\r\n        }, logger );\r\n    }\r\n\r\n    defaultValue(){\r\n        return this.value;\r\n    }\r\n\r\n    constructor( public name : string, a_options : AttributeOptions ) {        \r\n        // Save original options...\r\n        this.options = a_options;\r\n\r\n        // Clone options.\r\n        const options : AttributeOptions = { getHooks : [], transforms : [], changeHandlers : [], ...a_options };\r\n        options.getHooks = options.getHooks.slice();\r\n        options.transforms = options.transforms.slice();\r\n        options.changeHandlers = options.changeHandlers.slice();\r\n\r\n        const {\r\n                  value, type, parse, toJSON, changeEvents,\r\n                  validate, getHooks, transforms, changeHandlers\r\n              } = options;\r\n\r\n        // Initialize default value...\r\n        this.value = value;\r\n        this.type  = type;\r\n\r\n        // TODO: An opportunity to optimize for attribute subtype.\r\n        if( !options.hasCustomDefault && type ){\r\n            this.defaultValue = this.create;\r\n        }\r\n        else if( tools.isValidJSON( value ) ){ \r\n            // JSON literals must be deep copied.\r\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\r\n        }\r\n        else{\r\n            this.defaultValue = this.defaultValue;\r\n        }\r\n\r\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\r\n        this.propagateChanges = changeEvents !== false;\r\n\r\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\r\n\r\n        this.validate = validate || this.validate;\r\n        \r\n        if( options.isRequired ){\r\n            this.validate = wrapIsRequired( this.validate );\r\n        }\r\n\r\n        /**\r\n         * Assemble pipelines...\r\n         */\r\n\r\n        // `convert` is default transform, which is always present...\r\n        transforms.unshift( this.convert );\r\n\r\n        // Get hook from the attribute will be used first...\r\n        if( this.get ) getHooks.unshift( this.get );\r\n\r\n        // let subclasses configure the pipeline...\r\n        this.initialize.call( this, options );\r\n\r\n        // let attribute spec configure the pipeline...\r\n        if( getHooks.length ){\r\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\r\n\r\n            const { validate } = this;\r\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\r\n                return validate.call( this, record, getHook.call( record, value, key ), key );\r\n            }\r\n        }\r\n        \r\n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\r\n        \r\n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\r\n\r\n        // Attribute-level parse transform are attached as update hooks modifiers...\r\n        const { doInit, doUpdate } = this;\r\n        this.doInit = parse ? function( value, record : AttributesContainer, options : TransactionOptions ){\r\n            return doInit.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options );\r\n        } : doInit;\r\n\r\n        this.doUpdate = parse ? function( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\r\n            return doUpdate.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options, nested );\r\n        } : doUpdate;\r\n    }\r\n\r\n    getHook : ( value, key : string ) => any = null\r\n    get : ( value, key : string ) => any\r\n}\r\n\r\n\r\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\r\n    return function( value, name ) {\r\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\r\n    }\r\n}\r\n\r\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\r\n    return function( next, prev, record, options ) {\r\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\r\n    }\r\n}\r\n\r\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\r\n    return function( next, prev, record, options ) {\r\n        prevHandler.call( this, next, prev, record, options );\r\n        nextHandler.call( this, next, prev, record, options );\r\n    }\r\n}\r\n\r\nfunction wrapIsRequired( validate ){\r\n    return function( record : AttributesContainer, value : any, key : string ){\r\n        return value ? validate.call( this, record, value, key ) : 'Required';\r\n    }\r\n}","/**\r\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\r\n * \r\n * Adds type assertions, default validation, and optimized update pipeline.\r\n */\r\n\r\nimport { TransactionOptions } from '../../transactions';\r\nimport { AnyType } from './any';\r\nimport { AttributesContainer } from '../updates';\r\n\r\n/**\r\n * Custom class must be immutable class which implements toJSON() method\r\n * with a constructor taking json.\r\n */\r\nexport class ImmutableClassType extends AnyType {\r\n    type : new ( value? : any ) => {}\r\n\r\n    create(){\r\n        return new this.type();\r\n    }\r\n\r\n    convert( next : any ) : any {\r\n        return next == null || next instanceof this.type ? next : new this.type( next );\r\n    }\r\n\r\n    toJSON( value, key? : string, options? : object ){\r\n        return value && value.toJSON ? value.toJSON( options ) : value;\r\n    }\r\n\r\n    clone( value ) {\r\n        return new this.type( this.toJSON( value ) );\r\n    }\r\n\r\n    isChanged( a, b ){\r\n        return a !== b;\r\n    }\r\n}\r\n\r\n/**\r\n * Optimized attribute of primitive type.\r\n * \r\n * Primitives has specialized simplified pipeline.\r\n */\r\nexport class PrimitiveType extends AnyType {\r\n    type : NumberConstructor | StringConstructor | BooleanConstructor\r\n\r\n    dispose(){}\r\n    create() { return this.type(); }\r\n\r\n    toJSON( value ) { return value; }\r\n\r\n    convert( next ) { return next == null ? next : this.type( next ); }\r\n\r\n    isChanged( a, b ) { return a !== b; }\r\n\r\n    clone( value ) { return value; }\r\n\r\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\r\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\r\n    }\r\n\r\n    doUpdate( value, record, options, nested ){\r\n        const   { name } = this,\r\n                { attributes } = record,\r\n                prev = attributes[ name ];\r\n        \r\n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\r\n    }\r\n\r\n    initialize(){\r\n        if( !this.options.hasCustomDefault ){\r\n            this.value = this.type();\r\n        }\r\n    }\r\n}\r\n\r\n// Number type with special validation algothim.\r\n/** @private */ \r\nexport class NumericType extends PrimitiveType {\r\n    type : NumberConstructor\r\n\r\n    create(){\r\n        return 0;\r\n    }\r\n\r\n    convert( next, prev?, record?, options? ) {\r\n        const num = next == null ? next : this.type( next );\r\n\r\n        if( num !== num ){\r\n            this._log( 'error', 'Type-R:InvalidNumber', 'Number attribute is assigned with an invalid number', next, record, options.logger );\r\n        }\r\n        \r\n        return num;\r\n    }\r\n\r\n    validate( model, value, name ) {\r\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\r\n        if( value != null && !isFinite( value ) ) {\r\n            return name + ' is not valid number';\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Compatibility wrapper for Array type.\r\n * @private\r\n */ \r\nexport class ArrayType extends AnyType {\r\n    toJSON( value ) { return value; }\r\n    dispose(){}\r\n    create(){ return []; }\r\n\r\n    convert( next, prev, record, options ) {\r\n        // Fix incompatible constructor behaviour of Array...\r\n        if( next == null || Array.isArray( next ) ) return next;\r\n\r\n        this._log( 'error', 'Type-R:InvalidArray', 'Array attribute assigned with non-array value', next, record, options.logger );\r\n\r\n        return [];\r\n    }\r\n\r\n    clone( value ){\r\n        return value && value.slice();\r\n    }\r\n}\r\n\r\nexport class ObjectType extends AnyType {\r\n    create(){ return {}; }\r\n\r\n    convert( next, prev, record, options ) {\r\n        if( next == null || typeof next === 'object' ) return next;\r\n                \r\n        this._log( 'error', 'Type-R:InvalidObject', 'Object attribute is assigned with non-object value', next, record, options.logger );\r\n        return {};\r\n    }\r\n}\r\n\r\nexport function doNothing(){}\r\n\r\nexport class FunctionType extends AnyType {\r\n    // Functions are not serialized.\r\n    toJSON( value ) { return void 0; }\r\n    create(){ return doNothing; }\r\n    dispose(){}\r\n\r\n    convert( next, prev, record, options ) {\r\n        // Fix incompatible constructor behaviour of Function...\r\n        if( next == null || typeof next === 'function' ) return next;\r\n\r\n        this._log( 'error', 'Type-R:InvalidFunction', 'Function attribute assigned with non-function value', next, record, options.logger );\r\n\r\n        return doNothing;\r\n    }\r\n\r\n    // Functions are not cloned.\r\n    clone( value ){ return value; }\r\n}\r\n","/**\r\n * Date attribute type.\r\n * \r\n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\r\n * and optimized update pipeline.\r\n */\r\nimport { TransactionOptions } from '../../transactions';\r\nimport { AnyType } from './any';\r\nimport { AttributesContainer } from '../updates';\r\n\r\n// Date Attribute\r\n/** @private */\r\nexport class DateType extends AnyType {\r\n    create(){\r\n        return new Date();\r\n    }\r\n    \r\n    convert( next : any, a, record, options ){\r\n        if( next == null || next instanceof Date ) return next;\r\n\r\n        const date = new Date( next ),\r\n              timestamp = date.getTime();\r\n\r\n        if( timestamp !== timestamp ){\r\n            this._log( 'error', 'Type-R:InvalidDate', 'Date attribute assigned with invalid date', next, record, options.logger );\r\n        }\r\n\r\n        return date;\r\n    }\r\n\r\n    validate( model, value, name ) {\r\n        if( value != null ){\r\n            const timestamp = value.getTime(); \r\n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\r\n        }\r\n    }\r\n\r\n    toJSON( value ) { return value && value.toISOString(); }\r\n\r\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\r\n\r\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\r\n        // Date don't have handleChanges step.\r\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\r\n    }\r\n\r\n    doUpdate( value, record, options, nested ){\r\n        const   { name } = this,\r\n                { attributes } = record,\r\n                prev = attributes[ name ];\r\n        \r\n        // Date don't have handleChanges step.\r\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\r\n    }\r\n\r\n    clone( value ) { return value && new Date( value.getTime() ); }\r\n    dispose(){}\r\n}\r\n\r\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\r\nfunction supportsDate( date ){\r\n    return !isNaN( ( new Date( date ) ).getTime() );\r\n}\r\n\r\nif( !supportsDate('2011-11-29T15:52:30.5') ||\r\n    !supportsDate('2011-11-29T15:52:30.52') ||\r\n    !supportsDate('2011-11-29T15:52:18.867') ||\r\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\r\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\r\n\r\n    DateType.prototype.convert = function( value ){\r\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\r\n    }\r\n}\r\n\r\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\r\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\r\n\r\nfunction safeParseDate( date : string ) : number {\r\n    var timestamp, struct : any[], minutesOffset = 0;\r\n\r\n    if( ( struct = isoDatePattern.exec( date )) ) {\r\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\r\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\r\n            struct[ k ] = +struct[ k ] || 0;\r\n        }\r\n\r\n        // allow undefined days and months\r\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\r\n        struct[ 3 ] = +struct[ 3 ] || 1;\r\n\r\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\r\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\r\n\r\n            if( struct[ 9 ] === '+' ) {\r\n                minutesOffset = 0 - minutesOffset;\r\n            }\r\n        }\r\n\r\n        timestamp =\r\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\r\n                    struct[ 7 ] );\r\n    }\r\n    else {\r\n        timestamp = Date.parse( date );\r\n    }\r\n\r\n    return timestamp;\r\n}","import { ItemsBehavior, Transactional, transactionApi, TransactionOptions } from '../../transactions';\r\nimport { ValidationError } from '../../validation';\r\nimport { AnyType } from './any';\r\nimport { AttributesContainer, ConstructorOptions } from '../updates';\r\n\r\nconst { free, aquire } = transactionApi;\r\n\r\nexport class AggregatedType extends AnyType {\r\n    type : typeof Transactional\r\n\r\n    clone( value : Transactional ) : Transactional {\r\n        return value ? value.clone() : value;\r\n    }\r\n\r\n    toJSON( x, key : string, options : object ){ return x && x.toJSON( options ); }\r\n\r\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\r\n        const v = options.clone ? this.clone( value ) : (\r\n            value === void 0 ? this.defaultValue() : value\r\n        );\r\n\r\n        const x = this.transform( v, void 0, record, options );\r\n        this.handleChange( x, void 0, record, options );\r\n        return x;\r\n    }\r\n\r\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\r\n        const key = this.name, { attributes } = record; \r\n        const prev = attributes[ key ];\r\n        let update;\r\n\r\n        // This can be moved to transactional attribute. And chained with the rest.\r\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\r\n            const nestedTransaction = prev._createTransaction( update, options );\r\n            if( nestedTransaction ){\r\n                if( nested ){\r\n                    nested.push( nestedTransaction );\r\n                }\r\n                else{\r\n                    nestedTransaction.commit( record );\r\n                }\r\n\r\n                if( this.propagateChanges ) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        const next = this.transform( value, prev, record, options );\r\n        attributes[ key ] = next;\r\n\r\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\r\n            // Do the rest of the job after assignment\r\n            this.handleChange( next, prev, record, options );\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\r\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\r\n        if( prev && next != null ){\r\n            if( next instanceof this.type ){\r\n                // In case if merge option explicitly specified, force merge.\r\n                if( options.merge ) return next.__inner_state__;\r\n            }\r\n            else{\r\n                return next;\r\n            }\r\n        }\r\n    }\r\n\r\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\r\n        // Invoke class factory to handle abstract classes\r\n        if( next == null ) return next;\r\n        \r\n        if( next instanceof this.type ){\r\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \r\n                this._log( 'error', 'Type-R:InvalidCollection', 'aggregated collection attribute is assigned with shared collection type', next, record, options.logger );\r\n            }\r\n\r\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\r\n            // This is an only case we could be here when merge === true.\r\n            if( options.merge ) return next.clone();\r\n\r\n            if( next._owner ){\r\n                this._log( 'warn', 'Type-R:InvalidOwner', 'object alreay has an owner and was cloned. Use explicit object.clone() to dismiss this warning.', next, record, options.logger );\r\n                return next.clone();\r\n            }\r\n\r\n            return next;\r\n        }\r\n\r\n        return ( this.type as any).create( next, options );\r\n    }\r\n\r\n    dispose ( record : AttributesContainer, value : Transactional ){\r\n        if( value ){\r\n            this.handleChange( void 0, value, record, {} );\r\n        }\r\n    }\r\n\r\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\r\n        var error = value && value.validationError;\r\n        if( error ) return error;\r\n    }\r\n\r\n    create() : Transactional {\r\n        return (<any>this.type).create(); // this the subclass of Transactional here.\r\n    }\r\n\r\n    initialize( options ){\r\n        options.changeHandlers.unshift( this._handleChange );\r\n    }\r\n\r\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\r\n        if( prev ){\r\n            free( record, prev );\r\n            options.unset || prev.dispose();\r\n        } \r\n        \r\n        if( next ) aquire( record, next, this.name );\r\n    }\r\n}","import { eventsApi } from '../../object-plus';\r\nimport { ItemsBehavior, Transactional, transactionApi, TransactionOptions } from '../../transactions';\r\nimport { AnyType } from './any';\r\nimport { AttributesContainer, ConstructorOptions } from '../updates';\r\nimport { ChainableAttributeSpec } from '../attrDef';\r\n\r\nconst { on, off } = eventsApi,\r\n    { free, aquire } = transactionApi;\r\n\r\n/************************\r\n * Shared attribute definition.\r\n * - Not serialized.\r\n * - Listening to the changes.\r\n * - Doesn't take ownership when assigned with object of proper type.\r\n * - Takes ownership on objects which are converted.\r\n */\r\n\r\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\r\n\r\n/** @private */\r\nexport class SharedType extends AnyType {\r\n    type : typeof Transactional\r\n\r\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\r\n        const v = options.clone ? this.clone( value, record ) : (\r\n            value === void 0 ? this.defaultValue() : value\r\n        );\r\n\r\n        const x = this.transform( v, void 0, record, options );\r\n        this.handleChange( x, void 0, record, options );\r\n        return x;\r\n    }\r\n\r\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\r\n        const key = this.name, { attributes } = record; \r\n        const prev = attributes[ key ];\r\n        let update;\r\n\r\n        // This can be moved to transactional attribute. And chained with the rest.\r\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\r\n            const nestedTransaction = prev._createTransaction( update, options );\r\n            if( nestedTransaction ){\r\n                if( nested ){\r\n                    nested.push( nestedTransaction );\r\n                }\r\n                else{\r\n                    nestedTransaction.commit( record );\r\n                }\r\n\r\n                if( this.propagateChanges ) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        const next = this.transform( value, prev, record, options );\r\n        attributes[ key ] = next;\r\n\r\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\r\n            // Do the rest of the job after assignment\r\n            this.handleChange( next, prev, record, options );\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\r\n        // References are not cloned.\r\n        if( !value || value._owner !== record ) return value;\r\n\r\n        // Implicitly created objects are cloned.\r\n        const clone = value.clone();\r\n        aquire( record, clone, this.name );\r\n        return clone;\r\n    }\r\n\r\n    // Do not serialize by default.\r\n    toJSON(){}\r\n\r\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\r\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\r\n        if( prev && next != null && !( next instanceof this.type ) ){\r\n            return next;\r\n        }\r\n    }\r\n\r\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\r\n        if( next == null || next instanceof this.type ) return next;\r\n\r\n        // Convert type using implicitly created transactional object.\r\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\r\n\r\n        // To prevent a leak, we need to take an ownership on it.\r\n        aquire( record, implicitObject, this.name );\r\n\r\n        return implicitObject;\r\n    }\r\n\r\n    // Refs are always valid.\r\n    validate( model, value, name ){}\r\n\r\n    // They are always created as null.\r\n    create() : Transactional {\r\n        return null;\r\n    }\r\n\r\n    // Listening to the change events\r\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\r\n        if( prev ){\r\n            // If there was an implicitly created object, remove an ownership.\r\n            if( prev._owner === record ){\r\n                free( record, prev );\r\n                options.unset || prev.dispose();\r\n            }\r\n            else{\r\n                off( prev, prev._changeEventName, this._onChange, record );\r\n            }\r\n        }  \r\n \r\n        if( next ){\r\n            // No need to take an ownership for an implicit object - already done in convert or clone.\r\n            if( next._owner !== record ){\r\n                on( next, next._changeEventName, this._onChange, record );\r\n            }\r\n        } \r\n    }\r\n\r\n    dispose( record : AttributesContainer, value : Transactional ){\r\n        if( value ){\r\n            this.handleChange( void 0, value, record, {} );\r\n        }\r\n    }\r\n\r\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \r\n\r\n    initialize( options ){\r\n        // Create change event handler which knows current attribute name. \r\n        const attribute = this;\r\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\r\n            this === initiator || this.forceAttributeChange( attribute.name, options );\r\n        } : ignore;\r\n\r\n        options.changeHandlers.unshift( this._handleChange );\r\n    }\r\n}\r\n\r\nfunction ignore(){}","import { PrimitiveType, NumericType, ObjectType, ImmutableClassType, FunctionType, ArrayType } from './basic';\r\nimport { DateType } from './date';\r\nimport { AnyType, AttributeOptions } from './any';\r\n\r\nexport * from './any';\r\nexport * from './basic';\r\nexport * from './date';\r\nexport * from './owned';\r\nexport * from './shared';\r\n\r\n/**\r\n * Every record attribute type has the corresponding metatype controlling its behavior.\r\n * For built-in types, Type-R uses the predefined list to resolve metatype in order to avoid global objects modifications.\r\n * For user-defined types, static `_metatype` constructor member is used.\r\n */\r\n\r\nconst builtins : Function[] = [ String, Number, Boolean, Date, Object, Array, Function ],\r\n      metatypes = [ PrimitiveType, NumericType, PrimitiveType, DateType, ObjectType, ArrayType, FunctionType ];\r\n\r\nexport function getMetatype( Ctor : Function ){\r\n    return ( Ctor as any )._metatype || resolveBuiltins( Ctor );\r\n}\r\n\r\nAnyType.create = ( options : AttributeOptions, name : string ) => {\r\n    const type = options.type,\r\n          AttributeCtor = options._metatype || ( type ? getMetatype( type ): AnyType );\r\n\r\n    return new AttributeCtor( name, options );\r\n}\r\n\r\nfunction resolveBuiltins( Ctor : Function ){\r\n    const idx = builtins.indexOf( Ctor );\r\n    return idx < 0 ? ImmutableClassType : metatypes[ idx ];\r\n}","/**\r\n * Type spec engine. Declare attributes using chainable syntax,\r\n * and returns object with spec.\r\n */\r\nimport { IOEndpoint } from '../io-tools';\r\nimport { definitionDecorator, EventMap, EventsDefinition, tools } from '../object-plus';\r\nimport { Transactional } from '../transactions';\r\nimport { AttributeOptions, AttributeToJSON, getMetatype, Parse, SharedType } from './metatypes';\r\nimport { AttributesContainer } from './updates';\r\n\r\nconst { assign } = tools;\r\n\r\nexport interface AttributeCheck {\r\n    ( value : any, key : string ) : boolean\r\n    error? : any\r\n}\r\n\r\n// Infer the proper TS type from a Type-R attribute spec.\r\nexport type Infer<A> =\r\n    A extends ChainableAttributeSpec<infer F> ? TrueReturnType<F> :\r\n    A extends Function ? TrueReturnType<A> :\r\n    A;\r\n \r\n// Extract the proper TS return type for a function or constructor.\r\ntype TrueReturnType<F extends Function> =\r\n    F extends DateConstructor ? Date :\r\n    F extends ( ...args : any[] ) => infer R ? R :\r\n    F extends new ( ...args : any[] ) => infer R ? R :\r\n    void;\r\n\r\nexport class ChainableAttributeSpec<F extends Function>{\r\n    options : AttributeOptions & { type? : F };\r\n\r\n    constructor( options : AttributeOptions ) {\r\n        // Shallow copy options, fill it with defaults.\r\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\r\n        if( options ) assign( this.options, options );\r\n    }\r\n\r\n    check( check : AttributeCheck, error? : any ) : this {\r\n        function validate( model, value, name ){\r\n            if( !check.call( model, value, name ) ){\r\n                const msg = error || check.error || name + ' is not valid';\r\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\r\n            }\r\n        }\r\n\r\n        const prev = this.options.validate;\r\n\r\n        return this.metadata({\r\n            validate : prev ? (\r\n                            function( model, value, name ){\r\n                                return prev( model, value, name ) || validate( model, value, name );\r\n                            }\r\n                       ) : validate\r\n        });\r\n    }\r\n\r\n    get as() : PropertyDecorator {\r\n        return definitionDecorator( 'attributes', this );\r\n    }\r\n\r\n    get isRequired() : this {\r\n        return this.required;\r\n    }\r\n\r\n    get required() : this {\r\n        return this.metadata({ isRequired : true }); \r\n    }\r\n\r\n    endpoint( endpoint : IOEndpoint ) : this {\r\n        return this.metadata({ endpoint });\r\n    }\r\n\r\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : this {\r\n        return this.metadata({ _onChange : ref });\r\n    }\r\n\r\n    // Attribute-specific parse transform\r\n    parse( fun : Parse ) : this {\r\n        return this.metadata({ parse : fun });\r\n    }\r\n\r\n    toJSON( fun : AttributeToJSON) : this {\r\n        return this.metadata({\r\n            toJSON : typeof fun === 'function' ? fun : ( fun ? ( x, k, o ) => x && x.toJSON( o ) : emptyFunction ) \r\n        });\r\n    }\r\n\r\n    // Attribute get hook.\r\n    get( fun ) : this {\r\n        return this.metadata({\r\n            getHooks : this.options.getHooks.concat( fun )\r\n        });\r\n    }\r\n\r\n    // Attribute set hook.\r\n    set( fun ) : this {\r\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\r\n            if( this.isChanged( next, prev ) ) {\r\n                const changed = fun.call( record, next, this.name );\r\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\r\n            }\r\n\r\n            return prev;\r\n        }\r\n\r\n        return this.metadata({\r\n            transforms : this.options.transforms.concat( handleSetHook )\r\n        });\r\n    }\r\n\r\n    changeEvents( events : boolean ) : this {\r\n        return this.metadata({ changeEvents : events });\r\n    }\r\n\r\n    // Subsribe to events from an attribute.\r\n    events( map : EventsDefinition ) : this {\r\n        const eventMap = new EventMap( map );\r\n\r\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\r\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\r\n\r\n            next && next.trigger && eventMap.subscribe( record, next );\r\n        }\r\n\r\n        return this.metadata({\r\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\r\n        });\r\n    }\r\n\r\n    // Creates a copy of the spec.\r\n    get has() : this {\r\n        return this;\r\n    }\r\n\r\n    metadata( options : object ) : this {\r\n        const cloned = new ChainableAttributeSpec( this.options );\r\n        assign( cloned.options, options );\r\n        return cloned as any;\r\n    }\r\n\r\n    value( x ) : this {\r\n        return this.metadata({ value : x, hasCustomDefault : true });\r\n    }\r\n\r\n    static from( spec : any ) : ChainableAttributeSpec<any> {\r\n        // Pass metatype through untouched...\r\n        if( spec && spec instanceof ChainableAttributeSpec ) {\r\n            return spec;\r\n        }\r\n\r\n        return typeof spec === 'function' ? type( spec ) : value( spec );\r\n    }\r\n}\r\n\r\nfunction emptyFunction(){}\r\n\r\nexport function type<F extends Function>( this : void, Type : ChainableAttributeSpec<F> | F, value? : any ) : ChainableAttributeSpec<F> {\r\n    if( Type instanceof ChainableAttributeSpec ) return Type;\r\n\r\n    const attrDef = new ChainableAttributeSpec<F>({ type : Type }),\r\n          defaultValue = Type && value === void 0 ? getMetatype( Type ).defaultValue : value;\r\n\r\n    return defaultValue === void 0 ? attrDef : attrDef.value( defaultValue );\r\n}\r\n\r\nexport function shared<C extends Function>( this : void, Constructor : C ) : ChainableAttributeSpec<C> {\r\n    return new ChainableAttributeSpec<C>({\r\n        value : null,\r\n        type : Constructor,\r\n        _metatype : SharedType\r\n    });\r\n}\r\n\r\n// Create attribute metatype inferring the type from the value.\r\nexport function value( this : void, x : any ) : ChainableAttributeSpec<any> {\r\n    const Type = inferType( x ),\r\n        // Transactional types inferred from values must have shared type. \r\n        AttrDef = Type && Type.prototype instanceof Transactional ? shared( Type ) :\r\n                  type( Type );\r\n\r\n    return AttrDef.value( x );\r\n}\r\n\r\nfunction inferType( value : any ) : Function {\r\n    switch( typeof value ) {\r\n        case 'number' :\r\n            return Number;\r\n        case 'string' :\r\n            return String;\r\n        case 'boolean' :\r\n            return Boolean;\r\n        case 'function' :\r\n            return Function;\r\n        case 'undefined' :\r\n            return void 0;\r\n        case 'object' :\r\n            return value ? <any> value.constructor : void 0;\r\n    }\r\n}","import { IOEndpoint } from '../io-tools';\r\nimport { eventsApi, tools as _ } from '../object-plus';\r\nimport { CompiledReference } from '../traversable';\r\nimport { ChainableAttributeSpec } from './attrDef';\r\nimport { AnyType } from './metatypes';\r\nimport { ConstructorsMixin, constructorsMixin } from './updates';\r\n\r\nexport interface RecordAttributesMixin extends ConstructorsMixin {\r\n    // Attributes descriptors\r\n    _attributes : AttributeDescriptors\r\n    _attributesArray : AnyType[]\r\n    \r\n    // Attribute's property descriptors\r\n    properties : PropertyDescriptorMap\r\n\r\n    // Event map for record's local events.\r\n    _localEvents? : eventsApi.EventMap,\r\n\r\n    _endpoints : { [ name : string ] : IOEndpoint }\r\n}\r\n\r\nexport interface AttributeDescriptors {\r\n    [ name : string ] : AnyType\r\n}\r\n\r\n// Create attribute from the type spec.\r\nexport function createAttribute( spec : any, name : string ) : AnyType {\r\n    return AnyType.create( ChainableAttributeSpec.from( spec ).options, name );\r\n}\r\n\r\n// Create record mixin from the given record's attributes definition\r\nexport function createAttributesMixin( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : RecordAttributesMixin {\r\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\r\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\r\n\r\n    const ConstructorsMixin = constructorsMixin( allAttributes );\r\n\r\n    return {\r\n        ...ConstructorsMixin,\r\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\r\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\r\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\r\n        ...localEventsMixin( myAttributes ),\r\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\r\n    }            \r\n}\r\n\r\ninterface LocalEventsMixin {\r\n    _localEvents? : eventsApi.EventMap\r\n}\r\n\r\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\r\n    let _localEvents : eventsApi.EventMap;\r\n\r\n    for( var key in attrSpecs ){\r\n        const attribute = attrSpecs[ key ],\r\n            { _onChange } = attribute.options; \r\n\r\n        if( _onChange ){\r\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\r\n\r\n            _localEvents.addEvent( 'change:' + key,\r\n                typeof _onChange === 'string' ?\r\n                    createWatcherFromRef( _onChange, key ) : \r\n                    wrapWatcher( _onChange, key ) );\r\n        }\r\n    }\r\n\r\n    return _localEvents ? { _localEvents } : {};\r\n}\r\n\r\nfunction wrapWatcher( watcher, key ){\r\n    return function( record, value ){\r\n        watcher.call( record, value, key );\r\n    } \r\n}\r\n\r\nfunction createWatcherFromRef( ref : string, key : string ){\r\n    const { local, resolve, tail } = new CompiledReference( ref, true );\r\n    return local ?\r\n        function( record, value ){\r\n            record[ tail ]( value, key );\r\n        } :\r\n        function( record, value ){\r\n            resolve( record )[ tail ]( value, key );\r\n        }\r\n}","import { IOEndpoint, IONode, IOOptions, IOPromise, startIO } from '../io-tools';\r\nimport { TransactionOptions } from '../transactions';\r\n\r\nexport interface IORecord extends IONode {\r\n    getEndpoint() : IOEndpoint\r\n    save( options? : object ) : IOPromise<this>\r\n    fetch( options? : object ) : IOPromise<this>\r\n    destroy( options? : object ) : IOPromise<this>\r\n    toJSON( options? : object ) : any\r\n    parse( data : any, options? : object ) : any\r\n    isNew() : boolean\r\n    id : string | number\r\n    set( json : object, options : TransactionOptions ) : this\r\n}\r\n\r\nexport const IORecordMixin = {\r\n    save( this : IORecord, options : IOOptions = {} ){\r\n        const endpoint = this.getEndpoint(),\r\n              json = this.toJSON({ ioMethod : 'save', ...options });\r\n\r\n        return startIO(\r\n            this,\r\n            this.isNew() ?\r\n                endpoint.create( json, options, this ) :\r\n                endpoint.update( this.id, json, options, this ),\r\n            options,\r\n\r\n            update => {\r\n                this.set( update, {\r\n                    parse : true,\r\n                    ioMethod : 'save',\r\n                    ...options\r\n                } );\r\n            }\r\n        );\r\n    },\r\n\r\n    fetch( options : IOOptions = {} ){\r\n        return startIO(\r\n            this,\r\n            this.getEndpoint().read( this.id, options, this ),\r\n            options,\r\n\r\n            json => this.set( json, { parse : true, ioMethod : 'fetch', ...options } )\r\n        );\r\n    },\r\n\r\n    destroy( options : IOOptions = {} ){  \r\n        return startIO(\r\n            this,\r\n            this.getEndpoint().destroy( this.id, options, this ),\r\n            options,\r\n\r\n            () => {\r\n                const { collection } = this;\r\n                if( collection ){\r\n                    collection.remove( this, options );\r\n                }\r\n                else{\r\n                    this.dispose();\r\n                }\r\n\r\n                return this;\r\n            }\r\n        )\r\n    }\r\n}","/**\r\n * Record core implementing transactional updates.\r\n * The root of all definitions. \r\n */\r\n\r\nimport { CollectionConstructor } from '../collection';\r\nimport { IOEndpoint } from '../io-tools';\r\nimport { define, definitions, isProduction, Logger, logger, LogLevel, mixinRules, TheType, tools } from '../object-plus';\r\nimport { CloneOptions, Owner, Transaction, Transactional, TransactionalDefinition, TransactionOptions } from '../transactions';\r\nimport { ChildrenErrors } from '../validation';\r\nimport { Infer, type } from './attrDef';\r\nimport { IORecord, IORecordMixin } from './io-mixin';\r\nimport { AggregatedType, AnyType } from './metatypes';\r\nimport { AttributesConstructor, AttributesContainer, AttributesCopyConstructor, AttributesValues, setAttribute, shouldBeAnObject, unknownAttrsWarning, UpdateRecordMixin } from './updates';\r\n\r\n\r\nconst { assign, isEmpty } = tools;\r\n\r\n/*******************************************************\r\n * Record core implementation\r\n */\r\n\r\nexport interface ConstructorOptions extends TransactionOptions{\r\n    clone? : boolean\r\n}\r\n\r\n// Client unique id counter\r\nlet _cidCounter : number = 0;\r\n\r\n/***************************************************************\r\n * Record Definition as accepted by Record.define( definition )\r\n */\r\nexport interface RecordDefinition extends TransactionalDefinition {\r\n    idAttribute? : string\r\n    attributes? : AttributesValues\r\n    collection? : object\r\n    Collection? : typeof Transactional\r\n}\r\n\r\nexport interface RecordConstructor<A> extends TheType<typeof Record> {\r\n    new ( attrs? : Partial<A>, options? : object ) : Record & A\r\n    prototype : Record\r\n    Collection : CollectionConstructor<Record & A>\r\n}\r\n\r\nexport type InferAttrs<A extends object> = {\r\n    [K in keyof A]: Infer<A[K]>\r\n};\r\n\r\nexport type AttributesMixin<M extends { attributes : object }> = InferAttrs<M['attributes']>\r\n\r\n@define({\r\n    // Default client id prefix \r\n    cidPrefix : 'm',\r\n\r\n    // Name of the change event\r\n    _changeEventName : 'change',\r\n\r\n    // Default id attribute name\r\n    idAttribute : 'id'\r\n})\r\n@definitions({\r\n    defaults : mixinRules.merge,\r\n    attributes : mixinRules.merge,\r\n    collection : mixinRules.merge,\r\n    Collection : mixinRules.value,\r\n    idAttribute : mixinRules.protoValue\r\n})\r\nexport class Record extends Transactional implements IORecord, AttributesContainer, Iterable<any> {\r\n    /** @internal */\r\n    static _metatype = AggregatedType;\r\n\r\n    // Hack\r\n    static onDefine( definition, BaseClass ){}\r\n\r\n    static Collection : CollectionConstructor;\r\n    static DefaultCollection : CollectionConstructor;\r\n    \r\n    // Attribute type for the record id.\r\n    static id = type( String ).value( null );\r\n    \r\n    // Lazy object reference, serializable as id.\r\n    static get ref(){\r\n        return type( this )\r\n            .toJSON( x => x ? x.id : null )\r\n            .parse( x => {\r\n                return { [ this.prototype.idAttribute ] : x };\r\n            });\r\n    }\r\n\r\n    static extendAttrs<T extends typeof Record, A extends object>( this : T, attrs : A ) : RecordConstructor<InstanceType<T> & InferAttrs<A>> {\r\n        return this.defaults( attrs ) as any;\r\n    }\r\n\r\n    static defaults( attrs : AttributesValues ) : typeof Record {\r\n        return this.extend({ attributes : attrs }) as any;\r\n    }\r\n    \r\n    static attributes : AttributesValues\r\n\r\n    /********************\r\n     * IO Methods\r\n     */\r\n    /** @internal */\r\n     _endpoints : { [ name : string ] : IOEndpoint }\r\n\r\n    /***********************************\r\n     * Core Members\r\n     */\r\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \r\n\r\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\r\n    /** @internal */\r\n    get __inner_state__(){ return this.attributes; }\r\n\r\n    get changed(){\r\n        let changed = this._changedAttributes;\r\n\r\n        if( !changed ){\r\n            const prev = this._previousAttributes;\r\n            changed = {};\r\n\r\n            const { attributes } = this;\r\n\r\n            for( let attr of this._attributesArray ){\r\n                const key = attr.name,\r\n                    value = attributes[ key ];\r\n\r\n                if( attr.isChanged( value, prev[ key ] ) ){\r\n                    changed[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._changedAttributes = changed;\r\n        }\r\n\r\n        return changed;    \r\n    }\r\n\r\n    changedAttributes( diff? : {} ) : boolean | {} {\r\n        if( !diff ) return this.hasChanged() ? { ...this.changed } : false;\r\n\r\n        var val, changed : {} | boolean = false,\r\n            old          = this._transaction ? this._previousAttributes : this.attributes,\r\n            attrSpecs    = this._attributes;\r\n\r\n        for( var attr in diff ){\r\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\r\n            (changed || (changed = {}))[ attr ] = val;\r\n        }\r\n\r\n        return changed;        \r\n    }\r\n\r\n    hasChanged( key? : string ) : boolean {\r\n        const { _previousAttributes } = this;\r\n        if( !_previousAttributes ) return false;\r\n\r\n        return key ?\r\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\r\n                !isEmpty( this.changed );\r\n    }\r\n\r\n    previous( key : string ) : any {\r\n        if( key ){\r\n            const { _previousAttributes } = this;\r\n            if( _previousAttributes ) return _previousAttributes[ key ];\r\n        }\r\n        \r\n        return null;\r\n    }\r\n\r\n    isNew() : boolean {\r\n        return this.id == null;\r\n    }\r\n\r\n    has( key : string ) : boolean {\r\n        return this[ key ] != void 0;\r\n    }\r\n\r\n    // Return attribute value, setting an attribute to undefined.\r\n    // TODO: If attribute was aggregated, don't dispose it.\r\n    unset( key : string, options? ) : any {\r\n        const value = this[ key ];\r\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\r\n        return value;\r\n    }\r\n\r\n    // Undocumented. Move to NestedTypes?\r\n    clear( options? ) : this {\r\n        const nullify = options && options.nullify;\r\n\r\n        this.transaction( () =>{\r\n            this.forEach( ( value, key ) => this[ key ] = nullify ? null : void 0 );\r\n        }, options );\r\n\r\n        return this;\r\n    }\r\n\r\n    // Returns Record owner skipping collections. TODO: Move out\r\n    getOwner() : Owner {\r\n        const owner : any = this._owner;\r\n\r\n        // If there are no key, owner must be transactional object, and it's the collection.\r\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\r\n        return this._ownerKey ? owner : owner && owner._owner;\r\n    }\r\n\r\n    /***********************************\r\n     * Identity managements\r\n     */\r\n\r\n    // Id attribute name ('id' by default)\r\n    idAttribute : string;\r\n\r\n    // Fixed 'id' property pointing to id attribute\r\n    get id() : string { return this.attributes[ this.idAttribute ]; }\r\n    set id( x : string ){ setAttribute( this, this.idAttribute, x ); }\r\n\r\n    /***********************************\r\n     * Dynamically compiled stuff\r\n     */\r\n\r\n    // Attributes specifications\r\n    /** @internal */\r\n    _attributes : { [ key : string ] : AnyType }\r\n\r\n    /** @internal */\r\n    _attributesArray : AnyType[]\r\n\r\n    // Attributes object copy constructor\r\n    Attributes : AttributesConstructor\r\n    AttributesCopy : AttributesCopyConstructor\r\n\r\n    // Create record default values, optionally augmenting given values.\r\n    defaults( values = {} ){\r\n        const defaults = {},\r\n            { _attributesArray } = this;\r\n\r\n        for( let attr of _attributesArray ){\r\n            const key = attr.name,\r\n            value = values[ key ];\r\n\r\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\r\n        }\r\n\r\n        return defaults;\r\n    }\r\n\r\n    /***************************************************\r\n     * Record construction\r\n     */\r\n    // Create record, optionally setting an owner\r\n    constructor( a_values? : any, a_options? : ConstructorOptions ){\r\n        super( _cidCounter++ );\r\n        this.attributes = {};\r\n        \r\n        const options = a_options || {},\r\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\r\n\r\n        isProduction || typeCheck( this, values, options );\r\n\r\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\r\n\r\n        this.initialize( a_values, a_options );\r\n\r\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\r\n    }\r\n\r\n    // Initialization callback, to be overriden by the subclasses \r\n    initialize( values? : Partial<this>, options? ){}\r\n\r\n    // Deeply clone record, optionally setting new owner.\r\n    clone( options : CloneOptions = {} ) : this {\r\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\r\n        \r\n        if( options.pinStore ) copy._defaultStore = this.getStore();\r\n\r\n        return copy;\r\n    }\r\n\r\n    /** @internal */\r\n    _validateNested( errors : ChildrenErrors ) : number {\r\n        var length    = 0;\r\n\r\n        const { attributes } = this;\r\n\r\n        for( let attribute of this._attributesArray ){\r\n            const { name } = attribute,\r\n                error = attribute.validate( this, attributes[ name ], name );\r\n\r\n            if( error ){\r\n                errors[ name ] = error;\r\n                length++;\r\n            }\r\n        }\r\n\r\n        return length;\r\n    }\r\n\r\n    // Get attribute by key\r\n    get( key : string ) : any {\r\n        return this[ key ];\r\n    }\r\n\r\n    // Apply bulk in-place object update in scope of ad-hoc transaction \r\n    set( values : any, options? : TransactionOptions ) : this {\r\n        if( values ){ \r\n            const transaction = this._createTransaction( values, options );\r\n            transaction && transaction.commit();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Serialization control\r\n     */\r\n\r\n    // Default record-level serializer, to be overriden by subclasses \r\n    toJSON( options? : TransactionOptions ) : any {\r\n        const json = {},\r\n            { attributes } = this;\r\n\r\n        for( let attribute of this._attributesArray ){\r\n            const { name } = attribute,\r\n                value = attributes[ name ];\r\n\r\n            if( value !== void 0 ){\r\n                // ...serialize it according to its spec.\r\n                const asJson = attribute.toJSON.call( this, value, name, options );\r\n\r\n                // ...skipping undefined values. Such an attributes are excluded.\r\n                if( asJson !== void 0 ) json[ name ] = asJson; \r\n            }\r\n        }\r\n\r\n        return json;\r\n    }\r\n    \r\n    // Default record-level parser, to be overriden by the subclasses.\r\n    parse( data, options? : TransactionOptions ){\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Transactional control\r\n     */\r\n    deepSet( name : string, value : any, options? : any ){\r\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\r\n        this.transaction( () => {\r\n            const path  = name.split( '.' ),\r\n                l     = path.length - 1,\r\n                attr  = path[ l ];\r\n\r\n            let model = this;\r\n\r\n            // Locate the model, traversing the path.\r\n            for( let i = 0; i < l; i++ ){\r\n                const key = path[ i ];\r\n\r\n                // There might be collections in path, so use `get`.\r\n                let next    = model.get ? model.get( key ) : model[ key ];\r\n\r\n                // Create models, if they are not exist.\r\n                if( !next ){\r\n                    const attrSpecs = model._attributes;\r\n                    if( attrSpecs ){\r\n                        // If current object is model, create default attribute\r\n                        var newModel = attrSpecs[ key ].create();\r\n\r\n                        // If created object is model, nullify attributes when requested\r\n                        if( options && options.nullify && newModel._attributes ){\r\n                            newModel.clear( options );\r\n                        }\r\n\r\n                        model[ key ] = next = newModel;\r\n                    }\r\n                    // Silently fail in other case.\r\n                    else return;\r\n                }\r\n                \r\n                model = next;\r\n            }\r\n\r\n            // Set model attribute.\r\n            if( model.set ){\r\n                model.set({ [ attr ] : value }, options );\r\n            }\r\n            else{\r\n                model[ attr ] = value;\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n            \r\n    // Returns owner without the key (usually it's collection)\r\n    get collection() : any {\r\n        return this._ownerKey ? null : this._owner;\r\n    }\r\n\r\n    // Dispose object and all childrens\r\n    dispose(){\r\n        if( this._disposed ) return;\r\n\r\n        const { attributes } = this;\r\n\r\n        for( let attr of this._attributesArray ){\r\n            attr.dispose( this, attributes[ attr.name ] );\r\n        }\r\n        \r\n        super.dispose();\r\n    }\r\n\r\n    /** @internal */\r\n    _log( level : LogLevel, topic: string, text : string, props : object, a_logger? : Logger ) : void {\r\n        ( a_logger || logger ).trigger( level, topic, this.getClassName() + ' ' + text, {\r\n            ...props,\r\n            'Record' : this,\r\n            'Attributes definition' : this._attributes\r\n        });\r\n    }\r\n\r\n    getClassName() : string {\r\n        return super.getClassName() || 'Record';\r\n    }\r\n\r\n    /** @internal */\r\n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\r\n    // Simulate attribute change \r\n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\r\n\r\n    /** @internal */\r\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\r\n\r\n\r\n    /**\r\n     * Map methods\r\n     */\r\n\r\n    forEach( iteratee : ( value? : any, key? : string ) => void, context? : any ){\r\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\r\n            { attributes } = this;\r\n\r\n        for( const key in this.attributes ){\r\n            const value = attributes[ key ];\r\n            if( value !== void 0 ) fun( value, key );\r\n        }\r\n    }\r\n\r\n    mapObject( a_fun : ( value, key ) => any, context? : any ) : object {\r\n        const fun = context === void 0 ? a_fun : a_fun.bind( context );\r\n        return tools.transform( {}, this.attributes, fun );\r\n    }\r\n\r\n    [ Symbol.iterator ](){\r\n        return new RecordEntriesIterator( this );\r\n    }\r\n\r\n    entries(){\r\n        return new RecordEntriesIterator( this );\r\n    }\r\n\r\n    // Get array of attribute keys (Record) or record ids (Collection) \r\n    keys() : string[] {\r\n        const keys : string[] = [];\r\n\r\n        this.forEach( ( value, key ) => keys.push( key ) );\r\n\r\n        return keys;\r\n    }\r\n};\r\n\r\nexport interface Record extends IORecord {}\r\nexport interface Record extends AttributesContainer {}\r\n\r\n\r\nassign( Record.prototype, UpdateRecordMixin, IORecordMixin );\r\n\r\n/***********************************************\r\n * Helper functions\r\n */\r\n\r\nclass BaseRecordAttributes {\r\n    id : string\r\n\r\n    constructor( record : Record, x : AttributesValues, options : TransactionOptions ) {\r\n        this.id = x.id;\r\n    }\r\n}\r\n\r\nRecord.prototype.Attributes = BaseRecordAttributes;\r\n\r\nclass BaseRecordAttributesCopy {\r\n    id : string\r\n\r\n    constructor( x : AttributesValues ) {\r\n        this.id = x.id;\r\n    }\r\n}\r\n\r\nRecord.prototype.AttributesCopy = BaseRecordAttributesCopy;\r\n\r\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\r\nRecord.prototype._attributes = { id : IdAttribute };\r\nRecord.prototype._attributesArray = [ IdAttribute ];\r\n\r\nfunction typeCheck( record : Record, values : object, options ){\r\n    if( shouldBeAnObject( record, values, options ) ){\r\n        const { _attributes } = record;\r\n        let unknown : string[];\r\n\r\n        for( let name in values ){\r\n            if( !_attributes[ name ] ){\r\n                unknown || ( unknown = [] );\r\n                unknown.push( `'${ name }'` );\r\n            }\r\n        }\r\n\r\n        if( unknown ){\r\n            unknownAttrsWarning( record, unknown, { values }, options );\r\n        }\r\n    }\r\n}\r\n\r\nexport class RecordEntriesIterator implements Iterator<[string, any]> {\r\n    private idx = 0;\r\n    \r\n    constructor( private readonly record : Record){}\r\n\r\n    next() : IteratorResult<[string, any]> {\r\n        const { record } = this,\r\n            metatype = record._attributesArray[ this.idx++ ];\r\n\r\n        return {\r\n            done : !metatype,\r\n            value : metatype ? [ metatype.name, record[ metatype.name ] ] : void 0\r\n        };\r\n    }\r\n}","import { define, predefine, tools } from '../object-plus';\r\nimport { Transactional } from '../transactions';\r\nimport { type } from './attrDef';\r\nimport { createAttributesMixin } from './mixin';\r\nimport { InferAttrs, Record, RecordConstructor, RecordDefinition } from './record';\r\n\r\nexport * from './attrDef';\r\nexport * from './metatypes';\r\nexport { AttributesMixin, InferAttrs, RecordConstructor } from './record';\r\nexport { Record };\r\n\r\nconst { assign, defaults } = tools;\r\n\r\nexport function attributes<D extends object>( attrDefs : D ) : RecordConstructor<InferAttrs<D>> {\r\n    @define class DefaultRecord extends Record {\r\n        static attributes = attrDefs;\r\n    }\r\n\r\n    return DefaultRecord as any;\r\n}\r\n\r\nRecord.onExtend = function( this : typeof Record, BaseClass : typeof Record ){\r\n    Transactional.onExtend.call( this, BaseClass );\r\n\r\n    // Create the default collection\r\n    const Class = this;\r\n\r\n    @predefine class DefaultCollection extends BaseClass.Collection {\r\n        static model = Class;\r\n    }\r\n\r\n    this.DefaultCollection = DefaultCollection;\r\n\r\n    // If there are no collection defined in statics, use the default collection.\r\n    // It will appear in onDefine's definition, overriding all other settings.\r\n    if( Class.Collection === BaseClass.Collection ){\r\n        this.Collection = DefaultCollection;\r\n    }\r\n}\r\n\r\nRecord.onDefine = function( definition : RecordDefinition, BaseClass : typeof Record ){\r\n    const baseProto : Record = BaseClass.prototype;\r\n\r\n    // Compile attributes spec, creating definition mixin.\r\n    const { properties, _localEvents, ...dynamicMixin } = createAttributesMixin( this.attributes = getAttributes( definition ), baseProto._attributes );\r\n    assign( this.prototype, dynamicMixin );\r\n    \r\n    definition.properties = defaults( definition.properties || {}, properties );\r\n    definition._localEvents = _localEvents;\r\n    \r\n    Transactional.onDefine.call( this, definition, BaseClass );\r\n\r\n    // Finalize the definition of the default collection.\r\n    this.DefaultCollection.define( definition.collection || {} );\r\n\r\n    // assign collection from the definition.\r\n    this.Collection = definition.Collection;\r\n    this.Collection.prototype.model = this;\r\n\r\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;    \r\n}\r\n\r\nfunction getAttributes({ defaults, attributes, idAttribute } : RecordDefinition ) {\r\n    const definition = attributes || defaults || {};\r\n    \r\n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\r\n    if( idAttribute && !( idAttribute in definition ) ){\r\n        definition[ idAttribute ] = void 0;\r\n    }\r\n\r\n    return definition;\r\n}\r\n\r\ndeclare var Reflect;\r\n\r\nexport function auto( value : any ) : PropertyDecorator;\r\nexport function auto( proto : object, attrName : string ) : void;\r\nexport function auto( proto, attrName? : string ) : any {\r\n    if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\r\n        if( attrName ){\r\n            type( Reflect.getMetadata( \"design:type\", proto, attrName ) ).as( proto, attrName );\r\n        }\r\n        else{\r\n            const value = proto;\r\n            return ( proto : object, attrName : string ) : void => {\r\n                type( Reflect.getMetadata( \"design:type\", proto, attrName ) ).value( value ).as( proto, attrName );\r\n            }\r\n        }        \r\n    }\r\n    else{\r\n        proto._log( 'error', 'Type-R:MissingImport', 'Add import \"reflect-metadata\"; as the first line of your app.' );\r\n    }    \r\n}","import { eventsApi, Logger } from '../object-plus';\r\nimport { Record } from '../record';\r\nimport { ItemsBehavior, Owner, Transaction, Transactional, transactionApi, TransactionOptions } from '../transactions';\r\n\r\n\r\nconst { trigger2, trigger3, on, off } = eventsApi,\r\n      { commit } = transactionApi,\r\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\r\n\r\n/** @private */\r\nexport interface CollectionCore extends Transactional, Owner {\r\n    /** @internal */\r\n    _byId : IdIndex\r\n\r\n    models : Record[]\r\n    model : typeof Record\r\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\r\n    \r\n    /** @internal */\r\n    _comparator : Comparator\r\n    \r\n    get( objOrId : string | Record | Object ) : Record    \r\n    \r\n    /** @internal */\r\n    _itemEvents? : eventsApi.EventMap\r\n    /** @internal */\r\n    _shared : number\r\n    /** @internal */\r\n    _aggregationError : Record[]\r\n    /** @internal */\r\n    _log( level : string, topic : string, text : string, value : any, logger : Logger ) : void\r\n}\r\n\r\n// Collection's manipulation methods elements\r\nexport type Elements = ( Object | Record )[];\r\n\r\nexport interface CollectionOptions extends TransactionOptions {\r\n    sort? : boolean\r\n}\r\n\r\nexport type Comparator = ( a : Record, b : Record ) => number;  \r\n\r\n/** @private */\r\nexport function dispose( collection : CollectionCore ) : Record[]{\r\n    const { models } = collection;\r\n\r\n    collection.models = [];\r\n    collection._byId  = {};\r\n\r\n    freeAll( collection, models );\r\n    return models;\r\n}\r\n\r\n/** @private */\r\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Record, options : CollectionOptions ){\r\n    const { model } = collection;\r\n    \r\n    let record : Record;\r\n\r\n    if( collection._shared ){\r\n        record = attrs instanceof model ? attrs : <Record>model.create( attrs, options );\r\n\r\n        if( collection._shared & ItemsBehavior.listen ){\r\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\r\n        }\r\n    }\r\n    else{\r\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Record>model.create( attrs, options );\r\n\r\n        if( record._owner ){\r\n            if( record._owner !== collection ){\r\n                _aquire( collection, record.clone() );\r\n                const errors = collection._aggregationError || ( collection._aggregationError = [] );\r\n                errors.push( record );\r\n            }\r\n        }\r\n        else{\r\n            _aquire( collection, record );   \r\n        }\r\n    }    \r\n\r\n    // Subscribe for events...\r\n    const { _itemEvents } = collection;\r\n    _itemEvents && _itemEvents.subscribe( collection, record );\r\n\r\n    return record;\r\n}\r\n\r\n/** @private */\r\nexport function free( owner : CollectionCore, child : Record, unset? : boolean ) : void {\r\n    if( owner._shared ){\r\n        if( owner._shared & ItemsBehavior.listen ){\r\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\r\n        }\r\n    }\r\n    else{\r\n        _free( owner, child );\r\n        unset || child.dispose();\r\n    }\r\n\r\n    const { _itemEvents } = owner;\r\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\r\n}\r\n\r\n/** @private */\r\nexport function freeAll( collection : CollectionCore, children : Record[] ) : Record[] {\r\n    for( let child of children ){\r\n        free( collection, child );\r\n    }\r\n\r\n    return children;\r\n}\r\n\r\n/**\r\n * Silently sort collection, if its required. Returns true if sort happened.\r\n * @private\r\n */   \r\nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\r\n    let { _comparator } = collection;\r\n    if( _comparator && options.sort !== false ){\r\n        collection.models.sort( _comparator );\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**********************************\r\n * Collection Index\r\n * @private \r\n */\r\nexport interface IdIndex {\r\n    [ id : string ] : Record\r\n}\r\n\r\n/** @private Add record */ \r\nexport function addIndex( index : IdIndex, model : Record ) : void {\r\n    index[ model.cid ] = model;\r\n    var id             = model.id;\r\n    \r\n    if( id || ( id as any ) === 0 ){\r\n        index[ id ] = model;\r\n    }\r\n}\r\n\r\n/** @private Remove record */ \r\nexport function removeIndex( index : IdIndex, model : Record ) : void {\r\n    delete index[ model.cid ];\r\n    var id = model.id;\r\n    if( id || ( id as any ) === 0 ){\r\n        delete index[ id ];\r\n    }\r\n}\r\n\r\nexport function updateIndex( index : IdIndex, model : Record ){\r\n    delete index[ model.previous( model.idAttribute ) ];\r\n\r\n    const { id } = model;\r\n    id == null || ( index[ id ] = model );\r\n}\r\n\r\n/***\r\n * In Collections, transactions appears only when\r\n * add remove or change events might be emitted.\r\n * reset doesn't require transaction.\r\n * \r\n * Transaction holds information regarding events, and knows how to emit them.\r\n * \r\n * Two major optimization cases.\r\n * 1) Population of an empty collection\r\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\r\n */\r\n\r\n\r\n// Transaction class. Implements two-phase transactions on object's tree.\r\n/** @private */ \r\nexport class CollectionTransaction implements Transaction {\r\n    // open transaction\r\n    constructor(    public object : CollectionCore,\r\n                    public isRoot : boolean,\r\n                    public added : Record[],\r\n                    public removed : Record[],\r\n                    public nested : Transaction[],\r\n                    public sorted : boolean ){}\r\n\r\n    // commit transaction\r\n    commit( initiator? : Transactional ){\r\n        const { nested, object } = this,\r\n              { _isDirty } = object;\r\n\r\n        // Commit all nested transactions...\r\n        for( let transaction of nested ){\r\n            transaction.commit( object );\r\n        }\r\n\r\n        if( object._aggregationError ){\r\n            logAggregationError( object, _isDirty );\r\n        }\r\n\r\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\r\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \r\n        for( let transaction of nested ){\r\n            trigger2( object, 'change', transaction.object, _isDirty );\r\n        }\r\n\r\n        // Notify listeners on attribute changes...\r\n        const { added, removed } = this;\r\n\r\n        // Trigger `add` events for both model and collection.\r\n        for( let record of added ){\r\n            trigger3( record, 'add', record, object, _isDirty );\r\n            trigger3( object, 'add', record, object, _isDirty );\r\n        }\r\n\r\n        // Trigger `remove` events for both model and collection.\r\n        for( let record of removed ){\r\n            trigger3( record, 'remove', record, object, _isDirty );\r\n            trigger3( object, 'remove', record, object, _isDirty );\r\n        }\r\n\r\n        if( this.sorted ){\r\n            trigger2( object, 'sort', object, _isDirty );\r\n        }\r\n\r\n        if( added.length || removed.length ){\r\n            trigger2( object, 'update', object, _isDirty );\r\n        }\r\n\r\n        this.isRoot && commit( object, initiator );\r\n    }\r\n}\r\n\r\nexport function logAggregationError( collection : CollectionCore, options : TransactionOptions ){\r\n    collection._log( 'warn', 'Type-R:InvalidOwner', 'added records already have an owner and were cloned. Use explicit record.clone() to dismiss this warning.', collection._aggregationError, options.logger );\r\n    collection._aggregationError = void 0;\r\n}","import { Record } from '../record';\r\nimport { Transaction, transactionApi } from '../transactions';\r\nimport { addIndex, CollectionCore, CollectionOptions, CollectionTransaction, convertAndAquire, logAggregationError, sortElements, updateIndex } from './commons';\r\n\r\nconst { begin, commit, markAsDirty } = transactionApi;\r\n\r\nexport interface AddOptions extends CollectionOptions {\r\n    at? : number \r\n}\r\n\r\n/** @private */\r\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\r\n    const isRoot = begin( collection ),\r\n          nested : Transaction[]= [];\r\n\r\n    var added = appendElements( collection, items, nested, options, merge );\r\n\r\n    if( added.length || nested.length ){\r\n        let needSort = sortOrMoveElements( collection, added, options );\r\n        if( markAsDirty( collection, options ) ){\r\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\r\n        }\r\n\r\n        if( collection._aggregationError ) logAggregationError( collection, options );\r\n    }\r\n\r\n    // No changes...\r\n    isRoot && commit( collection );\r\n};\r\n\r\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\r\n/** @private */ \r\nfunction sortOrMoveElements( collection : CollectionCore, added : Record[], options : AddOptions ) : boolean {\r\n    let at = options.at;\r\n\r\n    // if `at` option is given, it overrides sorting option...\r\n    if( at != null ){\r\n        // Take an original collection's length. \r\n        const length = collection.models.length - added.length;\r\n\r\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\r\n        at = Number( at );\r\n        if( at < 0 ) at += length + 1;\r\n        if( at < 0 ) at = 0;\r\n        if( at > length ) at = length;\r\n\r\n        // Move added elements to desired position. In place.\r\n        moveElements( collection.models, at, added );\r\n        return false;\r\n    }\r\n\r\n    return sortElements( collection, options );\r\n}\r\n\r\n/** @private */\r\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\r\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\r\n        source[ j ] = source[ i ];\r\n    }\r\n\r\n    for( i = 0, j = at; i < added.length; i++, j++ ){\r\n        source[ j ] = added[ i ];\r\n    }\r\n}\r\n\r\n// append data to model and index\r\n/** @private */\r\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\r\n    var { _byId, models } = collection,\r\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\r\n        parse       = a_options.parse,\r\n        idAttribute = collection.model.prototype.idAttribute,\r\n        prevLength = models.length;\r\n\r\n    for( const item of a_items ){\r\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\r\n\r\n        if( model ){\r\n            if( merge && item !== model ){\r\n                var attrs = item.attributes || item;\r\n                const transaction = model._createTransaction( attrs, a_options );\r\n                transaction && nested.push( transaction );\r\n\r\n                if( model.hasChanged( idAttribute ) ){\r\n                    updateIndex( _byId, model );\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            model = convertAndAquire( collection, item, a_options );\r\n            models.push( model );\r\n            addIndex( _byId, model );\r\n        }\r\n    }\r\n\r\n    return models.slice( prevLength );\r\n}\r\n","/*************\r\n * Remove items from collections.\r\n * \r\n * Cannot be a part of two-phase transaction on object tree.\r\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\r\n *\r\n * Implemented with low-level API. \r\n * Most frequent operation - single element remove. Thus, it have the fast-path.\r\n */\r\n\r\nimport { eventsApi } from '../object-plus';\r\nimport { Record } from '../record';\r\nimport { transactionApi, TransactionOptions } from '../transactions';\r\nimport { CollectionCore, CollectionTransaction, free, removeIndex } from './commons';\r\n\r\nconst { trigger2, trigger3 } = eventsApi,\r\n    { markAsDirty, begin, commit } = transactionApi;\r\n\r\n/** @private */\r\nexport function removeOne( collection : CollectionCore, el : Record | {} | string, options : TransactionOptions ) : Record {\r\n    var model : Record = collection.get( el );\r\n\r\n    if( model ){\r\n        const isRoot = begin( collection ),\r\n              models = collection.models;\r\n\r\n        // Remove model form the collection. \r\n        models.splice( models.indexOf( model ), 1 );\r\n        removeIndex( collection._byId, model );\r\n        \r\n        // Mark transaction as dirty. \r\n        const notify = markAsDirty( collection, options );\r\n\r\n        // Send out events.\r\n        if( notify ){\r\n            trigger3( model, 'remove', model, collection, options );\r\n            trigger3( collection, 'remove', model, collection, options );\r\n        } \r\n\r\n        free( collection, model, options.unset );\r\n\r\n        notify && trigger2( collection, 'update', collection, options );\r\n\r\n        // Commit transaction.\r\n        isRoot && commit( collection );\r\n\r\n        return model;\r\n    }\r\n};\r\n\r\n/** Optimized for removing many elements\r\n * 1. Remove elements from the index, checking for duplicates\r\n * 2. Create new models array matching index\r\n * 3. Send notifications and remove references\r\n */\r\n\r\n/** @private */\r\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\r\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\r\n    if( removed.length ){\r\n        const isRoot = begin( collection );\r\n\r\n        _reallocate( collection, removed.length );\r\n\r\n        if( markAsDirty( collection, options ) ){\r\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\r\n            transaction.commit();\r\n        }\r\n        else{\r\n            // Commit transaction.\r\n            isRoot && commit( collection );\r\n        }\r\n    }\r\n\r\n    return removed;\r\n};\r\n\r\n// remove models from the index...\r\n/** @private */\r\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\r\n    var removed = Array( toRemove.length ),\r\n        _byId   = collection._byId;\r\n\r\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\r\n        var model = collection.get( toRemove[ i ] );\r\n        if( model ){\r\n            removed[ j++ ] = model;\r\n            removeIndex( _byId, model );\r\n            free( collection, model, unset );\r\n        }\r\n    }\r\n\r\n    removed.length = j;\r\n\r\n    return removed;\r\n}\r\n\r\n// Allocate new models array removing models not present in the index.\r\n/** @private */\r\nfunction _reallocate( collection, removed ){\r\n    var prev   = collection.models,\r\n        models = collection.models = Array( prev.length - removed ),\r\n        _byId = collection._byId;\r\n\r\n    for( var i = 0, j = 0; i < prev.length; i++ ){\r\n        var model = prev[ i ];\r\n\r\n        if( _byId[ model.cid ] ){\r\n            models[ j++ ] = model;\r\n        }\r\n    }\r\n\r\n    models.length = j;\r\n}","import { Record } from '../record';\r\nimport { Transaction, transactionApi } from '../transactions';\r\nimport { addIndex, CollectionCore, CollectionOptions, CollectionTransaction, convertAndAquire, Elements, free, freeAll, IdIndex, logAggregationError, sortElements } from './commons';\r\n\r\nconst { begin, commit, markAsDirty } = transactionApi;\r\n\r\n/** @private */\r\nconst silentOptions = { silent : true };\r\n\r\n/** @private */\r\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\r\n    const isRoot = begin( collection );\r\n\r\n    const added = _reallocateEmpty( collection, items, options );\r\n\r\n    if( added.length ){\r\n        const needSort = sortElements( collection, options );\r\n\r\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\r\n            // 'added' is the reference to this.models. Need to copy it.\r\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\r\n        }\r\n\r\n        if( collection._aggregationError ) logAggregationError( collection, options );\r\n    }\r\n\r\n    // No changes...\r\n    isRoot && commit( collection );\r\n};\r\n\r\n/** @private */\r\nexport function setTransaction( collection, items, options ){\r\n    const isRoot = begin( collection ),\r\n          nested = [];\r\n\r\n    var previous = collection.models,\r\n        added    = _reallocate( collection, items, nested, options );\r\n\r\n    const reusedCount = collection.models.length - added.length,\r\n          removed = reusedCount < previous.length ? (\r\n                        reusedCount ? _garbageCollect( collection, previous ) :\r\n                                        freeAll( collection, previous )\r\n                    ) : [];                    \r\n    \r\n    const addedOrChanged = nested.length || added.length,\r\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\r\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\r\n\r\n    if( addedOrChanged || removed.length || sorted ){\r\n        if( markAsDirty( collection, options ) ){ \r\n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\r\n        }\r\n\r\n        if( collection._aggregationError ) logAggregationError( collection, options );\r\n    }\r\n\r\n    isRoot && commit( collection );\r\n};\r\n\r\n// Remove references to all previous elements, which are not present in collection.\r\n// Returns an array with removed elements.\r\n/** @private */\r\nfunction _garbageCollect( collection : CollectionCore, previous : Record[] ) : Record[]{\r\n    const { _byId }  = collection,\r\n          removed = [];\r\n\r\n    // Filter out removed models and remove them from the index...\r\n    for( let record of previous ){\r\n        if( !_byId[ record.cid ] ){\r\n            removed.push( record );\r\n            free( collection, record );\r\n        }\r\n    }\r\n\r\n    return removed;\r\n}\r\n\r\n// reallocate model and index\r\n/** @private */\r\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\r\n    var models      = Array( source.length ),\r\n        _byId : IdIndex = {},\r\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\r\n        _prevById   = collection._byId,\r\n        prevModels  = collection.models, \r\n        idAttribute = collection.model.prototype.idAttribute,\r\n        toAdd       = [],\r\n        orderKept   = true;\r\n\r\n    // for each item in source set...\r\n    for( var i = 0, j = 0; i < source.length; i++ ){\r\n        var item  = source[ i ],\r\n            model : Record = null;\r\n\r\n        if( item ){\r\n            var id  = item[ idAttribute ],\r\n                cid = item.cid;\r\n\r\n            if( _byId[ id ] || _byId[ cid ] ) continue;\r\n\r\n            model = _prevById[ id ] || _prevById[ cid ];\r\n        }\r\n\r\n        if( model ){\r\n            if( merge && item !== model ){\r\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\r\n\r\n                var attrs = item.attributes || item;\r\n                const transaction = model._createTransaction( attrs, options );\r\n                transaction && nested.push( transaction );\r\n            }\r\n        }\r\n        else{\r\n            model = convertAndAquire( collection, item, options );\r\n            toAdd.push( model );\r\n        }\r\n\r\n        models[ j++ ] = model;\r\n        addIndex( _byId, model );\r\n    }\r\n\r\n    models.length = j;\r\n    collection.models   = models;\r\n    collection._byId    = _byId;\r\n\r\n    if( !orderKept ) options.sorted = true;\r\n\r\n    return toAdd;\r\n}\r\n\r\n/** @private */\r\nfunction _reallocateEmpty( self, source, options ){\r\n    var len         = source ? source.length : 0,\r\n        models      = Array( len ),\r\n        _byId : IdIndex = {},\r\n        idAttribute = self.model.prototype.idAttribute;\r\n\r\n    for( var i = 0, j = 0; i < len; i++ ){\r\n        var src = source[ i ];\r\n\r\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\r\n            continue;\r\n        }\r\n\r\n        var model = convertAndAquire( self, src, options );\r\n        models[ j++ ] = model;\r\n        addIndex( _byId, model );\r\n    }\r\n\r\n    models.length = j;\r\n    self._byId    = _byId;\r\n\r\n    return self.models = models;\r\n}","import { Record } from '../record'\r\n\r\nexport type Predicate<R> = ( ( val : R, key? : number ) => boolean ) | Partial<R>;\r\n\r\n/**\r\n * Optimized array methods.\r\n */\r\nexport abstract class ArrayMixin<R extends Record> {\r\n    models : R[]\r\n    abstract get( modelOrId : string | Partial<R> ) : R;\r\n\r\n    /**\r\n     * Map and optionally filter the collection.\r\n     * @param mapFilter filter an element out if `undefined` is returned \r\n     * @param context optional `this` for `mapFilter`\r\n     */\r\n    map<T>( mapFilter : ( val : R, key? : number ) => T, context? : any ) : T[]{\r\n        const { models } = this,\r\n            { length } = models,\r\n            res = Array( length ),\r\n            fun = context ? mapFilter.bind( context ) : mapFilter;\r\n\r\n        for( var i = 0, j = 0; i < length; i++ ){\r\n            const val = fun( models[ i ], i );\r\n            val === void 0 || ( res[ j++ ] = val );\r\n        }\r\n\r\n        if( i !== j ){\r\n            res.length = j;\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * Iterate through the collection.\r\n     * @param context optional `this` for `iteratee`.\r\n     */\r\n    each<T>( fun : ( val : R, key? : number ) => any, context? : any ) : void {\r\n        const { models } = this,\r\n            { length } = models,\r\n            iteratee = context ? fun.bind( context ) : fun;\r\n\r\n        for( let i = 0; i < length; i++ ){\r\n            iteratee( models[ i ], i );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Iterate through collection optionally returning the value.\r\n     * @param doWhile break the loop if anything but `undefined` is returned, and return this value.\r\n     * @param context optional `this` for `doWhile`.\r\n     */\r\n    firstMatch<T>( doWhile : ( val : R, key? : number ) => T ) : T\r\n    firstMatch<T, C>( doWhile : ( this : C, val : R, key? : number ) => T, context : C ) : T\r\n    firstMatch<T>( doWhile : ( val : R, key? : number ) => T, context? : any ) : T {\r\n        const { models } = this,\r\n            { length } = models,\r\n            iteratee = context ? doWhile.bind( context ) : doWhile;\r\n\r\n        for( let i = 0; i < length; i++ ){\r\n            const res = iteratee( models[ i ], i );\r\n            if( res !== void 0 ) return res;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Proxy for the `array.reduce()`\r\n     * @param iteratee \r\n     */\r\n    reduce<T>( iteratee : (previousValue: R, currentValue: R, currentIndex?: number ) => R ) : R\r\n    reduce<T>( iteratee : (previousValue: T, currentValue: R, currentIndex?: number ) => T, init? : any ) : T\r\n    reduce<T>( iteratee : (previousValue: any, currentValue: any, currentIndex?: number ) => any, init? : any ) : T | R {\r\n        return init === void 0 ? this.models.reduce( iteratee ) : this.models.reduce( iteratee, init );\r\n    }\r\n\r\n    // Slice out a sub-array of models from the collection.\r\n    slice( begin? : number, end? : number ) : R[] {\r\n        return this.models.slice( begin, end );\r\n    }\r\n  \r\n    indexOf( modelOrId : string | Partial<R> ) : number {\r\n        return this.models.indexOf( this.get( modelOrId ) );\r\n    }\r\n\r\n    includes( idOrObj : string | Partial<R> ) : boolean {\r\n        return Boolean( this.get( idOrObj ) );\r\n    }\r\n\r\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\r\n        const fun = toPredicateFunction( iteratee );\r\n        return this.map( m => fun( m ) ? m : void 0, context );\r\n    }\r\n\r\n    find( iteratee : Predicate<R>, context? : any ) : R {\r\n        const fun = toPredicateFunction( iteratee );\r\n        return this.firstMatch( m => fun( m ) ? m : void 0, context );\r\n    }\r\n\r\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\r\n        return Boolean( this.find( iteratee, context ) );\r\n    }\r\n\r\n    forEach( iteratee : ( val : R, key? : number ) => void, context? : any ) : void {\r\n        this.each( iteratee, context );\r\n    }\r\n\r\n    values() : IterableIterator<R> {\r\n        return this.models.values();\r\n    }\r\n\r\n    entries() : IterableIterator<[ number, R ]>{\r\n        return this.models.entries();\r\n    }\r\n\r\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\r\n        const fun = toPredicateFunction( iteratee );\r\n        return this.firstMatch( m => fun( m ) ? void 0 : false, context ) === void 0;\r\n    }\r\n\r\n    pluck<K extends keyof R>( key : K ) : R[K][] {\r\n        return this.map( model => model[ key ] );\r\n    }\r\n\r\n    first() : R { return this.models[ 0 ]; }\r\n\r\n    last() : R { return this.models[ this.models.length - 1 ]; }\r\n\r\n    at( a_index : number ) : R {\r\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \r\n        return this.models[ index ];\r\n    }\r\n}\r\n\r\nconst noOp = x => x;\r\n\r\nfunction toPredicateFunction<R>( iteratee : Predicate<R> ){\r\n    if( iteratee == null ) return noOp;\r\n\r\n    switch( typeof iteratee ){\r\n        case 'function' : return iteratee;\r\n        case 'object' :\r\n            const keys = Object.keys( iteratee );\r\n            \r\n            return x => {\r\n                for( let key of keys ){\r\n                    if( iteratee[ key ] !== x[ key ] )\r\n                        return false;\r\n                }\r\n\r\n                return true;\r\n            }\r\n        default : throw new Error( 'Invalid iteratee' );\r\n    }\r\n}","import { IOPromise, startIO } from '../io-tools';\r\nimport { define, definitions, EventMap, eventsApi, EventsDefinition, Logger, logger, LogLevel, Mixable, mixinRules, TheType, tools, mixins } from '../object-plus';\r\nimport { AggregatedType, Record, SharedType } from '../record';\r\nimport { CloneOptions, ItemsBehavior, Transactional, TransactionalDefinition, transactionApi, TransactionOptions } from '../transactions';\r\nimport { AddOptions, addTransaction } from './add';\r\nimport { CollectionCore, CollectionTransaction, Elements, free, sortElements, updateIndex } from './commons';\r\nimport { removeMany, removeOne } from './remove';\r\nimport { emptySetTransaction, setTransaction } from './set';\r\n\r\nconst { trigger2 } = eventsApi,\r\n    { begin, commit, markAsDirty } = transactionApi;\r\n\r\nlet _count = 0;\r\n\r\nexport type GenericComparator = string | ( ( x : Record ) => number ) | ( ( a : Record, b : Record ) => number ); \r\n\r\nexport interface CollectionOptions extends TransactionOptions {\r\n    comparator? : GenericComparator\r\n    model? : typeof Record\r\n}\r\n\r\nexport interface CollectionDefinition extends TransactionalDefinition {\r\n    model? : typeof Record,\r\n    itemEvents? : EventsDefinition\r\n    _itemEvents? : EventMap\r\n}\r\n\r\nclass CollectionRefsType extends SharedType {\r\n    static defaultValue = [];\r\n}\r\n\r\nexport interface CollectionConstructor<R extends Record = Record > extends TheType<typeof Collection> {\r\n    new ( records? : ElementsArg<R>, options?: CollectionOptions ) : Collection<R>\r\n    prototype : Collection<R>\r\n    Refs : CollectionConstructor<R>\r\n};\r\n\r\n@define({\r\n    // Default client id prefix \r\n    cidPrefix : 'c',\r\n    model : Record,\r\n    _changeEventName : 'changes',\r\n    _aggregationError : null\r\n})\r\n@mixins( ArrayMixin )\r\n@definitions({\r\n    comparator : mixinRules.value,\r\n    model : mixinRules.protoValue,\r\n    itemEvents : mixinRules.merge\r\n})\r\nexport class Collection< R extends Record = Record> extends Transactional implements CollectionCore, Iterable<R> {\r\n    /** @internal */\r\n    _shared : number\r\n    /** @internal */\r\n    _aggregationError : R[]\r\n\r\n    /**\r\n     * EXPERIMENTAL notation to extract proper collection type from the model in TypeScript.\r\n     * \r\n     * attrName : Collection.of( User );\r\n     * \r\n     * const users = new ( Collection.of( User ) )\r\n     */\r\n    static of<M extends typeof Record>( Ctor : M ) : M['Collection'] extends CollectionConstructor<InstanceType<M>> ? M['Collection'] : CollectionConstructor<InstanceType<M>> {\r\n        return Ctor.Collection as any;\r\n    }\r\n\r\n    /**\r\n     * EXPERIMENTAL notation to extract proper collection type from the model in TypeScript.\r\n     * \r\n     * attrName : Collection.ofRefs( User );\r\n     * \r\n     * const users = new ( Collection.ofRefs( User ) )\r\n     */\r\n    static ofRefs<M extends typeof Record>( Ctor : M ) : M['Collection'] extends CollectionConstructor<InstanceType<M>> ? M['Collection'] : CollectionConstructor<InstanceType<M>> {\r\n        return Ctor.Collection.Refs as any;\r\n    }\r\n\r\n    static Subset : typeof Collection\r\n    static Refs : any\r\n\r\n    /** @internal */\r\n    static _SubsetOf : typeof Collection\r\n    \r\n    createSubset( models : ElementsArg<R>, options? : CollectionOptions) : Collection<R>{\r\n        throw new ReferenceError( 'Failed dependency injection' )\r\n    }\r\n\r\n    static onExtend( BaseClass : typeof Transactional ){\r\n        // Cached subset collection must not be inherited.\r\n        const Ctor = this;\r\n        this._SubsetOf = null;\r\n\r\n        function RefsCollection( a, b, listen? ){\r\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\r\n        }\r\n\r\n        Mixable.mixins.populate( RefsCollection );\r\n        \r\n        RefsCollection.prototype = this.prototype;\r\n        RefsCollection._metatype = CollectionRefsType;\r\n\r\n        this.Refs = this.Subset = <any>RefsCollection;\r\n\r\n        Transactional.onExtend.call( this, BaseClass );\r\n    }\r\n    \r\n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\r\n        if( definition.itemEvents ){\r\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\r\n            eventsMap.addEventsMap( definition.itemEvents );\r\n            this.prototype._itemEvents = eventsMap;\r\n        }\r\n\r\n        if( definition.comparator !== void 0 ) this.prototype.comparator = definition.comparator;\r\n\r\n        Transactional.onDefine.call( this, definition );\r\n    }\r\n    \r\n    /** @internal */\r\n    _itemEvents : EventMap\r\n\r\n    /***********************************\r\n     * Core Members\r\n     */\r\n    // Array of the records\r\n    models : R[]\r\n\r\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\r\n    /** @internal */\r\n    get __inner_state__(){ return this.models; }\r\n\r\n    // Index by id and cid\r\n    /** @internal */\r\n    _byId : { [ id : string ] : R }\r\n\r\n    set comparator( x : GenericComparator ){\r\n\r\n        switch( typeof x ){\r\n            case 'string' :\r\n                this._comparator = ( a, b ) => {\r\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\r\n                    if( aa === bb ) return 0;\r\n                    return aa < bb ? -1 : + 1;\r\n                } \r\n                break;\r\n            case 'function' :\r\n                if( x.length === 1 ){\r\n                    this._comparator = ( a, b ) => {\r\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\r\n                        if( aa === bb ) return 0;\r\n                        return aa < bb ? -1 : + 1;\r\n                    }\r\n                }\r\n                else{\r\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\r\n                }\r\n                break;\r\n                \r\n            default :\r\n                this._comparator = null;\r\n        }\r\n    }\r\n    \r\n    // TODO: Improve typing\r\n    getStore() : Transactional {\r\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\r\n    }\r\n\r\n    /** @internal */\r\n    _store : Transactional\r\n\r\n    get comparator(){ return this._comparator; }\r\n\r\n    /** @internal */\r\n    _comparator : ( a : R, b : R ) => number\r\n\r\n    /** @internal */\r\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\r\n        // Ignore updates from nested transactions.\r\n        if( initiator === this ) return;\r\n\r\n        const { idAttribute } = this;\r\n\r\n        if( record.hasChanged( idAttribute ) ){\r\n            updateIndex( this._byId, record );\r\n        }\r\n\r\n        const isRoot = begin( this );\r\n\r\n        if( markAsDirty( this, options ) ){\r\n            // Forward change event from the record.\r\n            trigger2( this, 'change', record, options )\r\n        }\r\n\r\n        isRoot && commit( this );\r\n    }\r\n\r\n    get( objOrId : string | { id? : string, cid? : string } ) : R {\r\n        if( objOrId == null ) return;\r\n\r\n        if( typeof objOrId === 'object' ){\r\n            const id = objOrId[ this.idAttribute ];\r\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ objOrId.cid ];\r\n        }\r\n        else{\r\n            return this._byId[ objOrId ];\r\n        }        \r\n    }\r\n\r\n    [ Symbol.iterator ]() : IterableIterator<R> {\r\n        return this.models[ Symbol.iterator ]();\r\n    }\r\n\r\n    // Loop through the members in the scope of transaction.\r\n    // Transactional version of each()\r\n    updateEach( iteratee : ( val : R, key? : number ) => void ){\r\n        const isRoot = transactionApi.begin( this );\r\n        this.each( iteratee );\r\n        isRoot && transactionApi.commit( this );\r\n    }\r\n\r\n    /** @internal */\r\n    _validateNested( errors : {} ) : number {\r\n        // Don't validate if not aggregated.\r\n        if( this._shared ) return 0;\r\n\r\n        let count = 0;\r\n\r\n        this.each( record => {\r\n            const error = record.validationError;\r\n            if( error ){\r\n                errors[ record.cid ] = error;\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n    model : typeof Record\r\n\r\n    // idAttribute extracted from the model type.\r\n    idAttribute : string\r\n\r\n    constructor( records? : ElementsArg<R>, options : CollectionOptions = {}, shared? : number ){\r\n        super( _count++ );\r\n        this.models = [];\r\n        this._byId = {};\r\n        \r\n        this.comparator  = this.comparator;\r\n\r\n        if( options.comparator !== void 0 ){\r\n            this.comparator = options.comparator;\r\n            options.comparator = void 0;\r\n        }\r\n        \r\n        this.model       = this.model;\r\n        \r\n        if( options.model ){\r\n            this.model = options.model;\r\n            options.model = void 0;\r\n        }\r\n\r\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\r\n\r\n        this._shared = shared || 0;\r\n\r\n        if( records ){\r\n            const elements = toElements( this, records, options );\r\n            emptySetTransaction( this, elements, options, true );\r\n        }\r\n\r\n        this.initialize.apply( this, arguments );\r\n\r\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\r\n    }\r\n\r\n    initialize(){}\r\n\r\n    // Deeply clone collection, optionally setting new owner.\r\n    clone( options : CloneOptions = {} ) : this {\r\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\r\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\r\n        \r\n        if( options.pinStore ) copy._defaultStore = this.getStore();\r\n        \r\n        return copy;\r\n    }\r\n\r\n    toJSON( options? : object ) : any {\r\n        return this.map( model => model.toJSON( options ) );\r\n    }\r\n\r\n    // Apply bulk in-place object update in scope of ad-hoc transaction \r\n    set( elements : ElementsArg<R> = [], options : TransactionOptions = {} ) : this {\r\n        if( (<any>options).add !== void 0 ){\r\n            this._log( 'warn', \"Type-R:InvalidOption\", \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\r\n        }\r\n\r\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\r\n        if( options.reset ){\r\n            this.reset( elements, options )\r\n        }\r\n        else{\r\n            const transaction = this._createTransaction( elements, options );\r\n            transaction && transaction.commit();\r\n        } \r\n\r\n        return this;    \r\n    }\r\n\r\n        /**\r\n     * Enable or disable live updates.\r\n     * \r\n     * `true` enables full collection synchronization.\r\n     * `false` cancel live updates.\r\n     * `json => true | false` - filter updates\r\n     */\r\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<this> {\r\n        if( enabled ){\r\n            this.liveUpdates( false );\r\n\r\n            const filter = typeof enabled === 'function' ? enabled : () => true;\r\n\r\n            this._liveUpdates = {\r\n                updated : json => {\r\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\r\n                },\r\n\r\n                removed : id => this.remove( id )\r\n            };\r\n\r\n            return this.getEndpoint().subscribe( this._liveUpdates, this ).then( () => this );\r\n        }\r\n        else{\r\n            if( this._liveUpdates ){\r\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\r\n                this._liveUpdates = null;\r\n            }\r\n\r\n            // TODO: Return the resolved promise.\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    _liveUpdates : object\r\n\r\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<this> {\r\n        const options = { parse : true, ...a_options },\r\n            endpoint = this.getEndpoint();\r\n\r\n        return startIO(\r\n            this,\r\n            endpoint.list( options, this ),\r\n            options,\r\n\r\n            json => {\r\n                let result : any = this.set( json, { parse : true, ioMethod : 'fetch', ...options } as TransactionOptions );\r\n                \r\n                if( options.liveUpdates ){\r\n                    result = this.liveUpdates( options.liveUpdates );\r\n                }\r\n\r\n                return result;\r\n            }\r\n        );\r\n    }\r\n\r\n    dispose() : void {\r\n        if( this._disposed ) return;\r\n\r\n        const aggregated = !this._shared;\r\n\r\n        for( let record of this.models ){\r\n            free( this, record );\r\n\r\n            if( aggregated ) record.dispose();\r\n        }\r\n\r\n        this.liveUpdates( false );\r\n\r\n        super.dispose();\r\n    }\r\n\r\n    reset( a_elements? : ElementsArg<R>, options : TransactionOptions = {} ) : R[] {\r\n        const isRoot = begin( this ),\r\n              previousModels = this.models;\r\n\r\n        // Make all changes required, but be silent.\r\n        if( a_elements ){            \r\n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\r\n        }\r\n        else{\r\n            this._byId = {};\r\n            this.models = [];\r\n        }\r\n\r\n        markAsDirty( this, options );\r\n\r\n        options.silent || trigger2( this, 'reset', this, { previousModels, ...options } );\r\n\r\n        // Dispose models which are not in the updated collection.\r\n        const { _byId } = this;\r\n        \r\n        for( let toDispose of previousModels ){\r\n            _byId[ toDispose.cid ] || free( this, toDispose );\r\n        }\r\n\r\n        isRoot && commit( this );\r\n        return this.models;\r\n    }\r\n\r\n    // Add elements to collection.\r\n    add( a_elements : ElementsArg<R> , options : AddOptions = {} ){\r\n        const elements = toElements( this, a_elements, options ),\r\n              transaction = this.models.length ?\r\n                    addTransaction( this, elements, options ) :\r\n                    emptySetTransaction( this, elements, options );\r\n\r\n        if( transaction ){\r\n            transaction.commit();\r\n            return transaction.added;\r\n        }\r\n    }\r\n\r\n    // Remove elements. \r\n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\r\n        if( recordsOrIds ){\r\n            return Array.isArray( recordsOrIds ) ?\r\n                        removeMany( this, recordsOrIds, options ) as R[]:\r\n                        removeOne( this, recordsOrIds, options ) as R;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    // Apply bulk object update without any notifications, and return open transaction.\r\n    // Used internally to implement two-phase commit.   \r\n    /** @internal */\r\n    _createTransaction( a_elements : ElementsArg<R>, options : TransactionOptions = {} ) : CollectionTransaction | void {\r\n        const elements = toElements( this, a_elements, options );\r\n\r\n        if( this.models.length ){\r\n            return options.remove === false ?\r\n                        addTransaction( this, elements, options, true ) :\r\n                        setTransaction( this, elements, options );\r\n        }\r\n        else{\r\n            return emptySetTransaction( this, elements, options );\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    static _metatype = AggregatedType;\r\n\r\n    /***********************************\r\n     * Collection manipulation methods\r\n     */\r\n\r\n    sort( options : TransactionOptions = {} ) : this {\r\n        if( sortElements( this, options ) ){\r\n            const isRoot = begin( this );\r\n            \r\n            if( markAsDirty( this, options ) ){\r\n                trigger2( this, 'sort', this, options );\r\n            }\r\n\r\n            isRoot && commit( this );\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    // Remove and return given model.\r\n    unset( modelOrId : R | string, options? ) : R {\r\n        const value = this.get( modelOrId );\r\n        this.remove( modelOrId, { unset : true, ...options } );\r\n        return value;\r\n    }\r\n\r\n    modelId( attrs : {} ) : any {\r\n        return attrs[ this.model.prototype.idAttribute ];\r\n    }\r\n\r\n    // Toggle model in collection.\r\n    toggle( model : R, a_next? : boolean ) : boolean {\r\n        var prev = Boolean( this.get( model ) ),\r\n            next = a_next === void 0 ? !prev : Boolean( a_next );\r\n\r\n        if( prev !== next ){\r\n            if( prev ){\r\n                this.remove( model );\r\n            }\r\n            else{\r\n                this.add( model );\r\n            }\r\n        }\r\n\r\n        return next;\r\n    }\r\n\r\n    /** @internal */\r\n    _log( level : LogLevel, topic : string, text : string, value : object, a_logger? : Logger ) : void {\r\n        ( a_logger || logger ).trigger( level, topic, `${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\r\n            Argument : value,\r\n            'Attributes spec' : this.model.prototype._attributes\r\n        });\r\n    }\r\n\r\n    getClassName() : string {\r\n        return super.getClassName() || 'Collection';\r\n    }\r\n\r\n    /***********************************\r\n     * Proxied Array methods\r\n     */\r\n\r\n    get length() : number { return this.models.length; }\r\n\r\n    // Add a model to the end of the collection.\r\n    push(model : ElementsArg<R>, options? : CollectionOptions ) {\r\n        return this.add(model, { at: this.length, ...options });\r\n    }\r\n\r\n    // Remove a model from the end of the collection.\r\n    pop( options? : CollectionOptions ) : R {\r\n        var model = this.at(this.length - 1);\r\n        this.remove(model, { unset : true, ...options });\r\n        return model;\r\n    }\r\n\r\n    // Add a model to the beginning of the collection.\r\n    unshift(model : ElementsArg<R>, options? : CollectionOptions ) {\r\n        return this.add(model, { at: 0, ...options });\r\n    }\r\n  \r\n    // Remove a model from the beginning of the collection.\r\n    shift( options? : CollectionOptions ) : R {\r\n        const model = this.at(0);\r\n        this.remove( model, { unset : true, ...options } );\r\n        return model;\r\n    }\r\n}\r\n\r\nimport { ArrayMixin } from './arrayMethods'\r\n\r\nexport interface Collection<R extends Record> extends ArrayMixin<R>{}\r\n\r\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\r\n\r\nexport type ElementsArg<R = Record> = Partial<R> | Partial<R>[]\r\n\r\n// TODO: make is safe for parse to return null (?)\r\nfunction toElements<R extends Record>( collection : Collection<R>, elements : ElementsArg<R>, options : CollectionOptions ) : Elements {\r\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \r\n    return Array.isArray( parsed ) ? parsed : [ parsed ];\r\n}\r\n\r\nRecord.Collection = Collection;","import { AnyType, ChainableAttributeSpec, Record } from '../record';\r\nimport { CollectionReference, parseReference } from './commons';\r\n\r\n\r\n/********\r\n * Reference to model by id.\r\n * \r\n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\r\n * with a real model.\r\n * \r\n * No model changes are detected and counted as owner's change. That's intentional.\r\n */\r\n\r\n/** @private */\r\ntype RecordRefValue = Record | string;\r\n\r\n/** @private */\r\nclass RecordRefType extends AnyType {\r\n    // It is always serialized as an id, whenever it's resolved or not. \r\n    toJSON( value : RecordRefValue ){\r\n        return value && typeof value === 'object' ? value.id : value;\r\n    }\r\n\r\n    // Wne \r\n    clone( value : RecordRefValue ){\r\n        return value && typeof value === 'object' ? value.id : value;\r\n    }\r\n\r\n    // Model refs by id are equal when their ids are equal.\r\n    isChanged( a : RecordRefValue, b : RecordRefValue){\r\n        var aId = a && ( (<Record>a).id == null ? a : (<Record>a).id ),\r\n            bId = b && ( (<Record>b).id == null ? b : (<Record>b).id );\r\n\r\n        return aId !== bId;\r\n    }\r\n\r\n    // Refs are always valid.\r\n    validate( model, value, name ){}\r\n}\r\n\r\nexport function memberOf<R extends typeof Record>( this : void, masterCollection : CollectionReference, T? : R ) : ChainableAttributeSpec<R> {\r\n    const getMasterCollection = parseReference( masterCollection );\r\n\r\n    const typeSpec = new ChainableAttributeSpec<R>({\r\n        value : null,\r\n        _metatype : RecordRefType\r\n    });\r\n    \r\n    return typeSpec\r\n        .get( function( objOrId : RecordRefValue, name : string ) : Record {\r\n            if( typeof objOrId === 'object' ) return objOrId;\r\n\r\n            // So, we're dealing with an id reference. Resolve it.\r\n            const collection = getMasterCollection( this );\r\n            let   record : Record = null;\r\n\r\n            // If master collection exists and is not empty...\r\n            if( collection && collection.length ){\r\n                // Silently update attribute with record from this collection.\r\n                record = collection.get( objOrId ) || null;\r\n                this.attributes[ name ] = record;\r\n\r\n                // Subscribe for events manually. delegateEvents won't be invoked.\r\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\r\n            }\r\n\r\n            return record;\r\n        });\r\n}","import { Collection, CollectionConstructor } from '../collection';\r\nimport { define, tools } from '../object-plus';\r\nimport { AggregatedType, ChainableAttributeSpec, Record, type } from '../record';\r\nimport { ItemsBehavior, transactionApi } from '../transactions';\r\nimport { CollectionReference, parseReference } from './commons';\r\n\r\n\r\ntype RecordsIds = ( string | number )[];\r\n\r\nexport function subsetOf<X extends CollectionConstructor<R>, R extends Record>( this : void, masterCollection : CollectionReference, T? : X ) : ChainableAttributeSpec<X>{\r\n    const CollectionClass = T || Collection,\r\n        // Lazily define class for subset collection, if it's not defined already...\r\n        SubsetOf = CollectionClass._SubsetOf || ( CollectionClass._SubsetOf = defineSubsetCollection( CollectionClass as any ) as any ),\r\n        getMasterCollection = parseReference( masterCollection );\r\n\r\n    return type( SubsetOf ).get(\r\n        function( refs ){\r\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\r\n            return refs;\r\n        }\r\n    );\r\n}\r\n\r\nCollection.prototype.createSubset = function( models : any, options ) : Collection {\r\n    const SubsetOf = subsetOf( this, this.constructor ).options.type,\r\n          subset   = new SubsetOf( models, options );\r\n        \r\n    subset.resolve( this );\r\n    return subset;\r\n}\r\n\r\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\r\n\r\nfunction defineSubsetCollection( CollectionClass : typeof Collection ) {\r\n    @define class SubsetOfCollection extends CollectionClass {\r\n        refs : any[];\r\n        resolvedWith : Collection = null;\r\n\r\n        _metatype : AggregatedType\r\n\r\n        get __inner_state__(){ return this.refs || this.models; }\r\n\r\n        constructor( recordsOrIds?, options? ){\r\n            super( [], options, subsetOfBehavior );\r\n            this.refs = toArray( recordsOrIds );\r\n        }\r\n\r\n        // Remove should work fine as it already accepts ids. Add won't...\r\n        add( a_elements, options = {} ){\r\n            const { resolvedWith } = this,\r\n                    toAdd = toArray( a_elements );\r\n            \r\n            if( resolvedWith ){\r\n                // If the collection is resolved already, everything is simple.\r\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\r\n            }\r\n            else{\r\n                // Collection is not resolved yet. So, we prepare the delayed computation.\r\n                if( toAdd.length ){\r\n                    const isRoot = transactionApi.begin( this );\r\n\r\n                    // Save elements to resolve in future...\r\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\r\n\r\n                    transactionApi.markAsDirty( this, options );\r\n\r\n                    // And throw the 'changes' event.\r\n                    isRoot && transactionApi.commit( this );\r\n                }\r\n            }\r\n        }\r\n\r\n        reset( a_elements?, options = {} ){\r\n            const { resolvedWith } = this,\r\n                elements = toArray( a_elements );\r\n    \r\n            return resolvedWith ?\r\n                // Collection is resolved, so parse ids and forward the call to set.\r\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\r\n                // Collection is not resolved yet. So, we prepare the delayed computation.\r\n                delaySet( this, elements, options ) as any || [];\r\n        }\r\n\r\n        _createTransaction( a_elements, options? ){\r\n            const { resolvedWith } = this,\r\n                elements = toArray( a_elements );\r\n    \r\n            return resolvedWith ?\r\n                // Collection is resolved, so parse ids and forward the call to set.\r\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\r\n                // Collection is not resolved yet. So, we prepare the delayed computation.\r\n                delaySet( this, elements, options );\r\n        }\r\n\r\n        // Serialized as an array of model ids.\r\n        toJSON() : RecordsIds {\r\n            return this.refs ?\r\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\r\n                this.models.map( model => model.id );\r\n        }\r\n\r\n        // Subset is always valid.\r\n        _validateNested(){ return 0; }\r\n\r\n        get length() : number {\r\n            return this.models.length || ( this.refs ? this.refs.length : 0 );\r\n        }\r\n\r\n        // Must be shallow copied on clone.\r\n        clone( owner? ){\r\n            var Ctor = (<any>this).constructor,\r\n                copy = new Ctor( [], {\r\n                    model : this.model,\r\n                    comparator : this.comparator\r\n                });\r\n\r\n            if( this.resolvedWith ){\r\n                // TODO: bug here. \r\n                copy.resolvedWith = this.resolvedWith;\r\n                copy.refs = null;\r\n                copy.reset( this.models, { silent : true } );\r\n            }\r\n            else{\r\n                copy.refs = this.refs.slice();\r\n            }\r\n\r\n            return copy;\r\n        }\r\n\r\n        // Clean up the custom parse method possibly defined in the base class.\r\n        parse( raw : any ) : Record[] {\r\n            return raw;\r\n        }\r\n\r\n        resolve( collection : Collection ) : this {\r\n            if( collection && collection.length ){\r\n                this.resolvedWith = collection;\r\n\r\n                if( this.refs ){\r\n                    this.reset( this.refs, { silent : true } );\r\n                    this.refs = null;\r\n                }\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        getModelIds() : RecordsIds { return this.toJSON(); }\r\n\r\n        toggle( modelOrId : any, val : boolean ) : boolean {\r\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\r\n        }\r\n\r\n        addAll() : Record[] {\r\n            if( this.resolvedWith ){\r\n                this.set( this.resolvedWith.models );\r\n                return this.models;\r\n            }\r\n\r\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\r\n        }\r\n\r\n        toggleAll() : Record[] {\r\n            return this.length ? this.reset() : this.addAll();\r\n        }\r\n    }\r\n\r\n    // Clean up all custom item events to prevent memory leaks.\r\n    SubsetOfCollection.prototype._itemEvents = void 0;\r\n\r\n    return SubsetOfCollection;\r\n}\r\n\r\nfunction resolveRefs( master, elements ){\r\n    const records = [];\r\n    \r\n    for( let el of elements ){\r\n        const record = master.get( el );\r\n        if( record ) records.push( record );\r\n    }\r\n\r\n    return records;\r\n}\r\n\r\nfunction delaySet( collection, elements, options ) : void {\r\n    if( tools.notEqual( collection.refs, elements ) ){\r\n        const isRoot = transactionApi.begin( collection );\r\n\r\n        // Save elements to resolve in future...\r\n        collection.refs = elements.slice();\r\n\r\n        transactionApi.markAsDirty( collection, options );\r\n        \r\n        // And throw the 'changes' event.\r\n        isRoot && transactionApi.commit( collection );\r\n    }\r\n}\r\n\r\nfunction toArray( elements ){\r\n    return elements ? ( \r\n        Array.isArray( elements ) ? elements : [ elements ]\r\n    ) : [];\r\n}","import { Collection } from '../collection';\r\nimport { Record } from '../record';\r\nimport { CompiledReference } from '../traversable';\r\n\r\nexport type CollectionReference = ( () => Collection ) | Collection | string; \r\n\r\n/** @private */\r\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Record ) => Collection {\r\n    switch( typeof collectionRef ){\r\n        case 'function' :\r\n            return root => (<any>collectionRef).call( root );\r\n        case 'object'   :\r\n            return () => <Collection>collectionRef;\r\n        case 'string'   :\r\n            const { resolve } = new CompiledReference( <string>collectionRef );\r\n            return resolve;\r\n    }\r\n}","import { Record } from '../record';\r\nimport { Transactional } from '../transactions';\r\n\r\nlet _store : Store = null;\r\n\r\nexport class Store extends Record {\r\n    getStore() : Store { return this; }\r\n \r\n    // delegate item lookup to owner, and to the global store if undefined\r\n    get( name : string ) : any {\r\n        // Lookup for resource in the current store. \r\n        let local = this[ name ];\r\n\r\n        // If something is found or it's the global store, return result.\r\n        if( local || this === this._defaultStore ) return local;\r\n\r\n        // Forward failed lookup to owner or global store.\r\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \r\n    }\r\n\r\n    static get global(){ return _store; }\r\n    static set global( store : Store ){\r\n        if( _store ){\r\n          _store.dispose();\r\n        }\r\n\r\n        Transactional.prototype._defaultStore = _store = store;\r\n    }\r\n}\r\n\r\nStore.global = new Store();","// Dummy polyfill to prevent exception in IE.\r\nif( typeof Symbol === 'undefined' ){\r\n    Object.defineProperty( window, 'Symbol', { value : { iterator : 'Symbol.iterator' }, configurable : true  });\r\n}\r\n\r\nimport { Events, Mixable as Class } from './object-plus/';\r\n// Define synonims for NestedTypes backward compatibility.\r\nimport { Record as Model } from './record';\r\n\r\n/**\r\n * Export everything \r\n */\r\nexport * from './collection';\r\nexport * from './io-tools';\r\nexport * from './object-plus';\r\nexport * from './record';\r\nexport * from './relations';\r\nexport * from './transactions';\r\nexport { Model, Class };\r\n\r\n\r\nexport const { on, off, trigger, once, listenTo, stopListening, listenToOnce } = <any>Events;\r\n\r\n/** Wrap model or collection method in transaction. */\r\nexport function transaction< F extends Function >( method : F ) : F {\r\n    return <any>function( ...args ){\r\n        let result;\r\n        \r\n        this.transaction( () => {\r\n            result = method.apply( this, args );\r\n        });\r\n        \r\n        return result;\r\n    }\r\n}","import {DateType, ChainableAttributeSpec, type} from '@type-r/models';\r\n\r\nconst msDatePattern  = /\\/Date\\(([0-9]+)\\)\\//;\r\n\r\nexport class MicrosoftDateType extends DateType {\r\n    convert( next ) {\r\n        if( typeof next === 'string' ){\r\n            const msDate = msDatePattern.exec( next );\r\n            if( msDate ){\r\n                return new Date( Number( msDate[ 1 ] ) );\r\n            }\r\n        }\r\n\r\n        return DateType.prototype.convert.apply( this, arguments );\r\n    }\r\n\r\n    toJSON( value ) { return value && `/Date(${ value.getTime() })/`; }\r\n}\r\n\r\nexport const MicrosoftDate = new ChainableAttributeSpec({\r\n    type      : Date,\r\n    _metatype: MicrosoftDateType\r\n})\r\n\r\nexport const Timestamp = type( Date ).toJSON( x => x && x.getTime() );","import {NumericType} from '@type-r/models';\r\n\r\nexport function Integer( x ) {\r\n    return x ? Math.round( x ) : 0;\r\n}\r\n\r\n(Integer as any)._metatype = NumericType;\r\n","import { AttributeCheck, type } from '@type-r/models';\r\n\r\nconst urlPattern = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\r\n\r\nexport function isUrl( x : string ) {\r\n    return !x || urlPattern.test( x );\r\n}\r\n\r\n(isUrl as AttributeCheck).error = 'Not valid URL'\r\n\r\nexport const Url = type( String ).check( isUrl );","import { AttributeCheck, type } from '@type-r/models';\r\n\r\nconst ipPattern = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\r\n\r\nexport function isIPAddress( x : string ) {\r\n    return !x || ipPattern.test( x );\r\n}\r\n\r\n(isIPAddress as AttributeCheck).error = 'Not valid IP address'\r\n\r\nexport const IPAddress = type( String ).check( isIPAddress );","import { AttributeCheck, type } from '@type-r/models';\r\n\r\nconst emailPattern = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/i;\r\n\r\nexport function isEmail( x : string ) {\r\n    return !x || !!x.match( emailPattern );\r\n}\r\n\r\n(isEmail as AttributeCheck).error = 'Not valid email';\r\n\r\nexport const Email = type( String ).check( isEmail );","import { Integer, MicrosoftDate, Timestamp } from '@type-r/ext-types';\r\nimport { type, ChainableAttributeSpec } from '@type-r/models';\r\n\r\n/*\r\n * dates\r\n */\r\ndeclare global {\r\n    // Legacy has-notation\r\n    interface Function{\r\n        value : ( x : any ) => ChainableAttributeSpec<any>;\r\n        isRequired : ChainableAttributeSpec<any>;\r\n        asProp : PropertyDecorator\r\n        has : ChainableAttributeSpec<any>;\r\n    }\r\n\r\n    // Date type extensions\r\n    interface DateConstructor {\r\n        microsoft : ChainableAttributeSpec<this>\r\n        timestamp : ChainableAttributeSpec<this>\r\n    }\r\n\r\n    // Integer type\r\n    interface Window {\r\n        Integer : Function;\r\n    }\r\n\r\n    interface NumberConstructor {\r\n        integer : typeof Integer\r\n    }\r\n}\r\n\r\nFunction.prototype.value = function( x ) {\r\n    return new ChainableAttributeSpec( { type : this, value : x, hasCustomDefault : true } );\r\n};\r\n\r\nObject.defineProperty( Function.prototype, 'isRequired', {\r\n    get() { return this._isRequired || this.has.isRequired; },\r\n    set( x ){ this._isRequired = x; }\r\n});\r\n\r\nObject.defineProperty( Function.prototype, 'asProp', {\r\n    get() { return this.has.asProp; },\r\n});\r\n\r\nObject.defineProperty( Function.prototype, 'has', {\r\n    get() {\r\n        // workaround for sinon.js and other libraries overriding 'has'\r\n        return this._has || type( this );\r\n    },\r\n\r\n    set( value ) { this._has = value; }\r\n} );\r\n\r\n\r\nObject.defineProperties( Date, {\r\n    microsoft: {\r\n        value: MicrosoftDate\r\n    },\r\n\r\n    timestamp: {\r\n        value: Timestamp\r\n    }\r\n} );\r\n\r\n\r\n/*\r\n * integer\r\n */\r\n\r\nNumber.integer = Integer;\r\n\r\nif( typeof window !== 'undefined' ) {\r\n    window.Integer = Integer;\r\n}"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","defaults","dest","source","name","other","isValidJSON","value","proto","getPrototypeOf","obj","predicate","fun","ArrayProto","arr","result","someArray","someObject","some","x","every","getBaseClass","Class","transform","DateProto","Date","ObjectProto","notEqual","a","protoA","arraysNotEqual","keysA","keys","objectsNotEqual","HashProto","hashMap","hash","EventMap","map","handlers","concat","names","addEvent","_a","split","eventSplitter","_i","name_1","getBubblingHandler","callback","name_2","push","EventDescriptor","event_1","on","event_2","off","slice","addEventsMap","handler","_bubblingHandlers","event","trigger5","trigger3","trigger2","context","next","listOff","_events","filteredHead","prev","head","ev","_callback","listSend3","EventHandler","name_3","self","queue","all","listSend2","listSend4","listSend5","f","listSend6","Mixable","protoProps","staticProps","BaseClass","mixins","defineMixin","merge","mergeObject","getStaticDefinitions","onDefine","definitions","mergeInheritedMembers","spec","statics","TheSubclass","tslib_1.__extends","predefine","define","Constructor","__super__","MixinsState","get","populate","onExtend","ClassOrDefinition","Ctor","rules","definitionRules","rule","appliedMixins","mixins_1","mixin","isArray","sourceMixins","mergeRules","ctors","ctors_1","unshift","object","ignore","dontMix","getOwnPropertyNames","forEachOwnProp","sourceProp","_this","assignProperty","mixinRules","protoValue","baseProto","resolveRule","function","caller","list","destProp","configurable","pipe","classFirst","classLast","once","once_1","func","memo","first","_once","strings","api","events","test","names_1","_idCount","uniqueId","Messenger","localEvents","_localEvents","properties","eventsMap","defineProperties","toPropertyDescriptor","addReference","a_source","_listeningTo","removeAll","second","cid","_disposed","stopListening","initialize","Events","discard","omit","listener","isProduction","process","env","NODE_ENV","logEvents","Logger","level","filter","topic","msg","props","args","toString","console","Error","counter","_super","window","something","body","join","JSON","stringify","logger","logEvents_1","logToConsole","throwingLogger","throwOn","trigger","bind","startIO","promise","options","thenDo","abortIO","_ioPromise","then","resp","triggerAndBubble","catch","err","abort","eventSource","collection","referenceMask","reference","splitTail","path","match","substr","tail","pop","local","resolve","Function","shift","resolveReference","root","action","skip","getStore","getOwner","ValidationError","iteratee","error","nested","each","eachError","_validateNested","validate","ItemsBehavior","Transactional","endpoint","_endpoint","Transactional_1","_owner","_ownerKey","_changeEventName","listenTo","isRoot","transactionApi","begin","update","set","commit","transaction","__inner_state__","_changeToken","json","strict","validationError","eachValidationError","getClassName","data","_defaultStore","getOwnerEndpoint","_endpoints","_validationError","getValidationError","cidPrefix","_transaction","markAsDirty","dirty","silent","_isDirty","initiator","originalOptions","_onChildrenChange","aquire","owner","child","ReferenceError","free","_begin","_markAsDirty","setAttribute","record","_attributes","doUpdate","attributes","_previousAttributes","AttributesCopy","_changedAttributes","UpdateRecordMixin","attribute","propagateChanges","forceAttributeChange","_createTransaction","a_values","unknown","changes","values","parse","shouldBeAnObject","unknownAttrsWarning","RecordTransaction","nested_1","_log","nested_2","changes_1","_b","emptyOptions","AnyType","model","handleChange","toJSON","getHook","v","defaultValue","isChanged","code","text","New value","Prev. value","a_options","getHooks","transforms","changeHandlers","type","changeEvents","hasCustomDefault","tools.isValidJSON","isRequired","wrapIsRequired","convert","getHook_1","reduce","chainGetHooks","validate_1","chainTransforms","chainChangeHandlers","doInit","prevHook","nextHook","prevTransform","nextTransform","prevHandler","nextHandler","ImmutableClassType","PrimitiveType","NumericType","num","isFinite","ArrayType","ObjectType","doNothing","FunctionType","DateType","date","timestamp","getTime","toISOString","supportsDate","isNaN","struct","minutesOffset","isoDatePattern","exec","k","numericKeys","undefined","UTC","safeParseDate","AggregatedType","clone","canBeUpdated","nestedTransaction","_shared","persistent","_handleChange","unset","dispose","shareAndListen","listen","share","SharedType","implicitObject","_onChange","builtins","String","Number","Boolean","metatypes","getMetatype","_metatype","idx","resolveBuiltins","ChainableAttributeSpec","check","metadata","definitionKey","definitionDecorator","required","ref","o","emptyFunction","changed","eventMap","unsubscribe","subscribe","cloned","Type","inferType","shared","attrDef","createAttribute","from","createAttributesMixin","attributesDefinition","baseClassAttributes","myAttributes","_.transform","allAttributes","_.defaults","ConstructorsMixin","attrDefs","attrs","attr","Attributes","constructorsMixin","_attributesArray","createPropertyDescriptor","attrSpecs","eventsApi.EventMap","createWatcherFromRef","wrapWatcher","localEventsMixin","watcher","IORecordMixin","save","getEndpoint","ioMethod","isNew","id","fetch","read","destroy","remove","isEmpty","_cidCounter","Record","definition","idAttribute","extend","diff","hasChanged","val","old","nullify","forEach","_attributesArray_1","copy","pinStore","errors","asJson","l","newModel","clear","a_logger","Attributes definition","a_fun","tools.transform","Symbol","iterator","RecordEntriesIterator","Collection","typeCheck","BaseRecordAttributes","BaseRecordAttributesCopy","IdAttribute","metatype","done","DefaultCollection","dynamicMixin","_aquire","_free","convertAndAquire","_aggregationError","_itemEvents","sortElements","_comparator","sort","models","addIndex","index","removeIndex","updateIndex","previous","CollectionTransaction","logAggregationError","added","removed","added_1","_d","removed_1","_e","sorted","addTransaction","items","a_items","forceMerge","_byId","prevLength","a_items_1","item","appendElements","needSort","at","length_1","j","moveElements","sortOrMoveElements","removeMany","toRemove","_removeFromIndex","_reallocate","silentOptions","emptySetTransaction","len","src","_reallocateEmpty","setTransaction","_prevById","prevModels","toAdd","orderKept","reusedCount","previous_1","_garbageCollect","children","children_1","freeAll","addedOrChanged","ArrayMixin","mapFilter","res","doWhile","init","end","modelOrId","idOrObj","toPredicateFunction","m","firstMatch","find","entries","a_index","noOp","keys_1","keys_2","_count","CollectionRefsType","Refs","RefsCollection","_SubsetOf","Subset","itemEvents","comparator","aa","bb","_store","objOrId","count","elements","add","reset","enabled","liveUpdates","filter_1","_liveUpdates","updated","tslib_1.__assign","aggregated","a_elements","previousModels","toElements","previousModels_1","toDispose","recordsOrIds","el","splice","notify","removeOne","a_next","Argument","Attributes spec","records","parsed","RecordRefType","subsetOf","masterCollection","T","CollectionClass","SubsetOf","subsetOfBehavior","refs","toArray","SubsetOfCollection","resolvedWith","resolveRefs","delaySet","raw","toggle","addAll","defineSubsetCollection","getMasterCollection","collectionRef","parseReference","createSubset","subset","master","elements_1","tools.notEqual","Store","store","global","msDatePattern","MicrosoftDateType","msDate","MicrosoftDate","Timestamp","Integer","Math","round","urlPattern","isUrl","ipPattern","isIPAddress","emailPattern","isEmail","_isRequired","has","asProp","_has","microsoft","integer"],"mappings":"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"}