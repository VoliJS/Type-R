{"version":3,"file":"index.js","sources":["../../mixture/src/tools.ts","../../mixture/src/eventsource.ts","../../node_modules/tslib/tslib.es6.js","../../mixture/src/mixins.ts","../../mixture/src/events.ts","../../mixture/src/logging.ts","../src/io-tools.ts","../src/traversable.ts","../src/validation.ts","../../node_modules/@linked/value/src/helpers.ts","../../node_modules/@linked/value/src/index.ts","../src/transactions.ts","../src/model/updates.ts","../src/model/metatypes/any.ts","../src/model/metatypes/basic.ts","../src/model/metatypes/date.ts","../src/model/metatypes/owned.ts","../src/model/metatypes/shared.ts","../src/model/metatypes/index.ts","../src/model/attrDef.ts","../src/model/mixin.ts","../src/model/io-mixin.ts","../src/model/model.ts","../src/model/linked-attrs.ts","../src/model/index.ts","../src/collection/commons.ts","../src/collection/add.ts","../src/collection/arrayMethods.ts","../src/collection/remove.ts","../src/collection/set.ts","../src/collection/index.ts","../src/relations/commons.ts","../src/relations/from.ts","../src/relations/subsetOf.ts","../src/relations/store.ts","../src/index.ts"],"sourcesContent":[" /** Similar to underscore `_.defaults` */\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\nexport function defaults< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && defaults( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Check if value is raw JSON */\nexport function isValidJSON( value : any ) : boolean {\n    if( value === null ){\n        return true;\n    }\n\n    switch( typeof value ){\n    case 'number' :\n    case 'string' :\n    case 'boolean' :\n        return true;\n\n    case 'object':\n        var proto = Object.getPrototypeOf( value );\n\n        if( proto === Object.prototype || proto === Array.prototype ){\n            return every( value, isValidJSON );\n        }\n    }\n\n    return false;\n}\n\n/** Get the base class constructor function.\n * @param Class Subclass constructor function.\n * @returns Base class constructor function.\n */\nexport function getBaseClass( Class : Function ) {\n    return Object.getPrototypeOf( Class.prototype ).constructor\n}\n\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\n    for( let name of names ){\n        const value = definition[ name ];\n        value === void 0 || ( Class.prototype[ name ] = value );\n    }\n}\n\n/** Checks whenever given object is an empty hash `{}` */\nexport function isEmpty( obj : {} ) : boolean {\n    if( obj ){\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport type Iteratee = ( value : any, key? : string | number ) => any;\n\nfunction someArray( arr : any[], fun : Iteratee ) : any {\n    let result;\n\n    for( let i = 0; i < arr.length; i++ ){\n        if( result = fun( arr[ i ], i ) ){\n            return result;\n        }\n    }\n}\n\nfunction someObject( obj : {}, fun : Iteratee ) : any {\n    let result;\n\n    for( let key in obj ){\n        if( obj.hasOwnProperty( key ) ){\n            if( result = fun( obj[ key ], key ) ){\n                return result;\n            }\n        }\n    }\n}\n\n/** Similar to underscore `_.some` */\nexport function some( obj, fun : Iteratee ) : any {\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\n        return someArray( obj, fun );\n    }\n    else{\n        return someObject( obj, fun );\n    }\n}\n\n/** Similar to underscore `_.every` */\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\n    return !some( obj, x => !predicate( x ) );\n}\n\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\n    let desc : PropertyDescriptor;\n\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\n    }\n\n    return desc;\n}\n\n/** Similar to underscore `_.omit` */\nexport function omit( source : {}, ...rest : string[] ) : {}\nexport function omit( source ) : {} {\n    const dest = {}, discard = {};\n\n    for( let i = 1; i < arguments.length; i ++ ){\n        discard[ arguments[ i ] ] = true;\n    }\n\n    for( var name in source ) {\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\n * When `fun` returns `undefined`, skip this value. \n */\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            var value = fun( source[ name ], name );\n            value === void 0 || ( dest[ name ] = < A >value );\n        }\n    }\n\n    return dest;\n}\n\nexport function fastAssign< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        dest[ name ] = source[ name ];\n    }\n\n    return dest;\n}\n\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        if( dest[ name ] === void 0 ){\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.extend` and `Object.assign` */\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\nexport function assign< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && assign( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.keys` */\nexport function keys( o : any ) : string[]{\n    return o ? Object.keys( o ) : [];\n}\n\n/** Similar to underscore `_.once` */\nexport function once( func : Function ) : Function {\n    var memo, first = true;\n    return function() {\n        if ( first ) {\n            first = false;\n            memo = func.apply(this, arguments);\n            func = null;\n        }\n        return memo;\n    };\n}\n\nconst ArrayProto = Array.prototype,\n      DateProto = Date.prototype,\n      ObjectProto = Object.prototype;\n\n/**\n * Determine whenever two values are not equal, deeply traversing \n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\n * values are compared with strict comparison.\n */\nexport function notEqual( a : any, b : any) : boolean {\n    if( a === b ) return false;\n\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\n        const protoA = Object.getPrototypeOf( a );\n\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\n\n        switch( protoA ){\n            case DateProto   : return +a !== +b;\n            case ArrayProto  : return arraysNotEqual( a, b );\n            case ObjectProto :\n            case null:\n                return objectsNotEqual( a, b );\n        }\n    }\n\n    return true;\n}\n\nfunction objectsNotEqual( a, b ) {\n    const keysA = Object.keys( a );\n\n    if( keysA.length !== Object.keys( b ).length ) return true;\n\n    for( let i = 0; i < keysA.length; i++ ) {\n        const key = keysA[ i ];\n\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction arraysNotEqual( a, b ) {\n    if( a.length !== b.length ) return true;\n\n    for( let i = 0; i < a.length; i++ ) {\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\n    }\n\n    return false;\n}\n\n/**\n * Create an object without Object prototype members except hasOwnProperty.\n * @param obj - optional parameter to populate the hash map from.\n */\nconst HashProto = Object.create( null );\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\n\nexport function hashMap( obj? ){\n    const hash = Object.create( HashProto );\n    return obj ? assign( hash, obj ) : hash;\n}\n\nexport function compare( a : any, b : any ) : -1 | 0 | 1 {\n    // Handle strictly equal values.\n    if( a == b ) return 0;\n\n    // Handle nulls.\n    if( a == null ) return -1;\n    if( b == null ) return 1;\n\n    // No nulls. Convert values to primitives.\n    const av = a.valueOf(),\n        bv = b.valueOf();\n\n    return  av < bv ? -1 :\n            av > bv ? 1 :\n            0;\n}","import { once as _once } from './tools'\n\n/*******************\n * Prebuilt events map, used for optimized bulk event subscriptions.\n *\n * const events = new EventMap({\n *      'change' : true, // Resend this event from self as it is.\n *      'change:attr' : 'localTargetFunction',\n *      'executedInTargetContext' : function(){ ... }\n *      'executedInNativeContext' : '^props.handler'\n * })\n */\nexport interface EventsDefinition {\n    [ events : string ] : Function | string | boolean\n}\n\nexport class EventMap {\n    handlers : EventDescriptor[] = [];\n\n    constructor( map? : EventsDefinition | EventMap ){\n        if( map ){\n            if( map instanceof EventMap ){\n                this.handlers = map.handlers.slice();\n            }\n            else{\n                map && this.addEventsMap( map );\n            }\n        }\n    }\n\n    merge( map : EventMap ){\n        this.handlers = this.handlers.concat( map.handlers );\n    }\n\n    addEventsMap( map : EventsDefinition ){\n        for( let names in map ){\n            this.addEvent( names, map[ names ] )\n        }\n    }\n\n    bubbleEvents( names : string ){\n        for( let name of names.split( eventSplitter ) ){\n            this.addEvent( name, getBubblingHandler( name ) );\n        }\n    }\n\n    addEvent( names : string, callback : Function | string | boolean ){\n        const { handlers } = this;\n\n        for( let name of names.split( eventSplitter ) ){\n            handlers.push( new EventDescriptor( name, callback ) );\n        }\n    }\n\n    subscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            on( source, event.name, event.callback, target );\n        }\n    }\n\n    unsubscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            off( source, event.name, event.callback, target );\n        }\n    }\n}\n\nexport class EventDescriptor {\n    callback : Function\n\n    constructor(\n        public name : string,\n        callback : Function | string | boolean\n    ){\n        if( callback === true ){\n            this.callback = getBubblingHandler( name );\n        }\n        else if( typeof callback === 'string' ){\n            this.callback =\n                function localCallback(){\n                    const handler = this[ callback ];\n                    handler && handler.apply( this, arguments );\n                };\n        }\n        else{\n            this.callback = <Function>callback;\n        }\n    }\n}\n\nconst _bubblingHandlers = {};\n\nfunction getBubblingHandler( event : string ){\n    return _bubblingHandlers[ event ] || (\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\n            else trigger2( this, event, a, b );\n        }\n    );\n}\n\nexport interface HandlersByEvent {\n    [ name : string ] : EventHandler\n}\n\nexport class EventHandler {\n    constructor( public callback : Callback, public context : any, public next = null ){}\n}\n\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\n    const head = _events[ name ];\n\n    let filteredHead, prev;\n\n    for( let ev = head; ev; ev = ev.next ){\n        // Element must be kept\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\n            ( context && context !== ev.context ) ){\n            \n            prev = ev;\n            filteredHead || ( filteredHead = ev );\n        }\n        // Element must be skipped\n        else{\n            if( prev ) prev.next = ev.next;\n        }\n    }\n\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\n}\n\nfunction listSend2( head : EventHandler, a, b ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\n}\n\nfunction listSend3( head : EventHandler, a, b, c ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\n}\n\nfunction listSend4( head : EventHandler, a, b, c, d ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\n}\n\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\n}\n\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\n}\n\nexport interface Callback extends Function {\n    _callback? : Function\n}\n\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const _events = source._events || ( source._events = Object.create( null ) );\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\n    }\n}\n\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const once : Callback = _once( function(){\n            off( source, name, once );\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n        on( source, name, once, context );\n    }\n}\n\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\n    const { _events } = source;\n    if( _events ){\n        if( callback || context ) {\n            if( name ){\n                listOff( _events, name, callback, context );\n            }\n            else{\n                for( let name in _events ){\n                    listOff( _events, name, callback, context );\n                }\n            }\n        }\n        else if( name ){\n            _events[ name ] = void 0;\n        }\n        else{\n            source._events = void 0;\n        }\n    }\n}\n\nexport interface EventSource {\n    /** @internal */\n    _events : HandlersByEvent\n}\n\nconst eventSplitter = /\\s+/;\n\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\n    if( eventSplitter.test( events ) ){\n        const names = events.split( eventSplitter );\n        for( let name of names ) api( source, name, callback, context );\n    }\n    else api( source, events, callback, context );\n}\n\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\n\n/*********************************\n * Event-triggering API\n */\n\n export function trigger2( self : EventSource, name : string, a, b ) : void {\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend2( queue, a, b );\n        listSend3( all, name, a, b );\n    }\n};\n\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend3( queue, a, b, c );\n        listSend4( all, name, a, b, c );\n    }\n};\n\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend5( queue, a, b, c, d, e );\n        listSend6( all, name, a, b, c, d, e );\n    }\n};","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*****************************************************************\n * Mixins engine and @define metaprogramming class extensions\n *\n * Vlad Balin & Volicon, (c) 2016-2017\n */\nimport { __extends } from 'tslib';\nimport { assign, defaults, getBaseClass, hashMap, transform } from './tools';\n\nexport interface Subclass< T > extends MixableConstructor {\n    new ( ...args ) : T\n    prototype : T\n}\n\nexport interface MixableConstructor extends Function{\n    __super__? : object;\n    mixins? : MixinsState;\n    onExtend? : ( BaseClass : Function ) => void;\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\n}\n\nexport interface MixableDefinition {\n    mixins? : Mixin[]\n}\n\n/**\n * Base class, holding metaprogramming class extensions.\n * Supports mixins and Class.define metaprogramming method.\n */\nexport class Mixable {\n    static onExtend : ( BaseClass : Function ) => void;\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \n    static __super__ : object\n    static mixins : MixinsState;\n\n    /** \n     *  Must be called after inheritance and before 'define'.\n     */\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\n        const BaseClass : MixableConstructor = getBaseClass( this );\n\n        // Assign statics.\n        staticProps && assign( this, staticProps );\n\n        // Extract and apply mixins from the definition.\n        const { mixins, ...defineMixin } = protoProps;\n        mixins && this.mixins.merge( mixins );\n\n        // Unshift definition to the the prototype.\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\n\n        // Unshift definition from statics to the prototype.\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\n\n        // Call onDefine hook, if it's present.\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\n        \n        // Apply merge rules to inherited members. No mixins can be added after this point.\n        this.mixins.mergeInheritedMembers( BaseClass );\n\n        return this;\n    }\n\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\n        let TheSubclass : Subclass< T >;\n\n        // 1. Create the subclass (ES5 compatibility shim).\n        // If constructor function is given...\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\n            TheSubclass = spec.constructor as any;\n            __extends( TheSubclass, this );\n        }\n        // Otherwise, create the subclall in usual way.\n        else{\n            TheSubclass = class Subclass extends this {} as any;\n        }\n\n        predefine( TheSubclass );\n        spec && TheSubclass.define( spec, statics );\n\n        return TheSubclass;\n    }\n}\n\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\n * Forwards the call to the [[Mixable.predefine]];\n */\nexport function predefine( Constructor : MixableConstructor ) : void {\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\n\n    // Legacy systems support\n    Constructor.__super__ = BaseClass.prototype;\n    \n    // Initialize mixins structures...\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\n\n    // Make sure Ctor.mixins are ready before the callback...\n    MixinsState.get( Constructor );\n\n    // Call extend hook.\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\n}\n\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\n *  Forwards the call to [[Mixable.define]].\n */\nexport function define( ClassOrDefinition : Function ) : void;\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\nexport function define( ClassOrDefinition : object | MixableConstructor ){\n    // @define class\n    if( typeof ClassOrDefinition === 'function' ){\n        predefine( ClassOrDefinition );\n        ( ClassOrDefinition as MixableConstructor ).define();\n    }\n    // @define({ prop : val, ... }) class\n    else{\n        return function( Ctor : MixableConstructor ){\n            predefine( Ctor );\n            Ctor.define( ClassOrDefinition );\n        } as any;\n    }\n}\n\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\n    return ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\n    }\n}\n\n// Create simple property list decorator\nexport function propertyListDecorator( listName: string ) : PropertyDecorator {\n    return function propList(proto, name : string) {\n        const list = proto.hasOwnProperty( listName ) ?\n            proto[ listName ] : (proto[ listName ] = (proto[ listName ] || []).slice());  \n\n        list.push(name);\n    }\n}\n\nexport function definitionDecorator( definitionKey, value ){\n    return ( proto : object, name : string ) => {\n        MixinsState\n            .get( proto.constructor )\n            .mergeObject( proto, {\n                [ definitionKey ] : {\n                    [ name ] : value\n                }\n            });\n    }\n}\n\nexport class MixinsState {\n    mergeRules : MixinMergeRules;\n    definitionRules : MixinMergeRules;\n    definitions : object = {};\n    appliedMixins : Mixin[];\n\n    // Return mixins state for the class. Initialize if it's not exist.\n    static get( Class ) : MixinsState {\n        const { mixins } = Class;\n    \n        return mixins && Class === mixins.Class ? mixins :\n             Class.mixins = new MixinsState( Class );\n    }\n\n    constructor( public Class : MixableConstructor ){\n        const { mixins } = getBaseClass( Class );\n\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\n    }\n\n    getStaticDefinitions( BaseClass : Function ){\n        const definitions = hashMap(),\n            { Class } = this;\n\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\n            if( BaseClass[ name ] !== Class[ name ]){\n                return Class[ name ];\n            }\n        });\n    }\n\n    merge( mixins : Mixin[] ){\n        const proto      = this.Class.prototype,\n            { mergeRules } = this;\n\n        // Copy applied mixins array as it's going to be updated.\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\n\n        // Apply mixins in sequence...\n        for( let mixin of mixins ) {\n            // Mixins array should be flattened.\n            if( Array.isArray( mixin ) ) {\n                this.merge( mixin );\n            }\n            // Don't apply mixins twice.\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\n                appliedMixins.push( mixin );\n\n                // For constructors, merge _both_ static and prototype members.\n                if( typeof mixin === 'function' ){\n                    // Merge static members\n                    this.mergeObject( this.Class, mixin );\n\n                    // merge definitionRules and mergeRules\n                    const sourceMixins = ( mixin as any ).mixins;\n                    if( sourceMixins ){\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\n                    }\n\n                    // Prototypes are merged according with rules.\n                    this.mergeObject( proto, mixin.prototype );\n                }\n                // Handle plain object mixins.\n                else {\n                    this.mergeObject( proto, mixin );\n                }\n            }\n        }\n    }\n\n    populate( ...ctors : Function[] ){\n        for( let Ctor of ctors ) {\n            MixinsState.get( Ctor ).merge([ this.Class ]);\n        }\n    }\n\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\n        forEachOwnProp( source, name => {\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\n            let rule : MixinMergeRule;\n\n            if( rule = this.definitionRules[ name ] ){\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\n            }\n\n            if( !rule || rule === mixinRules.protoValue  ){\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\n            }\n        });\n    }\n\n    mergeInheritedMembers( BaseClass : Function ){\n        const { mergeRules, Class } = this;\n\n        if( mergeRules ){\n            const proto = Class.prototype,\n                baseProto = BaseClass.prototype;\n\n            for( let name in mergeRules ) {\n                const rule = mergeRules[ name ];\n\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\n                }\n            }\n        }\n    }\n}\n\nconst dontMix = {\n    function : hashMap({\n        length : true,\n        prototype : true,\n        caller : true,\n        arguments : true,\n        name : true,\n        __super__ : true\n    }),\n    \n    object : hashMap({\n        constructor : true\n    })    \n}\n\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\n    const ignore = dontMix[ typeof object ];\n\n    for( let name of Object.getOwnPropertyNames( object ) ) {\n        ignore[ name ] || fun( name );\n    }\n}\n\nexport interface MixinMergeRules {\n    [ name : string ] : MixinMergeRule\n}\n\nexport type MixinMergeRule = ( a : any, b : any ) => any\nexport type Mixin = { [ key : string ] : any } | Function\n\n// @mixins( A, B, ... ) decorator.\nexport interface MixinRulesDecorator {\n    ( rules : MixinMergeRules ) : ClassDecorator\n    value( a : object, b : object) : object;\n    protoValue( a : object, b : object) : object;\n    merge( a : object, b : object ) : object;\n    pipe( a: Function, b : Function ) : Function;\n    defaults( a: Function, b : Function ) : Function;\n    classFirst( a: Function, b : Function ) : Function;\n    classLast( a: Function, b : Function ) : Function;\n    every( a: Function, b : Function ) : Function;\n    some( a: Function, b : Function ) : Function;\n}\n\nexport const mixins = ( ...list : Mixin[] ) => (\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\n);\n\n// @mixinRules({ name : rule, ... }) decorator.\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\n    ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\n    }\n) ) as MixinRulesDecorator;\n\n// Pre-defined mixin merge rules\n\nmixinRules.value = ( a, b ) => a;\n\nmixinRules.protoValue = ( a, b ) => a;\n\n// Recursively merge members\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\n\n    // Execute methods in pipe, with the class method executed last.\nmixinRules.pipe = ( a, b ) => (\n    function( x : any ) : any {\n        return a.call( this, b.call( this, x ) );\n    }\n);\n\n    // Assume methods return an object, and merge results with defaults (class method executed first)\nmixinRules.defaults = ( a : Function, b : Function ) => (\n    function() : object {\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\n    }\n);\n\n// Execute methods in sequence staring with the class method.\nmixinRules.classFirst = ( a : Function, b : Function ) => (\n    function() : void {\n        a.apply( this, arguments );\n        b.apply( this, arguments );\n    }\n);\n\n    // Execute methods in sequence ending with the class method.\nmixinRules.classLast = ( a : Function, b : Function ) => (\n    function() : void {\n        b.apply( this, arguments );\n        a.apply( this, arguments );\n    }\n)\n\n    // Execute methods in sequence returning the first falsy result.\nmixinRules.every = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) && b.apply( this, arguments );\n    }\n);\n    // Execute methods in sequence returning the first truthy result.\nmixinRules.some = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) || b.apply( this, arguments );\n    }\n);\n\n/**\n * Helpers\n */\n\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\n// Destination prop is defined, thus the merge rules must be applied.\n    if( dest.hasOwnProperty( name ) ){\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\n\n        if( destProp.configurable && 'value' in destProp ){\n            dest[ name ] = unshift ?\n                resolveRule( sourceProp.value, destProp.value, rule ) :\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\n        }\n    }\n    // If destination is empty, just copy the prop over.\n    else{\n        Object.defineProperty( dest, name, sourceProp );\n    }\n}\n\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\n    // When destination is empty, take the source.\n    if( dest === void 0 ) return source;\n\n    // In these cases we take non-empty destination:\n    if( !rule || source === void 0 ) return dest;\n\n    // In other cases we must merge values.\n    return rule( dest, source );\n}","import * as _eventsApi from './eventsource';\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource';\nimport { define, definitions, Mixable, MixableConstructor, mixinRules, MixinsState } from './mixins';\nimport { omit, transform } from './tools';\n\nconst { strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\n\nlet _idCount = 0;\n\nfunction uniqueId() : string {\n    return 'l' + _idCount++;\n}\n\nexport { EventMap, EventsDefinition };\n\nexport interface MessengerDefinition {\n    _localEvents? : EventMap\n    localEvents? : EventsDefinition\n    properties? : PropertyMap\n    [ name : string ] : any\n}\n\nexport interface PropertyMap {\n    [ name : string ] : Property\n}\n\nexport type Property = PropertyDescriptor | ( () => any )\n\nexport interface MessengersByCid {\n    [ cid : string ] : Messenger\n}\n\nexport type EventCallbacks<Context> = { [ events : string ] : EventCallback<Context> }\nexport type EventCallback<Context> = ( this : Context, ...args : any[] ) => void\n\n/*************************\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\n * This class itself can serve as both mixin and base class.\n */\n\n@define\n@definitions({\n    properties : mixinRules.merge,\n    localEvents : mixinRules.merge\n})\nexport class Messenger implements Mixable, EventSource {\n    // Define extendable mixin static properties.\n    /** @internal */\n    static __super__ : object;\n    static mixins : MixinsState;\n    static onExtend : ( BaseClass : Function ) => void;\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\n        // Handle localEvents definition\n        if( localEvents || _localEvents ){\n            const eventsMap = new EventMap( this.prototype._localEvents );\n\n            localEvents && eventsMap.addEventsMap( localEvents );\n            _localEvents && eventsMap.merge( _localEvents );\n            \n            this.prototype._localEvents = eventsMap;\n        }\n\n        // Handle properties definitions...\n        if( properties ){\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\n        }\n    }\n\n    /** @internal */ \n    _events : HandlersByEvent = void 0;\n\n    /** @internal */ \n    _listeningTo : MessengersByCid = void 0\n\n    /** Unique client-only id. */\n    cid : string\n\n    /** Prototype-only property to manage automatic local events subscription */ \n    protected _localEvents : EventMap\n\n    constructor(){\n        this.cid = uniqueId();\n        this.initialize.apply( this, arguments );\n\n        // TODO: local events subscribe?\n    }\n\n    /** Method is called at the end of the constructor */\n    initialize() : void {}\n    \n    on( events : string | EventCallbacks<this>, callback?, context? ) : this {\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    once( events : string | EventCallbacks<this>, callback?, context? ) : this {\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    off( events? : string | EventCallbacks<this>, callback?, context? ) : this {\n        if( !events ) off( this, void 0, callback, context );\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\n        else trigger2( this, name, a, b );\n        return this;\n    }\n\n    listenTo( source : Messenger, a : string | EventCallbacks<this>, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    listenToOnce( source : Messenger, a : string | EventCallbacks<this>, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    stopListening( a_source? : Messenger, a? : string | EventCallbacks<this>, b? : Function ) : this {\n        const { _listeningTo } = this;\n        if( _listeningTo ){\n            const removeAll = !( a || b ),\n                  second = !b && typeof a === 'object' ? this : b;\n\n            if( a_source ){\n                const source = _listeningTo[ a_source.cid ];\n                if( source ){\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\n                    source.off( a, second, this );\n                }\n            }\n            else if( a_source == null ){\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\n\n                if( removeAll ) ( this._listeningTo = void 0 );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Destructor. Stops messenger from listening to all objects,\n     * and stop others from listening to the messenger. \n     */\n    _disposed : boolean\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        this.stopListening();\n        this.off();\n\n        this._disposed = true;\n    }\n}\n\n/**\n * Backbone 1.2 API conformant Events mixin.\n */\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\n\n/**\n * Messenger Private Helpers \n */\n\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\n    if( x ){\n        return typeof x === 'function' ? { get : < () => any >x, configurable : true } : <PropertyDescriptor> x;\n    }\n}\n\nfunction addReference( listener : Messenger, source : Messenger ){\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\n            cid = source.cid || ( source.cid = uniqueId() );\n\n      listeningTo[ cid ] = source;\n}","import { Messenger } from './events'\nimport { define } from './mixins';\n\nexport type LogLevel = 'error' | 'warn' | 'debug' | 'info' | 'log';\nexport type LoggerEventHandler = ( topic : string, msg : string, props : object )  => void;\n\nexport const isProduction = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production',\n    logEvents : LogLevel[] =  isProduction ?\n        [ 'error', 'info' ] :\n        [ 'error', 'warn', 'debug', 'info', 'log' ];\n\n@define\nexport class Logger extends Messenger {\n    counter : { [ level in LogLevel ]? : number } = {}\n\n    // Log events of the given log level to the console, optionally filtered by topic\n    logToConsole( level : LogLevel, filter? : RegExp ) : this {\n        return this.on( level, ( topic, msg, props ) => {\n            if( !filter || filter.test( topic ) ){\n                const args = [ `[${topic}] ${msg}` ];\n        \n                for( let name in props ){\n                    args.push( `\\n\\t${name}:`, toString( props[ name ] ) );\n                }\n        \n                console[ level ].apply( console, args );\n            }\n        });\n    }\n\n    // Fire exception on the events of the given log level, optionally filtered by topic\n    throwOn( level : LogLevel, filter? : RegExp ) : this {\n        return this.on( level, ( topic, msg, props ) => {\n            if( !filter || filter.test( topic ) ){\n                throw new Error( `[${topic}] ${msg}` );\n            }\n        });\n    }\n\n    // Count log events of the given level, optionally filtered by topic\n    count( level : LogLevel, filter? : RegExp ) : this {\n        return this.on( level, ( topic, msg, props ) => {\n            if( !filter || filter.test( topic ) ){\n                this.counter[ level ] = ( this.counter[ level ] || 0 ) + 1;\n            }\n        });\n    }\n\n    trigger : ( level : LogLevel, topic : string, message : string, props? : object ) => this;\n    \n    off : ( event? : LogLevel ) => this;\n\n\n    on( handlers : { [ name in LogLevel ] : LoggerEventHandler } ) : this;\n    on( handlers : LogLevel, handler : LoggerEventHandler ) : this;\n    on( handlers : 'all', handler : ( level : LogLevel, topic : string, msg : string, props : object )  => void ) : this;\n    on( a : any, b? : any ){\n        return super.on( a, b );\n    }\n}\n\n/**\n * Convert objects to the plain text friendly format.\n * primitives as in JSON.\n */\nlet toString = typeof window === 'undefined' ? \n    something => {\n        if( something && typeof something === 'object' ){\n            // Support custom object wrappers...\n            const value = something.__inner_state__ || something,\n                isArray = Array.isArray( value );\n\n            const body = isArray ? `[ length = ${ value.length } ]` : `{ ${ Object.keys( value ).join( ', ' )} }`;\n\n            return something.constructor.name + ' ' + body;\n        }\n\n        return JSON.stringify( something );\n    }\n    : x => x;\n\nexport const logger = new Logger();\n\nif( typeof console !== 'undefined' ) {\n    for( let event of logEvents ){\n        logger.logToConsole( event );\n    }\n}\n\nexport const throwingLogger = new Logger();\nthrowingLogger.throwOn( 'error' ).throwOn( 'warn' );\n\nexport const log : typeof logger.trigger = logger.trigger.bind( logger );","export interface IONode {\n    /** @internal */\n    _endpoint : IOEndpoint\n\n    /** @internal */\n    _ioPromise : IOPromise< this >\n}\n\nexport interface IOPromise<T> extends Promise<T> {\n    abort? : () => void\n}\n\nexport interface IOEndpoint {\n    list( options : IOOptions, collection? ) : IOPromise<any>\n    create( json : any, options : IOOptions, record? ) : IOPromise<any>\n    update( id : string | number, json :any, options : IOOptions, record? ) : IOPromise<any>\n    read( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    destroy( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\n    unsubscribe( events : IOEvents, collection? ) : void\n}\n\nexport interface IOOptions {\n    ioMethod? : 'save' | 'fetch'\n}\n\nexport interface IOEvents {\n    updated? : ( json : any ) => void\n    removed? : ( json : any ) => void\n}\n\nexport function getOwnerEndpoint( self ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n\n/**\n * Create abortable promise.\n * Adds `promise.abort()` function which rejects the promise by default\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\n * which can be used to add custom abort handling.\n */\ndeclare var Promise: PromiseConstructorLike;\n\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\n    let resolve, reject, onAbort;\n\n    function abort( fn ){\n        onAbort = fn;\n    }\n\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\n        reject = a_reject;\n        resolve = a_resolve;\n        initialize( resolve, reject, abort );\n    }) as IOPromise<any>;\n\n    promise.abort = () => {\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\n    }\n\n    return promise;\n}\n\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\n\nexport function startIO( self : IONode, promise : IOPromise<any>, options : IOOptions, thenDo : ( json : any ) => any ) : IOPromise<any> {\n    // Stop pending I/O first...\n    abortIO( self );\n\n    self._ioPromise = promise\n        .then( resp => {\n            self._ioPromise = null;\n    \n            const result = thenDo ? thenDo( resp ) : resp;\n                \n            triggerAndBubble( self, 'sync', self, resp, options );\n                \n            return result;\n        } )  \n        .catch( err => {\n            self._ioPromise = null;\n            \n            // Overlaps with a new `error` event.\n            triggerAndBubble( self, 'error', self, err, options );\n            \n            throw err;\n        } ) as IOPromise<any>;\n\n    self._ioPromise.abort = promise.abort;\n\n    return self._ioPromise;\n}\n\nexport function abortIO( self : IONode ){\n    if( self._ioPromise && self._ioPromise.abort ){\n        self._ioPromise.abort();\n        self._ioPromise = null;\n    }\n}\n\nexport function triggerAndBubble( eventSource, ...args ){\n    eventSource.trigger.apply( eventSource, args );\n    const { collection } = eventSource;\n    collection && collection.trigger.apply( collection, args ); \n}","/**\n * Traversable objects and symbolic references\n */\nexport interface Traversable {\n    getStore() : Traversable\n    getOwner() : Traversable\n    get( key : string ) : any \n}\n\nconst referenceMask =  /\\^|(store\\.[^.]+)|([^.]+)/g;\n\n// Compile reference to function\nexport type ResolveReference = ( root : Traversable ) => any;  \n\nexport class CompiledReference {\n    resolve : ResolveReference\n    tail : string\n    local : boolean\n\n    constructor( reference : string, splitTail : boolean = false ){\n        const path = reference\n                        .match( referenceMask )\n                        .map( key => {\n                            if( key === '^' || key === 'owner' ) return 'getOwner()';\n\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\n\n                            if( key.indexOf( 'store.' ) === 0 ) return `getStore().get(\"${ key.substr( 6 ) }\")`;\n                            \n                            return key;\n                        } );\n               \n        this.tail = splitTail && path.pop();\n        this.local = !path.length;\n        \n        this.resolve = <any> new Function( 'self', `\n            var v = self.${ path.shift() };\n                           \n            ${ path.map( x => `\n                v = v && v.${ x };\n            `).join('')}\n\n            return v;\n        ` );\n    }\n}\n\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\n    const path = reference.match( referenceMask ),\n          skip = path.length - 1;\n    \n    let self = root;\n\n    for( var i = 0; i < skip; i++ ){\n        const key = path[ i ];\n        switch( key ){\n            case '~' : self = self.getStore(); break;\n            case '^' : self = self.getOwner(); break;\n            default  : self = self.get( key );\n        }\n\n        // Do nothing if object on the path doesn't exist.\n        if( !self ) return;\n    }\n\n    return action( self, path[ skip ] );\n}","export interface ChildrenErrors {\n    [ key : string ] : ValidationError | any\n} \n\nexport interface Validatable {\n    /** @internal */\n    _validateNested( errors : ChildrenErrors ) : number;\n    \n    validate( self : any ) : any\n    get( key : string ) : any\n}\n\n// Validation error object.\nexport class ValidationError {\n    // Invalid nested object keys \n    nested : ChildrenErrors \n    length : number\n\n    // Local error\n    error : any\n\n    constructor( obj : Validatable ){\n        this.length = obj._validateNested( this.nested = {} );\n\n        if( this.error = obj.validate( obj ) ){\n            this.length++;\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void ) : void {\n        const { error, nested } = this;\n\n        if( error ) iteratee( error, null );\n\n        for( const key in nested ){\n            iteratee( nested[ key ], key );\n        }\n    }\n\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\n        this.each( ( value : any, key : string ) => {\n            if( value instanceof ValidationError ){\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\n            }\n            else{\n                iteratee( value, key, object );\n            }\n        });\n    }\n}","/**\n * Select appropriate helpers function for particular value type.\n */\nexport interface IterableLink {\n    value : any\n    at( key : number | string ) : any\n}\n\nexport type Iterator = ( link : any, key : string | number ) => any;\n\nexport interface Helper {\n    map( link : IterableLink, iterator : Iterator ) : any[]\n    clone( obj : any ) : any,\n    remove( obj : any, key : string | number ) : any\n}\n\nconst ArrayProto = Array.prototype,\n      ObjectProto = Object.prototype;\n\nexport function helpers( value ) : Helper {\n    if( value && typeof value === 'object' ){\n        switch( Object.getPrototypeOf( value ) ){\n            case ArrayProto  : return arrayHelpers;\n            case ObjectProto : return objectHelpers;\n        }\n    }\n\n    return dummyHelpers;\n}\n\n// Do nothing for types other than Array and plain Object.\nconst dummyHelpers : Helper = {\n    clone( value ){ return value; },\n    map( link : IterableLink, fun ){ return []; },\n    remove( value ){ return value; }\n};\n\n// `map` and `clone` for plain JS objects\nexport const objectHelpers : Helper = {\n    // Map through the link to object\n    map( link : IterableLink, iterator : Iterator ) : any[] {\n        let mapped = [],\n            { value } = link\n\n        for( let key in value ){\n            if( value.hasOwnProperty( key ) ){\n                const element = iterator( link.at( key ), key );\n                element === void 0 || ( mapped.push( element ) );    \n            }\n        }\n\n        return mapped;\n    },\n\n    remove( object : {}, key : string ) : {} {\n        delete object[ key ];\n        return object;\n    },\n\n     // Shallow clone plain JS object\n    clone( object : {} ) : {} {\n        return { ...object };\n    }\n};\n\n// `map` and `clone` helpers for arrays.\nexport const arrayHelpers : Helper = {\n    // Shallow clone array\n    clone( array : any[] ) : any[] {\n        return array.slice();\n    },\n\n    remove( array : any[], i : number ) : any[] {\n        array.splice( i, 1 );\n        return array;\n    },\n\n    // Map through the link to array\n    map( link : IterableLink, iterator : Iterator ) : any[] {\n        const length = link.value.length,\n              mapped = Array( length );\n\n        for( var i = 0, j = 0; i < length; i++ ){\n            const y = iterator( link.at( i ), i );\n            y === void 0 || ( mapped[ j++ ] = y );\n        }\n\n        mapped.length === j || ( mapped.length = j );\n\n        return mapped;\n    }\n};","/**\n * Advanced React links for purely functional two-way data binding\n *\n * MIT License, (c) 2016 Vlad Balin, Volicon.\n */\nimport { arrayHelpers, helpers } from './helpers';\n\nexport * from './helpers'\n\n/** \n * `Linked` class is an abstract linked value - the value, the function to update this value, and its validation error.\n * The enclosed value is considered as immutable.\n */ \nexport abstract class Linked<T>{\n    /** Validation error. Usually is a string with error text, but can hold any type. */ \n    error : any = void 0\n    \n    /** Set linked value */ \n    abstract set( x : T ) : void\n\n    constructor( public value : T ){}\n\n    /** EXPERIMENTAL: Support useRef interface. */ \n    get current(){ return this.value; }\n    set current( x : T ){ this.set( x ); }\n\n    // Private accessor for whenChanged. Uniform with Type-R models and collections API.\n    protected get _changeToken(){\n        return this.value;\n    }\n\n    /** Produce the new link executing the given function before the link value will be updated. */\n    onChange( handler : ( x : T ) => void ) : Linked<T> {\n        return new ClonedValueLink( this, ( x : T ) => {\n            handler( x );\n            this.set( x );\n        });\n    }\n\n    /** Produce the new link which transform the value before `set` with a given function. */\n    pipe( handler : Linked.Transform<T> ) : Linked< T > {\n        return new ClonedValueLink( this, x =>{\n            const next = handler( x, this.value );\n            next === void 0 || this.set( next );\n        } );\n    }\n\n    /** \n     * Create React component props for the <input> component.\n     * \n     * <input { ...link.props } />\n     */ \n    get props(){\n        return typeof this.value === 'boolean' ? {\n            checked : this.value,\n            onChange : e => this.set( Boolean( e.target.checked ) as any )\n        }:{\n            value : this.value,\n            onChange : e => this.set( e.target.value )\n        };\n    }\n\n    /** Update the linked value using given transform function. */ \n    update( transform : Linked.Transform<T>, e? : Object ) : void {\n        const next = transform( this.clone(), e );\n        next === void 0 || this.set( next );\n    }\n\n    // Create UI event handler function which will update the link with a given transform function.\n    action( transform : Linked.Transform< T > ) : Linked.EventHandler {\n        return e => this.update( transform, e );\n    }\n\n    equals( truthyValue : T ) : Linked<boolean> {\n        return new EqualsValueLink( this, truthyValue );\n    }\n\n    enabled( defaultValue? : T ) : Linked<boolean> {\n        return new EnabledValueLink( this, defaultValue || \"\" );\n    }\n\n    // Array-only links methods\n    contains<E>( this : Linked<E[]>, element : E ) : Linked<boolean>{\n        return new ContainsRef( this, element );\n    }\n\n    push<E>( this : Linked<E[]>, ...args : E[] ) : void;\n    push(){\n        const array = arrayHelpers.clone( this.value );\n        Array.prototype.push.apply( array, arguments );\n        this.set( array );\n    }\n\n    unshift<E>( this : Linked<E[]>, ...args : E[] ) : void;\n    unshift() : void {\n        const array = arrayHelpers.clone( this.value );\n        Array.prototype.unshift.apply( array, arguments );\n        this.set( array );\n    }\n\n    \n    splice( this : Linked<any[]>, start : number, deleteCount? : number ) : void;\n    splice() : void {\n        const array = arrayHelpers.clone( this.value );\n        Array.prototype.splice.apply( array, arguments );\n        this.set( array );\n    }\n\n    // Array and objects universal collection methods\n    map<E, Z>( this : Linked<E[]>, iterator : ( link : PropValueLink<E, number>, idx : number ) => Z ) : Z[];\n    map<E, Z>( this : Linked<{[ key : string ] : E }>, iterator : ( link : PropValueLink<E, string>, idx : string ) => Z ) : Z[];\n    map( iterator ) {\n        return helpers( this.value ).map( this, iterator );\n    }\n\n    removeAt<E>( this : Linked<E[]>, key : number ) : void;\n    removeAt<E>( this : Linked<{ [ key : string ] : E }>, key : string ) : void;\n    removeAt( key ){\n        const { value } = this,\n            _ = helpers( value );\n\n        this.set( _.remove( _.clone( value ), key ) );\n    }\n\n    at<E>( this : Linked<E[]>, key : number ) : PropValueLink<E, number>;\n    at<K extends keyof T, E extends T[K]>( key : K ) : PropValueLink<E, K>;\n    at( key ){\n        return new PropValueLink( this, key );\n    }\n\n    clone() : T {\n        let { value } = this;\n        return helpers( value ).clone( value );\n    }\n\n    /**\n     * Convert link to object to the object of links. Optionally filter by \n     */\n    pick< K extends keyof T >( ...keys : K[]) : {[ P in K ]: Linked<T[P]>}\n    pick() {\n        let links = {}, keys = arguments.length ? arguments : Object.keys( this.value );\n\n        for( let i = 0; i < keys.length; i++ ){\n            const key : string = keys[ i ];\n            links[ key ] = new PropValueLink( this, key );\n        }\n\n        return links;\n    }\n\n    /**\n     * Convert link to object to the object of links.\n     * Memorises the result, subsequent calls are cheap.\n     */\n    get $() : T extends object ? Linked.Hash<T> : never {\n        if( !this._value$ ){\n            let links : Linked.Hash<any> = this._value$ = {},\n                { value } = this;\n\n            for( let key in value ){\n                if( value.hasOwnProperty( key ) ){\n                    links[ key ] = new PropValueLink( this, key );\n                }\n            }\n        }\n\n        return this._value$ as any;\n    }\n\n    private _value$ : object\n\n    /**\n     * Validate link with validness predicate and optional custom error object. Can be chained.\n     */\n    check( whenValid : Linked.Validator<T>, error? : any ) : this {\n        if( !this.error && !whenValid( this.value ) ){\n            this.error = error || whenValid.error || defaultError;\n        }\n\n        return this;\n    }\n}\n\nexport namespace Linked {\n    export interface Validator< T >{\n        ( value : T ) : boolean\n        error? : any\n    }    \n\n    export type Transform< T > = ( value : T, event? : {} ) => T\n    export type EventHandler = ( event : {} ) => void\n\n    export type Hash<T extends object = any> = {\n        [K in keyof T] : Linked<T[K]>\n    }\n\n    /** Create linked value out of its value and the set function */ \n    export function value<T>( value : T, set : ( x : T ) => void ) : Linked<T>{\n        return new CustomValueLink( value, set );\n    }\n\n    /**\n    * Unwrap object with links, returning an object of a similar shape filled with link values.\n    */\n    export function getValues<T extends object>( links : Linked.Hash<T> ) : T {\n        return unwrap( links, 'value' ) as any;\n    }\n\n    /**\n     * Unwrap object with links, returning an object of a similar shape filled with link errors.\n     */\n    export function getErrors<T extends object>( links : Linked.Hash<T> ) : { [ name in keyof T ] : any } {\n        return unwrap( links, 'error' ) as any;\n    }\n\n    /**\n     * Return true if an object with links contains any errors.\n     */\n    export function hasErrors<T extends object>( links : Linked.Hash<T> ) : boolean {\n        for( let key in links ){\n            if( links.hasOwnProperty( key ) && links[ key ].error ){\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n    * Assing links with values from the source object.\n    */\n   export function setValues<T extends object>( links : Linked.Hash<T>, source : T ) : void {\n        if( source ){\n            for( let key in links ){\n                const sourceKey = trim( key );\n                if( source.hasOwnProperty( sourceKey ) ){\n                    const sourceVal = source[ sourceKey ];\n                    sourceVal === void 0 || links[ key ].set( sourceVal );\n                }\n            }    \n        }\n    }\n\n}\n\nclass CustomValueLink< T > extends Linked< T > {\n    set( x ){}\n\n    constructor( value : T, set : ( x : T ) => void ){\n        super( value );\n        this.set = set;\n    }\n}\n\nclass ClonedValueLink< T > extends Linked< T > {\n    set( x ){}\n\n    constructor( parent : Linked< T >, set : ( x : T ) => void ){\n        super( parent.value );\n        this.set = set;\n\n        const { error } = parent;\n        if( error ) this.error = error;\n    }\n}\n\nclass EqualsValueLink extends Linked< boolean > {\n    constructor( public parent : Linked< any >, public truthyValue ){\n        super( parent.value === truthyValue );\n    }\n\n    set( x : boolean ) : void {\n        this.parent.set( x ? this.truthyValue : null );\n    }\n}\n\nclass EnabledValueLink extends Linked< boolean > {\n    constructor( public parent : Linked< any >, public defaultValue ){\n        super( parent.value != null );\n    }\n\n    set( x : boolean ){\n        this.parent.set( x ? this.defaultValue : null );\n    }\n}\n\nclass ContainsRef extends Linked< boolean > {\n    constructor( public parent : Linked< any >, public element : any ){\n        super( parent.value.indexOf( element ) >= 0 );\n    }\n\n    set( x : boolean ){\n        var next = Boolean( x );\n\n        if( this.value !== next ){\n            var arr : any[] = this.parent.value,\n                nextValue = x ? arr.concat( this.element ) : arr.filter( el => el !== this.element );\n\n            this.parent.set( nextValue );\n        }\n    }\n}\n\nconst  defaultError = 'Invalid value';\n\n/**\n * Link to array or object element enclosed in parent link.\n * Performs purely functional update of the parent, shallow copying its value on `set`.\n */\nexport class PropValueLink< E, K > extends Linked< E > {\n    constructor( private parent : Linked< any >, public key : K ){\n        super( parent.value[ key ] );\n    }\n\n    remove(){\n        this.parent.removeAt( <any>this.key );\n    }\n\n    // Set new element value to parent array or object, performing purely functional update.\n    set( x : E ) : void {\n        if( this.value !== x ){\n            this.parent.update( value => {\n                value[ this.key ] = x;\n                return value;\n            } );\n        }\n    };\n}\n\nfunction unwrap( links : Linked.Hash, field : string) : object {\n    const values = {};\n\n    for( let key in links ){\n        if( links.hasOwnProperty( key ) ){\n            const value = links[ key ][ field ];\n            if( value !== void 0 ){\n                values[ trim( key ) ] = value;\n            }\n        }\n    }\n\n    return values;\n}\n\nfunction trim( key : string ){\n    return key[ 0 ] === '$' ? key.slice( 1 ) : key;\n}","import { abortIO, IOEndpoint, IONode, IOPromise } from './io-tools';\nimport { EventCallbacks, define, definitions, eventsApi, Logger, LogLevel, Messenger, MessengerDefinition, MessengersByCid, mixinRules, mixins, MixinsState, throwingLogger } from '@type-r/mixture';\nimport { resolveReference, Traversable } from './traversable';\nimport { ChildrenErrors, Validatable, ValidationError } from './validation';\nimport { Linked } from '@linked/value/lib';\n\nconst { trigger3, on, off } = eventsApi;\n/***\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\n * 2. transaction.commit() - send and process all change events, and close transaction.\n */\n\n/** @private */\nexport interface TransactionalDefinition extends MessengerDefinition {\n    endpoint? : IOEndpoint\n}\n\nexport enum ItemsBehavior {\n    share       = 0b0001,\n    listen      = 0b0010,\n    persistent  = 0b0100\n}\n\n// Transactional object interface\n\nexport interface Transactional extends Messenger {}\n\n@define\n@definitions({\n    endpoint : mixinRules.value\n})\n@mixins( Messenger )\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\n    // Here goes 'Mixable' mixin.\n    static endpoint : IOEndpoint;\n    \n    /** @internal */\n    static __super__ : object;\n    \n    static mixins : MixinsState;\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\n\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\n        Messenger.onDefine.call( this, definitions, BaseClass );\n    };\n\n    static onExtend( BaseClass : typeof Transactional ) : void {\n        // Make sure we don't inherit class factories.\n        if( BaseClass.create === this.create ) {\n            this.create = Transactional.create;\n        }\n    }\n\n    // Define extendable mixin static properties.\n    static create<M extends new ( ...args ) => any>( this : M, a? : any, b? : any ) : InstanceType<M> {\n        return new (this as any)( a, b );\n    }\n\n    // State accessor.\n    /** @internal */\n    readonly __inner_state__ : any;\n\n    // Shared modifier (used by collections of shared models)\n    /** @internal */\n    _shared? : number; \n    \n    dispose() : void {\n        if( this._disposed ) return;\n        \n        abortIO( this );\n        this._owner = void 0;\n        this._ownerKey = void 0;\n        this.off();\n        this.stopListening();\n        this._disposed = true;\n    }\n    \n    cidPrefix : string\n\n    // Unique version token replaced on change\n    /** @internal */\n    _changeToken : {} = {}\n\n    // true while inside of the transaction\n    /** @internal */\n    _transaction : boolean = false;\n\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\n    /** @internal */\n    _isDirty  : TransactionOptions = null;\n\n    // Backreference set by owner (Model, Collection, or other object)\n    /** @internal */\n    _owner : Owner = void 0;\n\n    // Key supplied by owner. Used by record to identify attribute key.\n    // Only collections doesn't set the key, which is used to distinguish collections.\n    /** @internal */ \n    _ownerKey : string = void 0;\n\n    // Name of the change event\n    /** @internal */\n    _changeEventName : string\n\n    /**\n     * Subsribe for the changes.\n     */\n    onChanges( handler : Function, target? : Messenger ){\n        on( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Unsubscribe from changes.\n     */\n    offChanges( handler? : Function, target? : Messenger ){\n        off( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Listen to changes event. \n     */\n    listenToChanges( target : Transactional, handler ){\n        this.listenTo( target, target._changeEventName, handler );\n    }\n\n    constructor( cid : string | number ){\n        this.cid = this.cidPrefix + cid;\n    }\n\n    // Deeply clone ownership subtree\n    abstract clone( options? : CloneOptions ) : this\n    \n    // Execute given function in the scope of ad-hoc transaction.\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = transactionApi.begin( this );\n        const update = fun.call( this, this );\n        update && this.set( update );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Assign transactional object \"by value\", copying aggregated items.\n    assignFrom( a_source : Transactional | Object | Linked<Transactional> ) : this {\n        // Unpack linked value.\n        const source = a_source instanceof Linked ? a_source.value : a_source;\n\n        // Need to delay change events until change token will by synced.\n        this.transaction( () =>{\n            this.set( ( source as any).__inner_state__ || source, { merge : true } );\n\n            // Synchronize change tokens\n            const { _changeToken } = source as any;\n    \n            if( _changeToken ){\n                this._changeToken = _changeToken;\n            }    \n        });\n\n        return this;\n    }\n\n    // Create object from JSON. Throw if validation fail.\n    static from<T extends new ( a?, b? ) => Transactional >( this : T, json : any, { strict, ...options }  : { strict? : boolean } & TransactionOptions = {} ) :  InstanceType<T>{\n        const obj : Transactional = ( this as any ).create( json, { ...options, logger : strict ? throwingLogger : void 0 } );\n\n        if( strict && obj.validationError ){\n            obj.eachValidationError( ( error, key, obj ) => {\n                throw new Error( `${ obj.getClassName() }.${ key }: ${ error }` );\n            });\n        }\n\n        return obj as any;\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.\n    // Returns null if there are no any changes.\n    /** @internal */\n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    abstract set( values : any, options? : TransactionOptions ) : this;\n\n    \n    // Parse function applied when 'parse' option is set for transaction.\n    parse( data : any, options? : TransactionOptions ) : any { return data }\n\n    // Convert object to the serializable JSON structure\n    abstract toJSON( options? : object ) : {}\n\n    /*******************\n     * Traversals and member access\n     */\n    \n    // Get object member by its key.\n    abstract get( key : string ) : any\n\n    // Get object member by symbolic reference.\n    deepGet( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\n    }\n\n    //_isCollection : boolean\n\n    // Return owner skipping collections.\n    getOwner() : Owner {\n        return this._owner;\n    }\n\n    // Store used when owner chain store lookup failed. Static value in the prototype. \n    /** @internal */\n    _defaultStore : Transactional\n\n    // Locate the closest store. Store object stops traversal by overriding this method. \n    getStore() : Transactional {\n        const { _owner } = this;\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\n    }\n\n\n    /***************************************************\n     * Iteration API\n     */\n\n    // Loop through the members. Must be efficiently implemented in container class.\n\n    /** @internal */\n    _endpoint : IOEndpoint\n    \n    /** @internal */\n    _ioPromise : IOPromise<this>\n\n    hasPendingIO() : IOPromise<this> { return this._ioPromise; }\n\n    //fetch( options? : object ) : IOPromise<this> { throw new Error( \"Not implemented\" ); }\n\n    getEndpoint() : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    }\n    \n    /*********************************\n     * Validation API\n     */\n\n    // Lazily evaluated validation error\n    /** @internal */\n    _validationError : ValidationError = void 0\n\n    // Validate ownership tree and return valudation error \n    get validationError() : ValidationError {\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\n        return error.length ? error : null; \n    }\n\n    // Validate nested members. Returns errors count.\n    /** @internal */\n    abstract _validateNested( errors : ChildrenErrors ) : number\n\n    // Object-level validator. Returns validation error.\n    validate( obj? : Transactional ) : any {}\n\n    // Return validation error (or undefined) for nested object with the given key. \n    getValidationError( key? : string ) : any {\n        var error = this.validationError;\n        return ( key ? error && error.nested[ key ] : error ) || null;\n    }\n\n    // Get validation error for the given symbolic reference.\n    deepValidationError( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\n    }\n\n    // Iterate through all validation errors across the ownership tree.\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\n        const { validationError } = this;\n        validationError && validationError.eachError( iteratee, this );\n    }\n\n    // Check whenever member with a given key is valid. \n    isValid( key? : string ) : boolean {\n        return !this.getValidationError( key );\n    }\n\n    valueOf() : Object { return this.cid; }\n    toString(){ return this.cid; }\n\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\n    getClassName() : string {\n        const { name } = <any>this.constructor;\n        if( name !== 'Subclass' ) return name;\n    }\n\n    // Logging interface for run time errors and warnings.\n    /** @internal */\n    abstract _log( level : LogLevel, topic : string, text : string, value : any, logger? : Logger ) : void\n}\n\nexport interface CloneOptions {\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\n    pinStore? : boolean\n}\n\n// Owner must accept children update events. It's an only way children communicates with an owner.\n/** @private */\nexport interface Owner extends Traversable, Messenger {\n    /** @internal */\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\n    \n    getOwner() : Owner\n    getStore() : Transactional\n}\n\n// Transaction object used for two-phase commit protocol.\n// Must be implemented by subclasses.\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\n/** @private */ \nexport interface Transaction {\n    // Object transaction is being made on.\n    object : Transactional\n\n    // Send out change events, process update triggers, and close transaction.\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\n    commit( initiator? : Transactional )\n}\n\n// Options for distributed transaction  \nexport interface TransactionOptions {\n    // Invoke parsing \n    parse? : boolean\n\n    // Optional logger\n    logger? : Logger\n\n    // Suppress change notifications and update triggers\n    silent? : boolean\n\n    // Update existing transactional members in place, or skip the update (ignored by models)\n    merge? : boolean // =true\n\n    // Should collections remove elements in set (ignored by models)  \n    remove? : boolean // =true\n\n    // Always replace enclosed objects with new instances\n    reset? : boolean // = false\n\n    // Do not dispose aggregated members\n    unset? : boolean\n\n    validate? : boolean\n\n    // IO method name if the transaction is initiated as a result of IO operation\n    ioMethod? : 'save' | 'fetch'\n\n    // The hint for IOEndpoint\n    // If `true`, `record.save()` will behave as \"upsert\" operation for the records having id.\n    upsert? : boolean\n}\n\n/**\n * Low-level transactions API. Must be used like this:\n * const isRoot = begin( record );\n * ...\n * isRoot && commit( record, options );\n * \n * When committing nested transaction, the flag must be set to true. \n * commit( object, options, isNested ) \n */\n\nexport const transactionApi = {\n    // Start transaction. Return true if it's the root one.\n    /** @private */\n    begin( object : Transactional ) : boolean {\n        return object._transaction ? false : ( object._transaction = true );  \n    },\n\n    // Mark object having changes inside of the current transaction.\n    // Returns true whenever there notifications are required.\n    /** @private */\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\n        // If silent option is in effect, don't set isDirty flag.\n        const dirty = !options.silent;\n        if( dirty ) object._isDirty = options;\n        \n        // Reset version token.\n        object._changeToken = {};\n\n        // Object is changed, so validation must happen again. Clear the cache.\n        object._validationError = void 0;\n\n        return dirty;\n    },\n\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\n    // Must be executed for the root transaction only.\n    /** @private */\n    commit( object : Transactional, initiator? : Transactional ){\n        let originalOptions = object._isDirty;\n\n        if( originalOptions ){\n            // Send the sequence of change events, handling chained handlers.\n            while( object._isDirty ){\n                const options = object._isDirty;\n                object._isDirty = null; \n                trigger3( object, object._changeEventName, object, options, initiator );\n            }\n            \n            // Mark transaction as closed.\n            object._transaction = false;\n\n            // Notify owner on changes out of transaction scope.  \n            const { _owner } = object;  \n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\n                _owner._onChildrenChange( object, originalOptions );\n            }\n        }\n        else{\n            // No changes. Silently close transaction.\n            object._isDirty = null;\n            object._transaction = false;\n        }\n    },\n\n    /************************************\n     * Ownership management\n     */\n\n    // Add reference to the record.\n    /** @private */\n    aquire( owner : Owner, child : Transactional, key? : string ) : void {\n        if( child._owner ) throw new ReferenceError( 'Trying to aquire ownership for an object already having an owner' );\n\n        child._owner = owner;\n        child._ownerKey = key;\n    },\n\n    // Remove reference to the record.\n    /** @private */\n    free( owner : Owner, child : Transactional ) : void {\n        if( owner === child._owner ){\n            child._owner = void 0;\n            child._ownerKey = void 0;\n        }\n    }\n}\n\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self as any;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner as any;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n","import { eventsApi } from '@type-r/mixture';\nimport { Owner, Transaction, Transactional, transactionApi, TransactionOptions } from \"../transactions\";\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\n\nconst { trigger3 } = eventsApi;\n\nexport interface ConstructorsMixin {\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n}\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\n\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\n    // Attribute descriptors.\n    /** @internal */\n    _attributes : AttributesDescriptors\n\n    // Attribute values.\n    attributes : AttributesValues\n\n    // Previous attribute values.\n    /** @internal */\n    _previousAttributes : AttributesValues\n\n    // Changed attributes cache. \n    /** @internal */\n    _changedAttributes : AttributesValues\n}\n\nexport interface AttributesValues {\n    [ name : string ] : any\n}\n\nexport interface AttributesDescriptors {\n    [ name : string ] : AttributeUpdatePipeline\n}\n\nexport interface AttributeUpdatePipeline{\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\n}\n\n // Optimized single attribute transactional update. To be called from attributes setters\n // options.silent === false, parse === false. \nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\n    // Open the transaction.\n    const isRoot  = begin( record ),\n          options = {};\n\n    // Update attribute.      \n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\n        // Notify listeners on changes.\n        markAsDirty( record, options );\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\n    }\n\n    // Close the transaction.\n    isRoot && commit( record );\n}\n\nfunction begin( record : AttributesContainer ){\n    if( _begin( record ) ){\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\n        record._changedAttributes = null;\n        return true;\n    }\n    \n    return false;\n}\n\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\n    if( record._changedAttributes ){\n        record._changedAttributes = null;\n    }\n\n    return _markAsDirty( record, options );\n}\n\n/**\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\n * of attributes. It might create the major speedup.\n * \n * Create the dedicated pipeline for owned and shared attributes as well.\n * \n * Three elements of the pipeline:\n * - from constructor\n * - from assignment\n * - from `set`\n */\n\nexport const UpdateModelMixin = {\n// Need to override it here, since begin/end transaction brackets are overriden. \n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = begin( this );\n        fun.call( this, this );\n        isRoot && commit( this );\n    },\n            \n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\n        const { _ownerKey } = child,\n              attribute = this._attributes[ _ownerKey ];\n\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\n    },\n\n    // Simulate attribute change \n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\n        // Touch an attribute in bounds of transaction\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\n        }\n        \n        isRoot && commit( this );\n    },\n\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\n        const isRoot = begin( this ),\n                changes : string[] = [],\n                nested : ModelTransaction[]= [],\n                { _attributes } = this,\n                values = options.parse ? this.parse( a_values, options ) : a_values;\n\n        let unknown;\n\n        if( shouldBeAnObject( this, values, options ) ){\n            for( let name in values ){\n                const spec = _attributes[ name ];\n\n                if( spec ){\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\n                        changes.push( name );\n                    }\n                }\n                else{\n                    unknown || ( unknown = [] );\n                    unknown.push( `'${ name }'` );\n                }\n            }\n\n            if( unknown ){\n                unknownAttrsWarning( this, unknown, { values }, options );\n            }\n        }\n        \n        if( changes.length && markAsDirty( this, options ) ){\n            return new ModelTransaction( this, isRoot, nested, changes );\n        }\n        \n        // No changes, but there might be silent attributes with open transactions.\n        for( let pendingTransaction of nested ){\n            pendingTransaction.commit( this );\n        }\n\n        isRoot && commit( this );\n    }\n};\n\nexport function unknownAttrsWarning( record : AttributesContainer, unknown : string[], props, options ){\n    record._log( 'warn', 'Type-R:UnknownAttrs', `undefined attributes ${ unknown.join(', ')} are ignored.`, props, options.logger );\n}\n\n// One of the main performance tricks of Type-R.\n// Create loop unrolled constructors for internal attribute hash,\n// so the hidden class JIT optimization will be engaged and they will become static structs.\n// It dramatically improves record performance.\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\n    const attrs = Object.keys( attrDefs );\n\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\n        ${ attrs.map( attr =>`\n            this.${ attr } = values.${ attr };\n        `).join( '' ) }\n    `) as any;\n\n    AttributesCopy.prototype = Object.prototype;\n\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\n        var _attrs = record._attributes;\n\n        ${ attrs.map( attr =>`\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\n        `).join( '' ) }\n    `) as any;\n\n    Attributes.prototype = Object.prototype;\n\n    return { Attributes, AttributesCopy };\n}\n\nexport function shouldBeAnObject( record : AttributesContainer, values : object, options ){\n    if( values && values.constructor === Object ) return true;\n\n    record._log( 'error', 'Type-R:InvalidObject', 'update with non-object is ignored!', { values }, options.logger );\n    return false;\n}\n\n// Transaction class. Implements two-phase transactions on object's tree. \n// Transaction must be created if there are actual changes and when markIsDirty returns true. \nexport class ModelTransaction implements Transaction {\n    // open transaction\n    constructor( public object : AttributesContainer,\n                 public isRoot : boolean,\n                 public nested : Transaction[],\n                 public changes : string[] ){}\n\n    // commit transaction\n    commit( initiator? : AttributesContainer ) : void {\n        const { nested, object, changes } = this;\n\n        // Commit all pending nested transactions...\n        for( let transaction of nested ){ \n            transaction.commit( object );\n        }\n\n        // Notify listeners on attribute changes...\n        // Transaction is never created when silent option is set, so just send events out.\n        const { attributes, _isDirty } = object;\n        for( let key of changes ){\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}","import { IOEndpoint } from '../../io-tools';\nimport { LogLevel, tools, Logger } from '@type-r/mixture';\nimport { TransactionOptions, Transactional } from '../../transactions';\nimport { AttributesContainer, AttributeUpdatePipeline, ModelTransaction, setAttribute } from '../updates';\n\nconst { notEqual, assign} = tools;\n\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\n\nexport interface AttributeOptions {\n    _metatype? : typeof AnyType\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\n    isRequired? : boolean\n    changeEvents? : boolean\n\n    endpoint? : IOEndpoint\n\n    type? : Function\n    value? : any\n    hasCustomDefault? : boolean\n\n    parse? : Parse\n    toJSON? : AttributeToJSON\n   \n    getHooks? : GetHook[]\n    transforms? : Transform[]\n    changeHandlers? : ChangeHandler[]\n\n    _onChange? : ChangeAttrHandler\n}\n\nexport type Parse = ( value : any, key? : string ) => any;\nexport type GetHook = ( value : any, key? : string ) => any;\nexport type AttributeToJSON = ( value : any, key? : string ) => any\nexport type AttributeParse = ( value : any, key? : string ) => any\nexport type ChangeAttrHandler = ( ( value : any, attr? : string ) => void ) | string;\n\n// TODO: interface differs from options, do something obout it\nconst emptyOptions : TransactionOptions = {};\n\n/**\n * Typeless attribute. Is the base class for all other attributes.\n */\nexport class AnyType implements AttributeUpdatePipeline {\n    // Factory method to create attribute from options \n    static create : ( options : AttributeOptions, name : string ) => AnyType;\n    \n    /**\n     * Update pipeline functions\n     * =========================\n     *\n     * Stage 0. canBeUpdated( value )\n     * - presence of this function implies attribute's ability to update in place.\n     */\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\n\n    /**\n     * Stage 1. Transform stage\n     */\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    // convert attribute type to `this.type`.\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    /**\n     * Stage 2. Check if attr value is changed\n     */\n    isChanged( a : any, b : any ) : boolean {\n        return notEqual( a, b );\n    }\n\n    /**\n     * Stage 3. Handle attribute change\n     */\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\n\n    /**\n     * End update pipeline definitions.\n     */\n\n    // create empty object passing backbone options to constructor...\n    create() { return void 0; }\n\n    // generic clone function for typeless attributes\n    // Must be overriden in sublass\n    clone( value : any, record : AttributesContainer ) {\n        return value;\n    }\n\n    dispose( record : AttributesContainer, value : any ) : void {\n        this.handleChange( void 0, value, record, emptyOptions );\n    }\n\n    validate( record : AttributesContainer, value : any, key : string ) : any {}\n\n    toJSON( value, key, options? : object ) {\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    isMutableType(){\n        return this.type && this.type.prototype instanceof Transactional;\n    }\n\n    createPropertyDescriptor() : PropertyDescriptor | void {\n        const { name, getHook } = this;\n\n        if( name !== 'id' ){\n            return {\n                // call to optimized set function for single argument.\n                set( value ){\n                    setAttribute( this, name, value );\n                },\n\n                // attach get hook to the getter function, if it present\n                get : (\n                    getHook ?\n                        function() {\n                            return getHook.call( this, this.attributes[ name ], name );\n                        } :\n                        function() { return this.attributes[ name ]; }\n                ),\n\n                configurable : true\n            }\n        }\n    }\n\n    value : any\n\n    // Used as global default value for the given metatype\n    static defaultValue : any;\n\n    type : Function\n\n    initialize( name : string, options : TransactionOptions ){}\n\n    options : AttributeOptions\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        const v = value === void 0 ? this.defaultValue() : value,\n            x = this.transform( v, void 0, record, options );\n            \n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : ModelTransaction[] ){\n        const { name } = this,\n            { attributes } = record,\n              prev = attributes[ name ];\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ name ] = next;\n\n        if( this.isChanged( next, prev ) ) {\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n            return true;\n        }\n\n        return false;\n    }\n\n    propagateChanges : boolean\n\n    protected _log( level : LogLevel, code : string, text : string, value, record : AttributesContainer, logger : Logger ){\n        record._log( level, code, `${record.getClassName()}.${ this.name } ${ text }`, {\n            'New value' : value,\n            'Prev. value' : record.attributes[ this.name ]\n        }, logger );\n    }\n\n    defaultValue(){\n        return this.value;\n    }\n\n    constructor( public name : string, a_options : AttributeOptions ) {        \n        // Save original options...\n        this.options = a_options;\n\n        // Clone options.\n        const options : AttributeOptions = { getHooks : [], transforms : [], changeHandlers : [], ...a_options };\n        options.getHooks = options.getHooks.slice();\n        options.transforms = options.transforms.slice();\n        options.changeHandlers = options.changeHandlers.slice();\n\n        const {\n                  value, type, parse, toJSON, changeEvents,\n                  validate, getHooks, transforms, changeHandlers\n              } = options;\n\n        // Initialize default value...\n        this.value = value;\n        this.type  = type;\n\n        // TODO: An opportunity to optimize for attribute subtype.\n        if( !options.hasCustomDefault && type ){\n            this.defaultValue = this.create;\n        }\n        else if( tools.isValidJSON( value ) ){ \n            // JSON literals must be deep copied.\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\n        }\n        else{\n            this.defaultValue = this.defaultValue;\n        }\n\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\n        this.propagateChanges = changeEvents !== false;\n\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\n\n        this.validate = validate || this.validate;\n        \n        if( options.isRequired ){\n            this.validate = wrapIsRequired( this.validate );\n        }\n\n        /**\n         * Assemble pipelines...\n         */\n\n        // `convert` is default transform, which is always present...\n        transforms.unshift( this.convert );\n\n        // Get hook from the attribute will be used first...\n        if( this.get ) getHooks.unshift( this.get );\n\n        // let subclasses configure the pipeline...\n        this.initialize.call( this, options );\n\n        // let attribute spec configure the pipeline...\n        if( getHooks.length ){\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\n\n            const { validate } = this;\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\n                return validate.call( this, record, getHook.call( record, value, key ), key );\n            }\n        }\n        \n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\n        \n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\n\n        // Attribute-level parse transform are attached as update hooks modifiers...\n        const { doInit, doUpdate } = this;\n        this.doInit = parse ? function( value, record : AttributesContainer, options : TransactionOptions ){\n            return doInit.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options );\n        } : doInit;\n\n        this.doUpdate = parse ? function( value, record : AttributesContainer, options : TransactionOptions, nested? : ModelTransaction[] ){\n            return doUpdate.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options, nested );\n        } : doUpdate;\n    }\n\n    getHook : ( value, key : string ) => any = null\n    get : ( value, key : string ) => any\n}\n\n\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\n    return function( value, name ) {\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\n    }\n}\n\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\n    return function( next, prev, record, options ) {\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\n    }\n}\n\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\n    return function( next, prev, record, options ) {\n        prevHandler.call( this, next, prev, record, options );\n        nextHandler.call( this, next, prev, record, options );\n    }\n}\n\nfunction wrapIsRequired( validate ){\n    return function( record : AttributesContainer, value : any, key : string ){\n        return value ? validate.call( this, record, value, key ) : 'Required';\n    }\n}","/**\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\n * \n * Adds type assertions, default validation, and optimized update pipeline.\n */\n\nimport { TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer } from '../updates';\n\n/**\n * Custom class must be immutable class which implements toJSON() method\n * with a constructor taking json.\n */\nexport class ImmutableClassType extends AnyType {\n    type : new ( value? : any ) => {}\n\n    create(){\n        return new this.type();\n    }\n\n    convert( next : any ) : any {\n        return next == null || next instanceof this.type ? next : new this.type( next );\n    }\n\n    toJSON( value, key? : string, options? : object ){\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    clone( value ) {\n        return new this.type( this.toJSON( value ) );\n    }\n\n    isChanged( a, b ){\n        return a !== b;\n    }\n}\n\n/**\n * Optimized attribute of primitive type.\n * \n * Primitives has specialized simplified pipeline.\n */\nexport class PrimitiveType extends AnyType {\n    type : NumberConstructor | StringConstructor | BooleanConstructor\n\n    dispose(){}\n    create() { return this.type(); }\n\n    toJSON( value ) { return value; }\n\n    convert( next ) { return next == null ? next : this.type( next ); }\n\n    isChanged( a, b ) { return a !== b; }\n\n    clone( value ) { return value; }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    initialize(){\n        if( !this.options.hasCustomDefault ){\n            this.value = this.type();\n        }\n    }\n}\n\n// Number type with special validation algothim.\n/** @private */ \nexport class NumericType extends PrimitiveType {\n    type : NumberConstructor\n\n    create(){\n        return 0;\n    }\n\n    convert( next, prev?, record?, options? ) {\n        const num = next == null ? next : this.type( next );\n\n        if( num !== num ){\n            this._log( 'error', 'Type-R:InvalidNumber', 'Number attribute is assigned with an invalid number', next, record, options.logger );\n        }\n        \n        return num;\n    }\n\n    validate( model, value, name ) {\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\n        if( value != null && !isFinite( value ) ) {\n            return name + ' is not valid number';\n        }\n    }\n}\n\n/**\n * Compatibility wrapper for Array type.\n * @private\n */ \nexport class ArrayType extends AnyType {\n    toJSON( value ) { return value; }\n    dispose(){}\n    create(){ return []; }\n\n    convert( next, prev, record, options ) {\n        // Fix incompatible constructor behaviour of Array...\n        if( next == null || Array.isArray( next ) ) return next;\n\n        this._log( 'error', 'Type-R:InvalidArray', 'Array attribute assigned with non-array value', next, record, options.logger );\n\n        return [];\n    }\n\n    clone( value ){\n        return value && value.slice();\n    }\n}\n\nexport class ObjectType extends AnyType {\n    create(){ return {}; }\n\n    convert( next, prev, record, options ) {\n        if( next == null || typeof next === 'object' ) return next;\n                \n        this._log( 'error', 'Type-R:InvalidObject', 'Object attribute is assigned with non-object value', next, record, options.logger );\n        return {};\n    }\n}\n\nexport function doNothing(){}\n\nexport class FunctionType extends AnyType {\n    // Functions are not serialized.\n    toJSON( value ) { return void 0; }\n    create(){ return doNothing; }\n    dispose(){}\n\n    convert( next, prev, record, options ) {\n        // Fix incompatible constructor behaviour of Function...\n        if( next == null || typeof next === 'function' ) return next;\n\n        this._log( 'error', 'Type-R:InvalidFunction', 'Function attribute assigned with non-function value', next, record, options.logger );\n\n        return doNothing;\n    }\n\n    // Functions are not cloned.\n    clone( value ){ return value; }\n}\n","/**\n * Date attribute type.\n * \n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\n * and optimized update pipeline.\n */\nimport { TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer } from '../updates';\n\n// Date Attribute\n/** @private */\nexport class DateType extends AnyType {\n    create(){\n        return new Date();\n    }\n    \n    convert( next : any, a, record, options ){\n        if( next == null || next instanceof Date ) return next;\n\n        const date = new Date( next ),\n              timestamp = date.getTime();\n\n        if( timestamp !== timestamp ){\n            this._log( 'error', 'Type-R:InvalidDate', 'Date attribute assigned with invalid date', next, record, options.logger );\n        }\n\n        return date;\n    }\n\n    validate( model, value, name ) {\n        if( value != null ){\n            const timestamp = value.getTime(); \n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\n        }\n    }\n\n    toJSON( value ) { return value && value.toISOString(); }\n\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        // Date don't have handleChanges step.\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        // Date don't have handleChanges step.\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    clone( value ) { return value && new Date( value.getTime() ); }\n    dispose(){}\n}\n\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\nfunction supportsDate( date ){\n    return !isNaN( ( new Date( date ) ).getTime() );\n}\n\nif( !supportsDate('2011-11-29T15:52:30.5') ||\n    !supportsDate('2011-11-29T15:52:30.52') ||\n    !supportsDate('2011-11-29T15:52:18.867') ||\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\n\n    DateType.prototype.convert = function( value ){\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\n    }\n}\n\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nfunction safeParseDate( date : string ) : number {\n    var timestamp, struct : any[], minutesOffset = 0;\n\n    if( ( struct = isoDatePattern.exec( date )) ) {\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\n            struct[ k ] = +struct[ k ] || 0;\n        }\n\n        // allow undefined days and months\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\n        struct[ 3 ] = +struct[ 3 ] || 1;\n\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\n\n            if( struct[ 9 ] === '+' ) {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp =\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\n                    struct[ 7 ] );\n    }\n    else {\n        timestamp = Date.parse( date );\n    }\n\n    return timestamp;\n}","import { ItemsBehavior, Transactional, transactionApi, TransactionOptions } from '../../transactions';\nimport { ValidationError } from '../../validation';\nimport { AnyType } from './any';\nimport { AttributesContainer, ConstructorOptions } from '../updates';\n\nconst { free, aquire } = transactionApi;\n\nexport class AggregatedType extends AnyType {\n    type : typeof Transactional\n\n    clone( value : Transactional ) : Transactional {\n        return value ? value.clone() : value;\n    }\n\n    toJSON( x, key : string, options : object ){ return x && x.toJSON( options ); }\n\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null ){\n            if( next instanceof this.type ){\n                // In case if merge option explicitly specified, force merge.\n                if( options.merge ) return next.__inner_state__;\n            }\n            else{\n                return next;\n            }\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        // Invoke class factory to handle abstract classes\n        if( next == null ) return next;\n        \n        if( next instanceof this.type ){\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \n                this._log( 'error', 'Type-R:InvalidCollection', 'aggregated collection attribute is assigned with shared collection type', next, record, options.logger );\n            }\n\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\n            // This is an only case we could be here when merge === true.\n            if( options.merge ) return next.clone();\n\n            if( next._owner ){\n                this._log( 'warn', 'Type-R:InvalidOwner', 'object alreay has an owner and was cloned. Use explicit object.clone() to dismiss this warning.', next, record, options.logger );\n                return next.clone();\n            }\n\n            return next;\n        }\n\n        return ( this.type as any).create( next, options );\n    }\n\n    dispose ( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\n        var error = value && value.validationError;\n        if( error ) return error;\n    }\n\n    create() : Transactional {\n        return (<any>this.type).create(); // this the subclass of Transactional here.\n    }\n\n    initialize( options ){\n        options.changeHandlers.unshift( this._handleChange );\n    }\n\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\n        if( prev ){\n            free( record, prev );\n            options.unset || prev.dispose();\n        } \n        \n        if( next ) aquire( record, next, this.name );\n    }\n}","import { eventsApi } from '@type-r/mixture';\nimport { ItemsBehavior, Transactional, transactionApi, TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer, ConstructorOptions } from '../updates';\nimport { ChainableAttributeSpec } from '../attrDef';\n\nconst { on, off } = eventsApi,\n    { free, aquire } = transactionApi;\n\n/************************\n * Shared attribute definition.\n * - Not serialized.\n * - Listening to the changes.\n * - Doesn't take ownership when assigned with object of proper type.\n * - Takes ownership on objects which are converted.\n */\n\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\n\n/** @private */\nexport class SharedType extends AnyType {\n    type : typeof Transactional\n\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value, record ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\n        // References are not cloned.\n        if( !value || value._owner !== record ) return value;\n\n        // Implicitly created objects are cloned.\n        const clone = value.clone();\n        aquire( record, clone, this.name );\n        return clone;\n    }\n\n    // Do not serialize by default.\n    toJSON(){}\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null && !( next instanceof this.type ) ){\n            return next;\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        if( next == null || next instanceof this.type ) return next;\n\n        // Convert type using implicitly created transactional object.\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\n\n        // To prevent a leak, we need to take an ownership on it.\n        aquire( record, implicitObject, this.name );\n\n        return implicitObject;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n\n    // They are always created as null.\n    create() : Transactional {\n        return null;\n    }\n\n    // Listening to the change events\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\n        if( prev ){\n            // If there was an implicitly created object, remove an ownership.\n            if( prev._owner === record ){\n                free( record, prev );\n                options.unset || prev.dispose();\n            }\n            else{\n                off( prev, prev._changeEventName, this._onChange, record );\n            }\n        }  \n \n        if( next ){\n            // No need to take an ownership for an implicit object - already done in convert or clone.\n            if( next._owner !== record ){\n                on( next, next._changeEventName, this._onChange, record );\n            }\n        } \n    }\n\n    dispose( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \n\n    initialize( options ){\n        // Create change event handler which knows current attribute name. \n        const attribute = this;\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\n            this === initiator || this.forceAttributeChange( attribute.name, options );\n        } : ignore;\n\n        options.changeHandlers.unshift( this._handleChange );\n    }\n}\n\nfunction ignore(){}","import { PrimitiveType, NumericType, ObjectType, ImmutableClassType, FunctionType, ArrayType } from './basic';\nimport { DateType } from './date';\nimport { AnyType, AttributeOptions } from './any';\n\nexport * from './any';\nexport * from './basic';\nexport * from './date';\nexport * from './owned';\nexport * from './shared';\n\n/**\n * Every record attribute type has the corresponding metatype controlling its behavior.\n * For built-in types, Type-R uses the predefined list to resolve metatype in order to avoid global objects modifications.\n * For user-defined types, static `_metatype` constructor member is used.\n */\n\nconst builtins : Function[] = [ String, Number, Boolean, Date, Object, Array, Function ],\n      metatypes = [ PrimitiveType, NumericType, PrimitiveType, DateType, ObjectType, ArrayType, FunctionType ];\n\nexport function getMetatype( Ctor : Function ){\n    return ( Ctor as any )._metatype || resolveBuiltins( Ctor );\n}\n\nAnyType.create = ( options : AttributeOptions, name : string ) => {\n    const type = options.type,\n          AttributeCtor = options._metatype || ( type ? getMetatype( type ): AnyType );\n\n    return new AttributeCtor( name, options );\n}\n\nfunction resolveBuiltins( Ctor : Function ){\n    const idx = builtins.indexOf( Ctor );\n    return idx < 0 ? ImmutableClassType : metatypes[ idx ];\n}","/**\n * Type spec engine. Declare attributes using chainable syntax,\n * and returns object with spec.\n */\nimport { IOEndpoint } from '../io-tools';\nimport { definitionDecorator, EventMap, EventsDefinition, tools } from '@type-r/mixture';\nimport { Transactional } from '../transactions';\nimport { AttributeOptions, AttributeToJSON, getMetatype, Parse, SharedType } from './metatypes';\nimport { AttributesContainer } from './updates';\n\nconst { assign } = tools;\n\nexport interface AttributeCheck {\n    ( value : any, key : string ) : boolean\n    error? : any\n}\n\n// Infer the proper TS type from a Type-R attribute spec.\nexport type Infer<A> =\n    A extends ChainableAttributeSpec<infer F> ? TrueReturnType<F> :\n    A extends Function ? TrueReturnType<A> :\n    A | null;\n \n// Extract the proper TS return type for a function or constructor.\ntype TrueReturnType<F extends Function> =\n    F extends DateConstructor ? Date | null :\n    F extends ( ...args : any[] ) => infer R ? R | null :\n    F extends new ( ...args : any[] ) => infer R ? R | null:\n    void;\n\nexport class ChainableAttributeSpec<F extends Function>{\n    options : AttributeOptions & { type? : F };\n\n    constructor( options : AttributeOptions ) {\n        // Shallow copy options, fill it with defaults.\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\n        if( options ) assign( this.options, options );\n    }\n\n    check( check : AttributeCheck, error? : any ) : this {\n        function validate( model, value, name ){\n            if( !check.call( model, value, name ) ){\n                const msg = error || check.error || name + ' is not valid';\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\n            }\n        }\n\n        const prev = this.options.validate;\n\n        return this.metadata({\n            validate : prev ? (\n                            function( model, value, name ){\n                                return prev( model, value, name ) || validate( model, value, name );\n                            }\n                       ) : validate\n        });\n    }\n\n    get as() : PropertyDecorator {\n        return definitionDecorator( 'attributes', this );\n    }\n\n    get isRequired() : this {\n        return this.required;\n    }\n\n    get required() : this {\n        return this.metadata({ isRequired : true }); \n    }\n\n    endpoint( endpoint : IOEndpoint ) : this {\n        return this.metadata({ endpoint });\n    }\n\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : this {\n        return this.metadata({ _onChange : ref });\n    }\n\n    // Attribute-specific parse transform\n    parse( fun : Parse ) : this {\n        return this.metadata({ parse : fun });\n    }\n\n    toJSON( fun : AttributeToJSON | false ) : this {\n        return this.metadata({\n            toJSON : typeof fun === 'function' ? fun : ( fun ? ( x, k, o ) => x && x.toJSON( o ) : emptyFunction ) \n        });\n    }\n\n    // Attribute get hook.\n    get( fun ) : this {\n        return this.metadata({\n            getHooks : this.options.getHooks.concat( fun )\n        });\n    }\n\n    // Attribute set hook.\n    set( fun ) : this {\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\n            if( this.isChanged( next, prev ) ) {\n                const changed = fun.call( record, next, this.name );\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\n            }\n\n            return prev;\n        }\n\n        return this.metadata({\n            transforms : this.options.transforms.concat( handleSetHook )\n        });\n    }\n\n    changeEvents( events : boolean ) : this {\n        return this.metadata({ changeEvents : events });\n    }\n\n    // Subsribe to events from an attribute.\n    events( map : EventsDefinition ) : this {\n        const eventMap = new EventMap( map );\n\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\n\n            next && next.trigger && eventMap.subscribe( record, next );\n        }\n\n        return this.metadata({\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\n        });\n    }\n\n    // Creates a copy of the spec.\n    get has() : this {\n        return this;\n    }\n\n    metadata( options : object ) : this {\n        const cloned = new ChainableAttributeSpec( this.options );\n        assign( cloned.options, options );\n        return cloned as any;\n    }\n\n    value( x ) : this {\n        return this.metadata({ value : x, hasCustomDefault : true });\n    }\n\n    static from( spec : any ) : ChainableAttributeSpec<any> {\n        // Pass metatype through untouched...\n        if( spec && spec instanceof ChainableAttributeSpec ) {\n            return spec;\n        }\n\n        return typeof spec === 'function' ? type( spec ) : value( spec );\n    }\n}\n\nfunction emptyFunction(){}\n\nexport function type<F extends Function>( this : void, Type : ChainableAttributeSpec<F> | F, value? : any ) : ChainableAttributeSpec<F> {\n    if( Type instanceof ChainableAttributeSpec ) return Type;\n\n    const attrDef = new ChainableAttributeSpec<F>({ type : Type }),\n          defaultValue = Type && value === void 0 ? getMetatype( Type ).defaultValue : value;\n\n    return defaultValue === void 0 ? attrDef : attrDef.value( defaultValue );\n}\n\nexport function shared<C extends Function>( this : void, Constructor : C ) : ChainableAttributeSpec<C> {\n    return new ChainableAttributeSpec<C>({\n        value : null,\n        type : Constructor,\n        _metatype : SharedType\n    });\n}\n\nexport { shared as refTo }\n\n// Create attribute metatype inferring the type from the value.\nexport function value<T>( this : void, x : T ) : ChainableAttributeSpec<new ( ...args : any[] ) => T> {\n    const Type = inferType( x ),\n        // Transactional types inferred from values must have shared type. \n        AttrDef = Type && Type.prototype instanceof Transactional ? shared( Type ) :\n                  type( Type );\n\n    return AttrDef.value( x ) as any;\n}\n\n/*\nexport declare type InferConstructor<T> = \n    T extends number ? NumberConstructor :\n    T extends string ? StringConstructor :\n    T extends boolean ? BooleanConstructor :\n    T extends Date ? DateConstructor :\n    T extends Transactional ? new ( ...args : any[] ) => */\n\nfunction inferType( value : any ) : Function {\n    switch( typeof value ) {\n        case 'number' :\n            return Number;\n        case 'string' :\n            return String;\n        case 'boolean' :\n            return Boolean;\n        case 'function' :\n            return Function;\n        case 'undefined' :\n            return void 0;\n        case 'object' :\n            return value ? <any> value.constructor : void 0;\n    }\n}","import { IOEndpoint } from '../io-tools';\nimport { eventsApi, tools as _ } from '@type-r/mixture';\nimport { CompiledReference } from '../traversable';\nimport { ChainableAttributeSpec } from './attrDef';\nimport { AnyType } from './metatypes';\nimport { ConstructorsMixin, constructorsMixin } from './updates';\n\nexport interface ModelAttributesMixin extends ConstructorsMixin {\n    // Attributes descriptors\n    _attributes : AttributeDescriptors\n    _attributesArray : AnyType[]\n    \n    // Attribute's property descriptors\n    properties : PropertyDescriptorMap\n\n    // Event map for record's local events.\n    _localEvents? : eventsApi.EventMap,\n\n    _endpoints : { [ name : string ] : IOEndpoint }\n}\n\nexport interface AttributeDescriptors {\n    [ name : string ] : AnyType\n}\n\n// Create attribute from the type spec.\nexport function createAttribute( spec : any, name : string ) : AnyType {\n    return AnyType.create( ChainableAttributeSpec.from( spec ).options, name );\n}\n\n// Create record mixin from the given record's attributes definition\nexport function createAttributesMixin( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : ModelAttributesMixin {\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\n\n    const ConstructorsMixin = constructorsMixin( allAttributes );\n\n    return {\n        ...ConstructorsMixin,\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\n        ...localEventsMixin( myAttributes ),\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\n    }            \n}\n\ninterface LocalEventsMixin {\n    _localEvents? : eventsApi.EventMap\n}\n\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\n    let _localEvents : eventsApi.EventMap;\n\n    for( var key in attrSpecs ){\n        const attribute = attrSpecs[ key ],\n            { _onChange } = attribute.options; \n\n        if( _onChange ){\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\n\n            _localEvents.addEvent( 'change:' + key,\n                typeof _onChange === 'string' ?\n                    createWatcherFromRef( _onChange, key ) : \n                    wrapWatcher( _onChange, key ) );\n        }\n    }\n\n    return _localEvents ? { _localEvents } : {};\n}\n\nfunction wrapWatcher( watcher, key ){\n    return function( record, value ){\n        watcher.call( record, value, key );\n    } \n}\n\nfunction createWatcherFromRef( ref : string, key : string ){\n    const { local, resolve, tail } = new CompiledReference( ref, true );\n    return local ?\n        function( record, value ){\n            record[ tail ]( value, key );\n        } :\n        function( record, value ){\n            resolve( record )[ tail ]( value, key );\n        }\n}","import { IOEndpoint, IONode, IOOptions, IOPromise, startIO } from '../io-tools';\nimport { TransactionOptions } from '../transactions';\n\nexport interface IOModel extends IONode {\n    getEndpoint() : IOEndpoint\n    save( options? : object ) : IOPromise<this>\n    fetch( options? : object ) : IOPromise<this>\n    destroy( options? : object ) : IOPromise<this>\n    toJSON( options? : object ) : any\n    parse( data : any, options? : object ) : any\n    isNew() : boolean\n    id : string | number\n    set( json : object, options : TransactionOptions ) : this\n}\n\nexport const IOModelMixin = {\n    save( this : IOModel, options : IOOptions = {} ){\n        const endpoint = this.getEndpoint(),\n              json = this.toJSON({ ioMethod : 'save', ...options });\n\n        return startIO(\n            this,\n            this.isNew() ?\n                endpoint.create( json, options, this ) :\n                endpoint.update( this.id, json, options, this ),\n            options,\n\n            update => {\n                this.set( update, {\n                    parse : true,\n                    ioMethod : 'save',\n                    ...options\n                } );\n            }\n        );\n    },\n\n    fetch( options : IOOptions = {} ){\n        return startIO(\n            this,\n            this.getEndpoint().read( this.id, options, this ),\n            options,\n\n            json => this.set( json, { parse : true, ioMethod : 'fetch', ...options } )\n        );\n    },\n\n    destroy( options : IOOptions = {} ){  \n        return startIO(\n            this,\n            this.getEndpoint().destroy( this.id, options, this ),\n            options,\n\n            () => {\n                const { collection } = this;\n                if( collection ){\n                    collection.remove( this, options );\n                }\n                else{\n                    this.dispose();\n                }\n\n                return this;\n            }\n        )\n    }\n}","/**\n * Model core implementing transactional updates.\n * The root of all definitions. \n */\n\nimport { CollectionConstructor } from '../collection';\nimport { IOEndpoint } from '../io-tools';\nimport { define, definitions, isProduction, Logger, logger, LogLevel, mixinRules, TheType, tools } from '@type-r/mixture';\nimport { CloneOptions, Owner, Transaction, Transactional, TransactionalDefinition, TransactionOptions } from '../transactions';\nimport { ChildrenErrors } from '../validation';\nimport { Infer, type } from './attrDef';\nimport { IOModel, IOModelMixin } from './io-mixin';\nimport { AggregatedType, AnyType } from './metatypes';\nimport { AttributesConstructor, AttributesContainer, AttributesCopyConstructor, AttributesValues, setAttribute, shouldBeAnObject, unknownAttrsWarning, UpdateModelMixin } from './updates';\nimport { LinkedModelHash } from './linked-attrs';\n\n\nconst { assign, isEmpty } = tools;\n\n/*******************************************************\n * Model core implementation\n */\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\n// Client unique id counter\nlet _cidCounter : number = 0;\n\n/***************************************************************\n * Model Definition as accepted by Model.define( definition )\n */\nexport interface ModelDefinition extends TransactionalDefinition {\n    idAttribute? : string\n    attributes? : AttributesValues\n    collection? : object\n    Collection? : typeof Transactional\n}\n\nexport interface ModelConstructor<A> extends TheType<typeof Model> {\n    new ( attrs? : Partial<A>, options? : object ) : Model & A\n    prototype : Model\n    Collection : CollectionConstructor<Model & A>\n}\n\nexport type InferAttrs<A extends object> = {\n    [K in keyof A]: Infer<A[K]>\n};\n\nexport type LinkedAttributes<M extends { attributes : object }> = LinkedModelHash<InferAttrs<M['attributes']>>\nexport type AttributesMixin<M extends { attributes : object }> = InferAttrs<M['attributes']> & { readonly $ : LinkedAttributes<M> }\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'm',\n\n    // Name of the change event\n    _changeEventName : 'change',\n\n    // Default id attribute name\n    idAttribute : 'id'\n})\n@definitions({\n    defaults : mixinRules.merge,\n    attributes : mixinRules.merge,\n    collection : mixinRules.merge,\n    Collection : mixinRules.value,\n    idAttribute : mixinRules.protoValue\n})\nexport class Model extends Transactional implements IOModel, AttributesContainer, Iterable<any> {\n    /** @internal */\n    static _metatype = AggregatedType;\n\n    // Hack\n    static onDefine( definition, BaseClass ){}\n\n    static comparator<T extends typeof Model>( this : T, attr : keyof InstanceType<T>, asc = true ) : ( a : InstanceType<T>, b : InstanceType<T> ) => -1 | 0 | 1 {\n        const { compare } = tools;\n        return asc ? \n            ( a, b ) => compare( a[ attr ], b[ attr ] ) :\n            ( a, b ) => -compare( a[ attr ], b[ attr ] ) as any;\n    }\n\n    static Collection : CollectionConstructor;\n    static DefaultCollection : CollectionConstructor;\n    \n    // Attribute type for the record id.\n    static id = type( String ).value( null );\n    \n    // Lazy object reference, serializable as id.\n    static get ref(){\n        return type( this )\n            .toJSON( x => x ? x.id : null )\n            .parse( x => {\n                return { [ this.prototype.idAttribute ] : x };\n            });\n    }\n\n    static extendAttrs<T extends typeof Model, A extends object>( this : T, attrs : A ) : ModelConstructor<InstanceType<T> & InferAttrs<A>> {\n        return this.defaults( attrs ) as any;\n    }\n\n    static defaults( attrs : AttributesValues ) : typeof Model {\n        return this.extend({ attributes : attrs }) as any;\n    }\n    \n    static attributes : AttributesValues\n\n\n    _attributes$ : object = void 0\n    __Attributes$ : new ( model : Model ) => object\n\n    /** @internal */\n    get $() : any {\n        return this._attributes$ || ( this._attributes$ = new this.__Attributes$( this ) )\n    }\n\n    /********************\n     * IO Methods\n     */\n    /** @internal */\n     _endpoints : { [ name : string ] : IOEndpoint }\n\n    /***********************************\n     * Core Members\n     */\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    /** @internal */\n    get __inner_state__(){ return this.attributes; }\n\n    get changed(){\n        let changed = this._changedAttributes;\n\n        if( !changed ){\n            const prev = this._previousAttributes;\n            changed = {};\n\n            const { attributes } = this;\n\n            for( let attr of this._attributesArray ){\n                const key = attr.name,\n                    value = attributes[ key ];\n\n                if( attr.isChanged( value, prev[ key ] ) ){\n                    changed[ key ] = value;\n                }\n            }\n\n            this._changedAttributes = changed;\n        }\n\n        return changed;    \n    }\n\n    changedAttributes( diff? : {} ) : boolean | {} {\n        if( !diff ) return this.hasChanged() ? { ...this.changed } : false;\n\n        var val, changed : {} | boolean = false,\n            old          = this._transaction ? this._previousAttributes : this.attributes,\n            attrSpecs    = this._attributes;\n\n        for( var attr in diff ){\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\n            (changed || (changed = {}))[ attr ] = val;\n        }\n\n        return changed;        \n    }\n\n    hasChanged( key? : string ) : boolean {\n        const { _previousAttributes } = this;\n        if( !_previousAttributes ) return false;\n\n        return key ?\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\n                !isEmpty( this.changed );\n    }\n\n    previous( key : string ) : any {\n        if( key ){\n            const { _previousAttributes } = this;\n            if( _previousAttributes ) return _previousAttributes[ key ];\n        }\n        \n        return null;\n    }\n\n    isNew() : boolean {\n        return this.id == null;\n    }\n\n    has( key : string ) : boolean {\n        return this[ key ] != void 0;\n    }\n\n    // Return attribute value, setting an attribute to undefined.\n    // TODO: If attribute was aggregated, don't dispose it.\n    unset( key : string, options? ) : any {\n        const value = this[ key ];\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\n        return value;\n    }\n\n    // Undocumented. Move to NestedTypes?\n    clear( options? ) : this {\n        const nullify = options && options.nullify;\n\n        this.transaction( () =>{\n            this.forEach( ( value, key ) => this[ key ] = nullify ? null : void 0 );\n        }, options );\n\n        return this;\n    }\n\n    // Returns Model owner skipping collections. TODO: Move out\n    getOwner() : Owner {\n        const owner : any = this._owner;\n\n        // If there are no key, owner must be transactional object, and it's the collection.\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\n        return this._ownerKey ? owner : owner && owner._owner;\n    }\n\n    /***********************************\n     * Identity managements\n     */\n\n    // Id attribute name ('id' by default)\n    idAttribute : string;\n\n    // Fixed 'id' property pointing to id attribute\n    get id() : string { return this.attributes[ this.idAttribute ]; }\n    set id( x : string ){ setAttribute( this, this.idAttribute, x ); }\n\n    /***********************************\n     * Dynamically compiled stuff\n     */\n\n    // Attributes specifications\n    /** @internal */\n    _attributes : { [ key : string ] : AnyType }\n\n    /** @internal */\n    _attributesArray : AnyType[]\n\n    // Attributes object copy constructor\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n\n    // Create record default values, optionally augmenting given values.\n    defaults( values = {} ){\n        const defaults = {},\n            { _attributesArray } = this;\n\n        for( let attr of _attributesArray ){\n            const key = attr.name,\n            value = values[ key ];\n\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\n        }\n\n        return defaults;\n    }\n\n    /***************************************************\n     * Model construction\n     */\n    // Create record, optionally setting an owner\n    constructor( a_values? : any, a_options? : ConstructorOptions ){\n        super( _cidCounter++ );\n        this.attributes = {};\n        \n        const options = a_options || {},\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\n\n        isProduction || typeCheck( this, values, options );\n\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\n\n        this.initialize( a_values, a_options );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    // Initialization callback, to be overriden by the subclasses \n    initialize( values? : Partial<this>, options? ){}\n\n    // Deeply clone record, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n\n        return copy;\n    }\n\n    /** @internal */\n    _validateNested( errors : ChildrenErrors ) : number {\n        var length    = 0;\n\n        const { attributes } = this;\n\n        for( let attribute of this._attributesArray ){\n            const { name } = attribute,\n                error = attribute.validate( this, attributes[ name ], name );\n\n            if( error ){\n                errors[ name ] = error;\n                length++;\n            }\n        }\n\n        return length;\n    }\n\n    // Get attribute by key\n    get( key : string ) : any {\n        return this[ key ];\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( values : any, options? : TransactionOptions ) : this {\n        if( values ){ \n            const transaction = this._createTransaction( values, options );\n            transaction && transaction.commit();\n        }\n\n        return this;\n    }\n\n    /**\n     * Serialization control\n     */\n\n    // Default record-level serializer, to be overriden by subclasses \n    toJSON( options? : TransactionOptions ) : any {\n        const json = {},\n            { attributes } = this;\n\n        for( let attribute of this._attributesArray ){\n            const { name } = attribute,\n                value = attributes[ name ];\n\n            if( value !== void 0 ){\n                // ...serialize it according to its spec.\n                const asJson = attribute.toJSON.call( this, value, name, options );\n\n                // ...skipping undefined values. Such an attributes are excluded.\n                if( asJson !== void 0 ) json[ name ] = asJson; \n            }\n        }\n\n        return json;\n    }\n    \n    // Default record-level parser, to be overriden by the subclasses.\n    parse( data, options? : TransactionOptions ){\n        return data;\n    }\n\n    /**\n     * Transactional control\n     */\n    deepSet( name : string, value : any, options? : any ){\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\n        this.transaction( () => {\n            const path  = name.split( '.' ),\n                l     = path.length - 1,\n                attr  = path[ l ];\n\n            let model = this;\n\n            // Locate the model, traversing the path.\n            for( let i = 0; i < l; i++ ){\n                const key = path[ i ];\n\n                // There might be collections in path, so use `get`.\n                let next    = model.get ? model.get( key ) : model[ key ];\n\n                // Create models, if they are not exist.\n                if( !next ){\n                    const attrSpecs = model._attributes;\n                    if( attrSpecs ){\n                        // If current object is model, create default attribute\n                        var newModel = attrSpecs[ key ].create();\n\n                        // If created object is model, nullify attributes when requested\n                        if( options && options.nullify && newModel._attributes ){\n                            newModel.clear( options );\n                        }\n\n                        model[ key ] = next = newModel;\n                    }\n                    // Silently fail in other case.\n                    else return;\n                }\n                \n                model = next;\n            }\n\n            // Set model attribute.\n            if( model.set ){\n                model.set({ [ attr ] : value }, options );\n            }\n            else{\n                model[ attr ] = value;\n            }\n        });\n\n        return this;\n    }\n            \n    // Returns owner without the key (usually it's collection)\n    get collection() : any {\n        return this._ownerKey ? null : this._owner;\n    }\n\n    // Dispose object and all childrens\n    dispose(){\n        if( this._disposed ) return;\n\n        const { attributes } = this;\n\n        for( let attr of this._attributesArray ){\n            attr.dispose( this, attributes[ attr.name ] );\n        }\n        \n        super.dispose();\n    }\n\n    /** @internal */\n    _log( level : LogLevel, topic: string, text : string, props : object, a_logger? : Logger ) : void {\n        ( a_logger || logger ).trigger( level, topic, this.getClassName() + ' ' + text, {\n            ...props,\n            'Model' : this,\n            'Attributes definition' : this._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Model';\n    }\n\n    /** @internal */\n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\n    // Simulate attribute change \n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\n\n    /** @internal */\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\n\n\n    /**\n     * Map methods\n     */\n\n    forEach( iteratee : ( value? : any, key? : string ) => void, context? : any ){\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\n            { attributes } = this;\n\n        for( const key in this.attributes ){\n            const value = attributes[ key ];\n            if( value !== void 0 ) fun( value, key );\n        }\n    }\n\n    mapObject( a_fun : ( value, key ) => any, context? : any ) : object {\n        const fun = context === void 0 ? a_fun : a_fun.bind( context );\n        return tools.transform( {}, this.attributes, fun );\n    }\n\n    [ Symbol.iterator ](){\n        return new ModelEntriesIterator( this );\n    }\n\n    entries(){\n        return new ModelEntriesIterator( this );\n    }\n\n    // Get array of attribute keys (Model) or record ids (Collection) \n    keys() : string[] {\n        const keys : string[] = [];\n\n        this.forEach( ( value, key ) => keys.push( key ) );\n\n        return keys;\n    }\n};\n\nexport interface Model extends IOModel {}\nexport interface Model extends AttributesContainer {}\n\n\nassign( Model.prototype, UpdateModelMixin, IOModelMixin );\n\n/***********************************************\n * Helper functions\n */\n\nclass BaseModelAttributes {\n    id : string\n\n    constructor( record : Model, x : AttributesValues, options : TransactionOptions ) {\n        this.id = x.id;\n    }\n}\n\nModel.prototype.Attributes = BaseModelAttributes;\n\nclass BaseModelAttributesCopy {\n    id : string\n\n    constructor( x : AttributesValues ) {\n        this.id = x.id;\n    }\n}\n\nModel.prototype.AttributesCopy = BaseModelAttributesCopy;\n\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\nModel.prototype._attributes = { id : IdAttribute };\nModel.prototype._attributesArray = [ IdAttribute ];\n\nfunction typeCheck( record : Model, values : object, options ){\n    if( shouldBeAnObject( record, values, options ) ){\n        const { _attributes } = record;\n        let unknown : string[];\n\n        for( let name in values ){\n            if( !_attributes[ name ] ){\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            unknownAttrsWarning( record, unknown, { values }, options );\n        }\n    }\n}\n\nexport class ModelEntriesIterator implements Iterator<[string, any]> {\n    private idx = 0;\n    \n    constructor( private readonly record : Model){}\n\n    next() : IteratorResult<[string, any]> {\n        const { record } = this,\n            metatype = record._attributesArray[ this.idx++ ];\n\n        return {\n            done : !metatype,\n            value : metatype ? [ metatype.name, record[ metatype.name ] ] : void 0\n        };\n    }\n}","import { Model } from './model'\nimport { Linked } from '@linked/value'\nimport { Transactional } from '../transactions';\n\nexport function addAttributeLinks( Class : typeof Model ){\n    const { prototype } = Class;\n    const { _attributesArray } = prototype;\n\n    const AttributeRefs = new Function('model', `\n        this._model = model;\n        ${ _attributesArray.map( ({ name }) => `this.$${name} = void 0; `).join( '\\n' )}\n    `)\n\n    AttributeRefs.prototype.__ModelAttrRef = LinkedAttr;\n\n    for( let attr of _attributesArray ){\n        const { name } = attr;\n        \n        Object.defineProperty( AttributeRefs.prototype, name, {\n            get : new Function( attr.isMutableType() ? `\n                var cached = this.$${name},\n                    value = this._model.${name},\n                    token = value && value._changeToken;\n\n                return cached && cached._token === token ? cached :\n                    ( this.$${name} = new this.__ModelAttrRef( this._model, '${name}', value, token ) );\n            ` : `\n                var cached = this.$${name};\n\n                return cached && cached.value === this._model.${name} ? cached :\n                    ( this.$${name} = new this.__ModelAttrRef( this._model, '${name}', this._model.${name} ) );\n            `) as any\n        });\n    }\n\n    prototype.__Attributes$ = AttributeRefs as any;\n}\n\nexport type LinkedModelHash<T extends object>= {\n    readonly [ K in keyof T ] : LinkedAttr<T[K]>\n}\n\nexport class LinkedAttr<T> extends Linked<T> {\n    constructor( protected model : Model, protected attr : string, value, protected _token ){\n        super( value );\n    }\n\n    set( x : T ){\n        this.model[ this.attr ] = x;\n    }\n\n    _error : any\n\n    get error(){\n        return this._error || ( this._error = this.model.getValidationError( this.attr ) );\n    }\n\n    set error( x : any ){\n        this._error = x;\n    }\n\n    // Attribute's descriptor.\n    get descriptor(){\n        return this.model._attributes[ this.attr ];\n    }\n}\n\nObject.defineProperty( LinkedAttr.prototype, '_changeToken', { value : null } );","import { define, predefine, tools } from '@type-r/mixture';\nimport { Transactional } from '../transactions';\nimport { type } from './attrDef';\nimport { createAttributesMixin } from './mixin';\nimport { InferAttrs, Model, ModelConstructor, ModelDefinition } from './model';\n\nimport { addAttributeLinks } from './linked-attrs'\n\nexport * from './attrDef';\nexport * from './metatypes';\nexport { AttributesMixin, LinkedAttributes, InferAttrs, ModelConstructor } from './model';\nexport { Model };\n\nconst { assign, defaults } = tools;\n\nexport function attributes<D extends object>( attrDefs : D ) : ModelConstructor<InferAttrs<D>> {\n    @define class DefaultModel extends Model {\n        static attributes = attrDefs;\n    }\n\n    return DefaultModel as any;\n}\n\nModel.onExtend = function( this : typeof Model, BaseClass : typeof Model ){\n    Transactional.onExtend.call( this, BaseClass );\n\n    // Create the default collection\n    const Class = this;\n\n    @predefine class DefaultCollection extends BaseClass.Collection {\n        static model = Class;\n    }\n\n    this.DefaultCollection = DefaultCollection;\n\n    // If there are no collection defined in statics, use the default collection.\n    // It will appear in onDefine's definition, overriding all other settings.\n    if( Class.Collection === BaseClass.Collection ){\n        this.Collection = DefaultCollection;\n    }\n}\n\nModel.onDefine = function( definition : ModelDefinition, BaseClass : typeof Model ){\n    const baseProto : Model = BaseClass.prototype;\n\n    // Compile attributes spec, creating definition mixin.\n    const { properties, _localEvents, ...dynamicMixin } = createAttributesMixin( this.attributes = getAttributes( definition ), baseProto._attributes );\n    assign( this.prototype, dynamicMixin );\n    \n    definition.properties = defaults( definition.properties || {}, properties );\n    definition._localEvents = _localEvents;\n    \n    Transactional.onDefine.call( this, definition, BaseClass );\n\n    // Finalize the definition of the default collection.\n    this.DefaultCollection.define( definition.collection || {} );\n\n    // assign collection from the definition.\n    this.Collection = definition.Collection;\n    this.Collection.prototype.model = this;\n\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;\n\n    addAttributeLinks( this );\n}\n\nfunction getAttributes({ defaults, attributes, idAttribute } : ModelDefinition ) {\n    const definition = attributes || defaults || {};\n    \n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\n    if( idAttribute && !( idAttribute in definition ) ){\n        definition[ idAttribute ] = void 0;\n    }\n\n    return definition;\n}\n\ndeclare var Reflect;\n\nexport function auto( value : any ) : PropertyDecorator;\nexport function auto( proto : object, attrName : string ) : void;\nexport function auto( proto, attrName? : string ) : any {\n    if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\n        if( attrName ){\n            type( Reflect.getMetadata( \"design:type\", proto, attrName ) ).as( proto, attrName );\n        }\n        else{\n            const value = proto;\n            return ( proto : object, attrName : string ) : void => {\n                type( Reflect.getMetadata( \"design:type\", proto, attrName ) ).value( value ).as( proto, attrName );\n            }\n        }        \n    }\n    else{\n        proto._log( 'error', 'Type-R:MissingImport', 'Add import \"reflect-metadata\"; as the first line of your app.' );\n    }    \n}","import { eventsApi, Logger } from '@type-r/mixture';\nimport { Model } from '../model';\nimport { ItemsBehavior, Owner, Transaction, Transactional, transactionApi, TransactionOptions } from '../transactions';\n\n\nconst { trigger2, trigger3, on, off } = eventsApi,\n      { commit } = transactionApi,\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\n\n/** @private */\nexport interface CollectionCore extends Transactional, Owner {\n    /** @internal */\n    _byId : IdIndex\n\n    models : Model[]\n    model : typeof Model\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\n    \n    /** @internal */\n    _comparator : Comparator\n    \n    get( objOrId : string | Model | Object ) : Model    \n    \n    /** @internal */\n    _itemEvents? : eventsApi.EventMap\n    /** @internal */\n    _shared : number\n    /** @internal */\n    _aggregationError : Model[]\n    /** @internal */\n    _log( level : string, topic : string, text : string, value : any, logger : Logger ) : void\n}\n\n// Collection's manipulation methods elements\nexport type Elements = ( Object | Model )[];\n\nexport interface CollectionOptions extends TransactionOptions {\n    sort? : boolean\n}\n\nexport type Comparator = ( a : Model, b : Model ) => number;  \n\n/** @private */\nexport function dispose( collection : CollectionCore ) : Model[]{\n    const { models } = collection;\n\n    collection.models = [];\n    collection._byId  = {};\n\n    freeAll( collection, models );\n    return models;\n}\n\n/** @private */\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Model, options : CollectionOptions ){\n    const { model } = collection;\n    \n    let record : Model;\n\n    if( collection._shared ){\n        record = attrs instanceof model ? attrs : <Model>model.create( attrs, options );\n\n        if( collection._shared & ItemsBehavior.listen ){\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\n        }\n    }\n    else{\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Model>model.create( attrs, options );\n\n        if( record._owner ){\n            if( record._owner !== collection ){\n                _aquire( collection, record.clone() );\n                const errors = collection._aggregationError || ( collection._aggregationError = [] );\n                errors.push( record );\n            }\n        }\n        else{\n            _aquire( collection, record );   \n        }\n    }    \n\n    // Subscribe for events...\n    const { _itemEvents } = collection;\n    _itemEvents && _itemEvents.subscribe( collection, record );\n\n    return record;\n}\n\n/** @private */\nexport function free( owner : CollectionCore, child : Model, unset? : boolean ) : void {\n    if( owner._shared ){\n        if( owner._shared & ItemsBehavior.listen ){\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\n        }\n    }\n    else{\n        _free( owner, child );\n        unset || child.dispose();\n    }\n\n    const { _itemEvents } = owner;\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\n}\n\n/** @private */\nexport function freeAll( collection : CollectionCore, children : Model[] ) : Model[] {\n    for( let child of children ){\n        free( collection, child );\n    }\n\n    return children;\n}\n\n/**\n * Silently sort collection, if its required. Returns true if sort happened.\n * @private\n */   \nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\n    let { _comparator } = collection;\n    if( _comparator && options.sort !== false ){\n        collection.models.sort( _comparator );\n        return true;\n    }\n\n    return false;\n}\n\n/**********************************\n * Collection Index\n * @private \n */\nexport interface IdIndex {\n    [ id : string ] : Model\n}\n\n/** @private Add record */ \nexport function addIndex( index : IdIndex, model : Model ) : void {\n    index[ model.cid ] = model;\n    var id             = model.id;\n    \n    if( id || ( id as any ) === 0 ){\n        index[ id ] = model;\n    }\n}\n\n/** @private Remove record */ \nexport function removeIndex( index : IdIndex, model : Model ) : void {\n    delete index[ model.cid ];\n    var id = model.id;\n    if( id || ( id as any ) === 0 ){\n        delete index[ id ];\n    }\n}\n\nexport function updateIndex( index : IdIndex, model : Model ){\n    delete index[ model.previous( model.idAttribute ) ];\n\n    const { id } = model;\n    id == null || ( index[ id ] = model );\n}\n\n/***\n * In Collections, transactions appears only when\n * add remove or change events might be emitted.\n * reset doesn't require transaction.\n * \n * Transaction holds information regarding events, and knows how to emit them.\n * \n * Two major optimization cases.\n * 1) Population of an empty collection\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\n */\n\n\n// Transaction class. Implements two-phase transactions on object's tree.\n/** @private */ \nexport class CollectionTransaction implements Transaction {\n    // open transaction\n    constructor(    public object : CollectionCore,\n                    public isRoot : boolean,\n                    public added : Model[],\n                    public removed : Model[],\n                    public nested : Transaction[],\n                    public sorted : boolean ){}\n\n    // commit transaction\n    commit( initiator? : Transactional ){\n        const { nested, object } = this,\n              { _isDirty } = object;\n\n        // Commit all nested transactions...\n        for( let transaction of nested ){\n            transaction.commit( object );\n        }\n\n        if( object._aggregationError ){\n            logAggregationError( object, _isDirty );\n        }\n\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \n        for( let transaction of nested ){\n            trigger2( object, 'change', transaction.object, _isDirty );\n        }\n\n        // Notify listeners on attribute changes...\n        const { added, removed } = this;\n\n        // Trigger `add` events for both model and collection.\n        for( let record of added ){\n            trigger3( record, 'add', record, object, _isDirty );\n            trigger3( object, 'add', record, object, _isDirty );\n        }\n\n        // Trigger `remove` events for both model and collection.\n        for( let record of removed ){\n            trigger3( record, 'remove', record, object, _isDirty );\n            trigger3( object, 'remove', record, object, _isDirty );\n        }\n\n        if( this.sorted ){\n            trigger2( object, 'sort', object, _isDirty );\n        }\n\n        if( added.length || removed.length ){\n            trigger2( object, 'update', object, _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}\n\nexport function logAggregationError( collection : CollectionCore, options : TransactionOptions ){\n    collection._log( 'warn', 'Type-R:InvalidOwner', 'added records already have an owner and were cloned. Use explicit record.clone() to dismiss this warning.', collection._aggregationError, options.logger );\n    collection._aggregationError = void 0;\n}","import { Model } from '../model';\nimport { Transaction, transactionApi } from '../transactions';\nimport { addIndex, CollectionCore, CollectionOptions, CollectionTransaction, convertAndAquire, logAggregationError, sortElements, updateIndex } from './commons';\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\nexport interface AddOptions extends CollectionOptions {\n    at? : number \n}\n\n/** @private */\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\n    const isRoot = begin( collection ),\n          nested : Transaction[]= [];\n\n    var added = appendElements( collection, items, nested, options, merge );\n\n    if( added.length || nested.length ){\n        let needSort = sortOrMoveElements( collection, added, options );\n        if( markAsDirty( collection, options ) ){\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection, options );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\n/** @private */ \nfunction sortOrMoveElements( collection : CollectionCore, added : Model[], options : AddOptions ) : boolean {\n    let at = options.at;\n\n    // if `at` option is given, it overrides sorting option...\n    if( at != null ){\n        // Take an original collection's length. \n        const length = collection.models.length - added.length;\n\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\n        at = Number( at );\n        if( at < 0 ) at += length + 1;\n        if( at < 0 ) at = 0;\n        if( at > length ) at = length;\n\n        // Move added elements to desired position. In place.\n        moveElements( collection.models, at, added );\n        return false;\n    }\n\n    return sortElements( collection, options );\n}\n\n/** @private */\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\n        source[ j ] = source[ i ];\n    }\n\n    for( i = 0, j = at; i < added.length; i++, j++ ){\n        source[ j ] = added[ i ];\n    }\n}\n\n// append data to model and index\n/** @private */\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\n    var { _byId, models } = collection,\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\n        parse       = a_options.parse,\n        idAttribute = collection.model.prototype.idAttribute,\n        prevLength = models.length;\n\n    for( const item of a_items ){\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\n\n        if( model ){\n            if( merge && item !== model ){\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, a_options );\n                transaction && nested.push( transaction );\n\n                if( model.hasChanged( idAttribute ) ){\n                    updateIndex( _byId, model );\n                }\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, a_options );\n            models.push( model );\n            addIndex( _byId, model );\n        }\n    }\n\n    return models.slice( prevLength );\n}\n","import { Model } from '../model'\n\nexport type Predicate<R> = ( ( val : R, key? : number ) => boolean ) | Partial<R>;\n\n/**\n * Optimized array methods.\n */\nexport abstract class ArrayMixin<R extends Model> {\n    models : R[]\n    abstract get( modelOrId : string | Partial<R> ) : R;\n\n    /**\n     * Map and optionally filter the collection.\n     * @param mapFilter filter an element out if `undefined` is returned \n     * @param context optional `this` for `mapFilter`\n     */\n    map<T>( mapFilter : ( val : R, key? : number ) => T, context? : any ) : T[]{\n        const { models } = this,\n            { length } = models,\n            res = Array( length ),\n            fun = context ? mapFilter.bind( context ) : mapFilter;\n\n        for( var i = 0, j = 0; i < length; i++ ){\n            const val = fun( models[ i ], i );\n            val === void 0 || ( res[ j++ ] = val );\n        }\n\n        if( i !== j ){\n            res.length = j;\n        }\n\n        return res;\n    }\n\n    /**\n     * Iterate through the collection.\n     * @param context optional `this` for `iteratee`.\n     */\n    each<T>( fun : ( val : R, key? : number ) => any, context? : any ) : void {\n        const { models } = this,\n            { length } = models,\n            iteratee = context ? fun.bind( context ) : fun;\n\n        for( let i = 0; i < length; i++ ){\n            iteratee( models[ i ], i );\n        }\n    }\n\n    /**\n     * Iterate through collection optionally returning the value.\n     * @param doWhile break the loop if anything but `undefined` is returned, and return this value.\n     * @param context optional `this` for `doWhile`.\n     */\n    firstMatch<T>( doWhile : ( val : R, key? : number ) => T ) : T\n    firstMatch<T, C>( doWhile : ( this : C, val : R, key? : number ) => T, context : C ) : T\n    firstMatch<T>( doWhile : ( val : R, key? : number ) => T, context? : any ) : T {\n        const { models } = this,\n            { length } = models,\n            iteratee = context ? doWhile.bind( context ) : doWhile;\n\n        for( let i = 0; i < length; i++ ){\n            const res = iteratee( models[ i ], i );\n            if( res !== void 0 ) return res;\n        }\n    }\n\n    /**\n     * Proxy for the `array.reduce()`\n     * @param iteratee \n     */\n    reduce<T>( iteratee : (previousValue: R, currentValue: R, currentIndex?: number ) => R ) : R\n    reduce<T>( iteratee : (previousValue: T, currentValue: R, currentIndex?: number ) => T, init? : any ) : T\n    reduce<T>( iteratee : (previousValue: any, currentValue: any, currentIndex?: number ) => any, init? : any ) : T | R {\n        return init === void 0 ? this.models.reduce( iteratee ) : this.models.reduce( iteratee, init );\n    }\n\n    // Slice out a sub-array of models from the collection.\n    slice( begin? : number, end? : number ) : R[] {\n        return this.models.slice( begin, end );\n    }\n  \n    indexOf( modelOrId : string | Partial<R> ) : number {\n        return this.models.indexOf( this.get( modelOrId ) );\n    }\n\n    includes( idOrObj : string | Partial<R> ) : boolean {\n        return Boolean( this.get( idOrObj ) );\n    }\n\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\n        const fun = toPredicateFunction( iteratee );\n        return this.map( m => fun( m ) ? m : void 0, context );\n    }\n\n    find( iteratee : Predicate<R>, context? : any ) : R {\n        const fun = toPredicateFunction( iteratee );\n        return this.firstMatch( m => fun( m ) ? m : void 0, context );\n    }\n\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\n        return Boolean( this.find( iteratee, context ) );\n    }\n\n    forEach( iteratee : ( val : R, key? : number ) => void, context? : any ) : void {\n        this.each( iteratee, context );\n    }\n\n    values() : IterableIterator<R> {\n        return this.models.values();\n    }\n\n    entries() : IterableIterator<[ number, R ]>{\n        return this.models.entries();\n    }\n\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\n        const fun = toPredicateFunction( iteratee );\n        return this.firstMatch( m => fun( m ) ? void 0 : false, context ) === void 0;\n    }\n\n    pluck<K extends keyof R>( key : K ) : R[K][] {\n        return this.map( model => model[ key ] );\n    }\n\n    first() : R { return this.models[ 0 ]; }\n\n    last() : R { return this.models[ this.models.length - 1 ]; }\n\n    at( a_index : number ) : R {\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \n        return this.models[ index ];\n    }\n}\n\nconst noOp = x => x;\n\nfunction toPredicateFunction<R>( iteratee : Predicate<R> ){\n    if( iteratee == null ) return noOp;\n\n    switch( typeof iteratee ){\n        case 'function' : return iteratee;\n        case 'object' :\n            const keys = Object.keys( iteratee );\n            \n            return x => {\n                for( let key of keys ){\n                    if( iteratee[ key ] !== x[ key ] )\n                        return false;\n                }\n\n                return true;\n            }\n        default : throw new Error( 'Invalid iteratee' );\n    }\n}","/*************\n * Remove items from collections.\n * \n * Cannot be a part of two-phase transaction on object tree.\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\n *\n * Implemented with low-level API. \n * Most frequent operation - single element remove. Thus, it have the fast-path.\n */\n\nimport { eventsApi } from '@type-r/mixture';\nimport { Model } from '../model';\nimport { transactionApi, TransactionOptions } from '../transactions';\nimport { CollectionCore, CollectionTransaction, free, removeIndex } from './commons';\n\nconst { trigger2, trigger3 } = eventsApi,\n    { markAsDirty, begin, commit } = transactionApi;\n\n/** @private */\nexport function removeOne( collection : CollectionCore, el : Model | {} | string, options : TransactionOptions ) : Model {\n    var model : Model = collection.get( el );\n\n    if( model ){\n        const isRoot = begin( collection ),\n              models = collection.models;\n\n        // Remove model form the collection. \n        models.splice( models.indexOf( model ), 1 );\n        removeIndex( collection._byId, model );\n        \n        // Mark transaction as dirty. \n        const notify = markAsDirty( collection, options );\n\n        // Send out events.\n        if( notify ){\n            trigger3( model, 'remove', model, collection, options );\n            trigger3( collection, 'remove', model, collection, options );\n        } \n\n        free( collection, model, options.unset );\n\n        notify && trigger2( collection, 'update', collection, options );\n\n        // Commit transaction.\n        isRoot && commit( collection );\n\n        return model;\n    }\n};\n\n/** Optimized for removing many elements\n * 1. Remove elements from the index, checking for duplicates\n * 2. Create new models array matching index\n * 3. Send notifications and remove references\n */\n\n/** @private */\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\n    if( removed.length ){\n        const isRoot = begin( collection );\n\n        _reallocate( collection, removed.length );\n\n        if( markAsDirty( collection, options ) ){\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\n            transaction.commit();\n        }\n        else{\n            // Commit transaction.\n            isRoot && commit( collection );\n        }\n    }\n\n    return removed;\n};\n\n// remove models from the index...\n/** @private */\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\n    var removed = Array( toRemove.length ),\n        _byId   = collection._byId;\n\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\n        var model = collection.get( toRemove[ i ] );\n        if( model ){\n            removed[ j++ ] = model;\n            removeIndex( _byId, model );\n            free( collection, model, unset );\n        }\n    }\n\n    removed.length = j;\n\n    return removed;\n}\n\n// Allocate new models array removing models not present in the index.\n/** @private */\nfunction _reallocate( collection, removed ){\n    var prev   = collection.models,\n        models = collection.models = Array( prev.length - removed ),\n        _byId = collection._byId;\n\n    for( var i = 0, j = 0; i < prev.length; i++ ){\n        var model = prev[ i ];\n\n        if( _byId[ model.cid ] ){\n            models[ j++ ] = model;\n        }\n    }\n\n    models.length = j;\n}","import { Model } from '../model';\nimport { Transaction, transactionApi } from '../transactions';\nimport { addIndex, CollectionCore, CollectionOptions, CollectionTransaction, convertAndAquire, Elements, free, freeAll, IdIndex, logAggregationError, sortElements } from './commons';\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\n/** @private */\nconst silentOptions = { silent : true };\n\n/** @private */\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\n    const isRoot = begin( collection );\n\n    const added = _reallocateEmpty( collection, items, options );\n\n    if( added.length ){\n        const needSort = sortElements( collection, options );\n\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\n            // 'added' is the reference to this.models. Need to copy it.\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection, options );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n/** @private */\nexport function setTransaction( collection, items, options ){\n    const isRoot = begin( collection ),\n          nested = [];\n\n    var previous = collection.models,\n        added    = _reallocate( collection, items, nested, options );\n\n    const reusedCount = collection.models.length - added.length,\n          removed = reusedCount < previous.length ? (\n                        reusedCount ? _garbageCollect( collection, previous ) :\n                                        freeAll( collection, previous )\n                    ) : [];                    \n    \n    const addedOrChanged = nested.length || added.length,\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\n\n    if( addedOrChanged || removed.length || sorted ){\n        if( markAsDirty( collection, options ) ){ \n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection, options );\n    }\n\n    isRoot && commit( collection );\n};\n\n// Remove references to all previous elements, which are not present in collection.\n// Returns an array with removed elements.\n/** @private */\nfunction _garbageCollect( collection : CollectionCore, previous : Model[] ) : Model[]{\n    const { _byId }  = collection,\n          removed = [];\n\n    // Filter out removed models and remove them from the index...\n    for( let record of previous ){\n        if( !_byId[ record.cid ] ){\n            removed.push( record );\n            free( collection, record );\n        }\n    }\n\n    return removed;\n}\n\n// reallocate model and index\n/** @private */\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\n    var models      = Array( source.length ),\n        _byId : IdIndex = {},\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\n        _prevById   = collection._byId,\n        prevModels  = collection.models, \n        idAttribute = collection.model.prototype.idAttribute,\n        toAdd       = [],\n        orderKept   = true;\n\n    // for each item in source set...\n    for( var i = 0, j = 0; i < source.length; i++ ){\n        var item  = source[ i ],\n            model : Model = null;\n\n        if( item ){\n            var id  = item[ idAttribute ],\n                cid = item.cid;\n\n            if( _byId[ id ] || _byId[ cid ] ) continue;\n\n            model = _prevById[ id ] || _prevById[ cid ];\n        }\n\n        if( model ){\n            if( merge && item !== model ){\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\n\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, options );\n                transaction && nested.push( transaction );\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, options );\n            toAdd.push( model );\n        }\n\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    collection.models   = models;\n    collection._byId    = _byId;\n\n    if( !orderKept ) options.sorted = true;\n\n    return toAdd;\n}\n\n/** @private */\nfunction _reallocateEmpty( self, source, options ){\n    var len         = source ? source.length : 0,\n        models      = Array( len ),\n        _byId : IdIndex = {},\n        idAttribute = self.model.prototype.idAttribute;\n\n    for( var i = 0, j = 0; i < len; i++ ){\n        var src = source[ i ];\n\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\n            continue;\n        }\n\n        var model = convertAndAquire( self, src, options );\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    self._byId    = _byId;\n\n    return self.models = models;\n}","import { Linked } from '@linked/value';\nimport { define, definitions, EventMap, eventsApi, EventsDefinition, Logger, logger, LogLevel, Mixable, mixinRules, mixins, TheType } from '@type-r/mixture';\nimport { IOPromise, startIO } from '../io-tools';\nimport { AggregatedType, Model, SharedType, shared } from '../model';\nimport { CloneOptions, ItemsBehavior, Transactional, TransactionalDefinition, transactionApi, TransactionOptions } from '../transactions';\nimport { AddOptions, addTransaction } from './add';\nimport { ArrayMixin } from './arrayMethods';\nimport { CollectionCore, CollectionTransaction, Elements, free, sortElements, updateIndex } from './commons';\nimport { removeMany, removeOne } from './remove';\nimport { emptySetTransaction, setTransaction } from './set';\n\nconst { trigger2 } = eventsApi,\n    { begin, commit, markAsDirty } = transactionApi;\n\nlet _count = 0;\n\nexport type GenericComparator = string | ( ( x : Model ) => number ) | ( ( a : Model, b : Model ) => number ); \n\nexport interface CollectionOptions extends TransactionOptions {\n    comparator? : GenericComparator\n    model? : typeof Model\n}\n\nexport interface CollectionDefinition extends TransactionalDefinition {\n    model? : typeof Model,\n    itemEvents? : EventsDefinition\n    _itemEvents? : EventMap\n}\n\nclass CollectionRefsType extends SharedType {\n    static defaultValue = [];\n}\n\nexport interface CollectionConstructor<R extends Model = Model > extends TheType<typeof Collection> {\n    new ( records? : ElementsArg<R>, options?: CollectionOptions ) : Collection<R>\n    prototype : Collection<R>\n    Refs : CollectionConstructor<R>\n};\n\ntype CollectionOf<M extends typeof Model> = M['Collection'] extends CollectionConstructor<InstanceType<M>> ? M['Collection'] : CollectionConstructor<InstanceType<M>>;\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'c',\n    model : Model,\n    _changeEventName : 'changes',\n    _aggregationError : null\n})\n@mixins( ArrayMixin )\n@definitions({\n    comparator : mixinRules.value,\n    model : mixinRules.protoValue,\n    itemEvents : mixinRules.merge\n})\nexport class Collection< R extends Model = Model> extends Transactional implements CollectionCore, Iterable<R> {\n    /** @internal */\n    _shared : number\n    /** @internal */\n    _aggregationError : R[]\n\n    /**\n     * EXPERIMENTAL notation to extract proper collection type from the model in TypeScript.\n     * \n     * attrName : Collection.of( User );\n     * \n     * const users = new ( Collection.of( User ) )\n     */\n    static of<M extends typeof Model>( Ctor : M ) : CollectionOf<M> {\n        return Ctor.Collection as any;\n    }\n\n    /**\n     * EXPERIMENTAL notation to extract proper collection type from the model in TypeScript.\n     * \n     * attrName : Collection.ofRefs( User );\n     * \n     * const users = new ( Collection.ofRefs( User ) )\n     */\n    static ofRefs<M extends typeof Model>( Ctor : M ) : CollectionOf<M> {\n        return Ctor.Collection.Refs as any;\n    }\n\n\n    static Subset : typeof Collection\n    static Refs : any\n    static refsTo = shared;\n\n    /** @internal */\n    static _SubsetOf : typeof Collection\n    \n    createSubset( models : ElementsArg<R>, options? : CollectionOptions) : Collection<R>{\n        throw new ReferenceError( 'Failed dependency injection' )\n    }\n\n    static onExtend( BaseClass : typeof Transactional ){\n        // Cached subset collection must not be inherited.\n        const Ctor = this;\n        this._SubsetOf = null;\n\n        function RefsCollection( a, b, listen? ){\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\n        }\n\n        Mixable.mixins.populate( RefsCollection );\n        \n        RefsCollection.prototype = this.prototype;\n        RefsCollection._metatype = CollectionRefsType;\n\n        this.Refs = this.Subset = <any>RefsCollection;\n\n        Transactional.onExtend.call( this, BaseClass );\n    }\n    \n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\n        if( definition.itemEvents ){\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\n            eventsMap.addEventsMap( definition.itemEvents );\n            this.prototype._itemEvents = eventsMap;\n        }\n\n        if( definition.comparator !== void 0 ) this.prototype.comparator = definition.comparator;\n\n        Transactional.onDefine.call( this, definition );\n    }\n    \n    /** @internal */\n    _itemEvents : EventMap\n\n    /***********************************\n     * Core Members\n     */\n    // Array of the records\n    models : R[]\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    /** @internal */\n    get __inner_state__(){ return this.models; }\n\n    // Index by id and cid\n    /** @internal */\n    _byId : { [ id : string ] : R }\n\n    set comparator( x : GenericComparator ){\n\n        switch( typeof x ){\n            case 'string' :\n                this._comparator = ( a, b ) => {\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\n                    if( aa === bb ) return 0;\n                    return aa < bb ? -1 : + 1;\n                } \n                break;\n            case 'function' :\n                if( x.length === 1 ){\n                    this._comparator = ( a, b ) => {\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\n                        if( aa === bb ) return 0;\n                        return aa < bb ? -1 : + 1;\n                    }\n                }\n                else{\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\n                }\n                break;\n                \n            default :\n                this._comparator = null;\n        }\n    }\n    \n    // TODO: Improve typing\n    getStore() : Transactional {\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\n    }\n\n    /** @internal */\n    _store : Transactional\n\n    get comparator(){ return this._comparator; }\n\n    /** @internal */\n    _comparator : ( a : R, b : R ) => number\n\n    /** @internal */\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\n        // Ignore updates from nested transactions.\n        if( initiator === this ) return;\n\n        const { idAttribute } = this;\n\n        if( record.hasChanged( idAttribute ) ){\n            updateIndex( this._byId, record );\n        }\n\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            // Forward change event from the record.\n            trigger2( this, 'change', record, options )\n        }\n\n        isRoot && commit( this );\n    }\n\n    get( objOrId : string | { id? : string, cid? : string } ) : R {\n        if( objOrId == null ) return;\n\n        if( typeof objOrId === 'object' ){\n            const id = objOrId[ this.idAttribute ];\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ objOrId.cid ];\n        }\n        else{\n            return this._byId[ objOrId ];\n        }        \n    }\n\n    [ Symbol.iterator ]() : IterableIterator<R> {\n        return this.models[ Symbol.iterator ]();\n    }\n\n    // Loop through the members in the scope of transaction.\n    // Transactional version of each()\n    updateEach( iteratee : ( val : R, key? : number ) => void ){\n        const isRoot = transactionApi.begin( this );\n        this.each( iteratee );\n        isRoot && transactionApi.commit( this );\n    }\n\n    /** @internal */\n    _validateNested( errors : {} ) : number {\n        // Don't validate if not aggregated.\n        if( this._shared ) return 0;\n\n        let count = 0;\n\n        this.each( record => {\n            const error = record.validationError;\n            if( error ){\n                errors[ record.cid ] = error;\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    model : typeof Model\n\n    // idAttribute extracted from the model type.\n    idAttribute : string\n\n    constructor( records? : ElementsArg<R>, options : CollectionOptions = {}, shared? : number ){\n        super( _count++ );\n        this.models = [];\n        this._byId = {};\n        \n        this.comparator  = this.comparator;\n\n        if( options.comparator !== void 0 ){\n            this.comparator = options.comparator;\n            options.comparator = void 0;\n        }\n        \n        this.model       = this.model;\n        \n        if( options.model ){\n            this.model = options.model;\n            options.model = void 0;\n        }\n\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\n\n        this._shared = shared || 0;\n\n        if( records ){\n            const elements = toElements( this, records, options );\n            emptySetTransaction( this, elements, options, true );\n        }\n\n        this.initialize.apply( this, arguments );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    initialize(){}\n\n    // Deeply clone collection, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n        \n        return copy;\n    }\n\n    toJSON( options? : object ) : any {\n        return this.map( model => model.toJSON( options ) );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( elements : ElementsArg<R> = [], options : TransactionOptions = {} ) : this {\n        if( (<any>options).add !== void 0 ){\n            this._log( 'warn', \"Type-R:InvalidOption\", \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\n        }\n\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\n        if( options.reset ){\n            this.reset( elements, options )\n        }\n        else{\n            const transaction = this._createTransaction( elements, options );\n            transaction && transaction.commit();\n        } \n\n        return this;    \n    }\n\n        /**\n     * Enable or disable live updates.\n     * \n     * `true` enables full collection synchronization.\n     * `false` cancel live updates.\n     * `json => true | false` - filter updates\n     */\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<this> {\n        if( enabled ){\n            this.liveUpdates( false );\n\n            const filter = typeof enabled === 'function' ? enabled : () => true;\n\n            this._liveUpdates = {\n                updated : json => {\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\n                },\n\n                removed : id => this.remove( id )\n            };\n\n            return this.getEndpoint().subscribe( this._liveUpdates, this ).then( () => this );\n        }\n        else{\n            if( this._liveUpdates ){\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\n                this._liveUpdates = null;\n            }\n\n            // TODO: Return the resolved promise.\n        }\n    }\n\n    /** @internal */\n    _liveUpdates : object\n\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<this> {\n        const options = { parse : true, ...a_options },\n            endpoint = this.getEndpoint();\n\n        return startIO(\n            this,\n            endpoint.list( options, this ),\n            options,\n\n            json => {\n                let result : any = this.set( json, { parse : true, ioMethod : 'fetch', ...options } as TransactionOptions );\n                \n                if( options.liveUpdates ){\n                    result = this.liveUpdates( options.liveUpdates );\n                }\n\n                return result;\n            }\n        );\n    }\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        const aggregated = !this._shared;\n\n        for( let record of this.models ){\n            free( this, record );\n\n            if( aggregated ) record.dispose();\n        }\n\n        this.liveUpdates( false );\n\n        super.dispose();\n    }\n\n    reset( a_elements? : ElementsArg<R>, options : TransactionOptions = {} ) : R[] {\n        const isRoot = begin( this ),\n              previousModels = this.models;\n\n        // Make all changes required, but be silent.\n        if( a_elements ){            \n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\n        }\n        else{\n            this._byId = {};\n            this.models = [];\n        }\n\n        markAsDirty( this, options );\n\n        options.silent || trigger2( this, 'reset', this, { previousModels, ...options } );\n\n        // Dispose models which are not in the updated collection.\n        const { _byId } = this;\n        \n        for( let toDispose of previousModels ){\n            _byId[ toDispose.cid ] || free( this, toDispose );\n        }\n\n        isRoot && commit( this );\n        return this.models;\n    }\n\n    // Add elements to collection.\n    add( a_elements : ElementsArg<R> , options : AddOptions = {} ){\n        const elements = toElements( this, a_elements, options ),\n              transaction = this.models.length ?\n                    addTransaction( this, elements, options ) :\n                    emptySetTransaction( this, elements, options );\n\n        if( transaction ){\n            transaction.commit();\n            return transaction.added;\n        }\n    }\n\n    // Remove elements. \n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\n        if( recordsOrIds ){\n            return Array.isArray( recordsOrIds ) ?\n                        removeMany( this, recordsOrIds, options ) as R[]:\n                        removeOne( this, recordsOrIds, options ) as R;\n        }\n\n        return [];\n    }\n\n    $includes( idOrObj : R ) : Linked<boolean> {\n        return new LinkedIncludes( this, idOrObj );\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.   \n    /** @internal */\n    _createTransaction( a_elements : ElementsArg<R>, options : TransactionOptions = {} ) : CollectionTransaction | void {\n        const elements = toElements( this, a_elements, options );\n\n        if( this.models.length ){\n            return options.remove === false ?\n                        addTransaction( this, elements, options, true ) :\n                        setTransaction( this, elements, options );\n        }\n        else{\n            return emptySetTransaction( this, elements, options );\n        }\n    }\n\n    /** @internal */\n    static _metatype = AggregatedType;\n\n    /***********************************\n     * Collection manipulation methods\n     */\n\n    sort( options : TransactionOptions = {} ) : this {\n        if( sortElements( this, options ) ){\n            const isRoot = begin( this );\n            \n            if( markAsDirty( this, options ) ){\n                trigger2( this, 'sort', this, options );\n            }\n\n            isRoot && commit( this );\n        }\n\n        return this;\n    }\n\n    // Remove and return given model.\n    unset( modelOrId : R | string, options? ) : R {\n        const value = this.get( modelOrId );\n        this.remove( modelOrId, { unset : true, ...options } );\n        return value;\n    }\n\n    modelId( attrs : {} ) : any {\n        return attrs[ this.model.prototype.idAttribute ];\n    }\n\n    // Toggle model in collection.\n    toggle( model : R, a_next? : boolean ) : boolean {\n        var prev = Boolean( this.get( model ) ),\n            next = a_next === void 0 ? !prev : Boolean( a_next );\n\n        if( prev !== next ){\n            if( prev ){\n                this.remove( model );\n            }\n            else{\n                this.add( model );\n            }\n        }\n\n        return next;\n    }\n\n    /** @internal */\n    _log( level : LogLevel, topic : string, text : string, value : object, a_logger? : Logger ) : void {\n        ( a_logger || logger ).trigger( level, topic, `${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\n            Argument : value,\n            'Attributes spec' : this.model.prototype._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Collection';\n    }\n\n    /***********************************\n     * Proxied Array methods\n     */\n\n    get length() : number { return this.models.length; }\n\n    // Add a model to the end of the collection.\n    push(model : ElementsArg<R>, options? : CollectionOptions ) {\n        return this.add(model, { at: this.length, ...options });\n    }\n\n    // Remove a model from the end of the collection.\n    pop( options? : CollectionOptions ) : R {\n        var model = this.at(this.length - 1);\n        this.remove(model, { unset : true, ...options });\n        return model;\n    }\n\n    // Add a model to the beginning of the collection.\n    unshift(model : ElementsArg<R>, options? : CollectionOptions ) {\n        return this.add(model, { at: 0, ...options });\n    }\n  \n    // Remove a model from the beginning of the collection.\n    shift( options? : CollectionOptions ) : R {\n        const model = this.at(0);\n        this.remove( model, { unset : true, ...options } );\n        return model;\n    }\n}\n\n\nexport interface Collection<R extends Model> extends ArrayMixin<R>{}\n\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\n\nexport type ElementsArg<R = Model> = Partial<R> | Partial<R>[]\n\n// TODO: make is safe for parse to return null (?)\nfunction toElements<R extends Model>( collection : Collection<R>, elements : ElementsArg<R>, options : CollectionOptions ) : Elements {\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \n    return Array.isArray( parsed ) ? parsed : [ parsed ];\n}\n\nModel.Collection = Collection;\n\nclass LinkedIncludes extends Linked<boolean> {\n    constructor(\n        private collection,\n        private model : Model ){\n            super( collection.get( model ) )\n    }\n\n    set( x : boolean ) : void {\n        this.collection.toggle( this.model );\n    }\n}\n","import { Collection } from '../collection';\nimport { Model } from '../model';\nimport { CompiledReference } from '../traversable';\n\nexport type CollectionReference = ( () => Collection ) | Collection | string; \n\n/** @private */\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Model ) => Collection {\n    switch( typeof collectionRef ){\n        case 'function' :\n            return root => (<any>collectionRef).call( root );\n        case 'object'   :\n            return () => <Collection>collectionRef;\n        case 'string'   :\n            const { resolve } = new CompiledReference( <string>collectionRef );\n            return resolve;\n    }\n}","import { AnyType, ChainableAttributeSpec, Model } from '../model';\nimport { CollectionReference, parseReference } from './commons';\n\n\n/********\n * Reference to model by id.\n * \n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\n * with a real model.\n * \n * No model changes are detected and counted as owner's change. That's intentional.\n */\n\n/** @private */\ntype ModelRefValue = Model | string;\n\n/** @private */\nclass ModelRefType extends AnyType {\n    // It is always serialized as an id, whenever it's resolved or not. \n    toJSON( value : ModelRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Wne \n    clone( value : ModelRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Model refs by id are equal when their ids are equal.\n    isChanged( a : ModelRefValue, b : ModelRefValue){\n        var aId = a && ( (<Model>a).id == null ? a : (<Model>a).id ),\n            bId = b && ( (<Model>b).id == null ? b : (<Model>b).id );\n\n        return aId !== bId;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n}\n\nfunction theMemberOf<R extends typeof Model>( this : void, masterCollection : CollectionReference, T? : R ) : ChainableAttributeSpec<R> {\n    const getMasterCollection = parseReference( masterCollection );\n\n    const typeSpec = new ChainableAttributeSpec<R>({\n        value : null,\n        _metatype : ModelRefType\n    });\n    \n    return typeSpec\n        .get( function( objOrId : ModelRefValue, name : string ) : Model {\n            if( typeof objOrId === 'object' ) return objOrId;\n\n            // So, we're dealing with an id reference. Resolve it.\n            const collection = getMasterCollection( this );\n            let   record : Model = null;\n\n            // If master collection exists and is not empty...\n            if( collection && collection.length ){\n                // Silently update attribute with record from this collection.\n                record = collection.get( objOrId ) || null;\n                this.attributes[ name ] = record;\n\n                // Subscribe for events manually. delegateEvents won't be invoked.\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\n            }\n\n            return record;\n        });\n}\n\nexport { theMemberOf as memberOf }\n\ndeclare module '../model' {\n    namespace Model {\n        export const memberOf : <R extends typeof Model>( this : R, masterCollection : CollectionReference ) => ChainableAttributeSpec<R>;\n    }\n}\n\n( Model as any ).memberOf = theMemberOf;","import { Collection, CollectionConstructor, ElementsArg, CollectionOptions } from '../collection';\nimport { define, tools } from '@type-r/mixture';\nimport { AggregatedType, ChainableAttributeSpec, Model, type } from '../model';\nimport { ItemsBehavior, transactionApi } from '../transactions';\nimport { CollectionReference, parseReference } from './commons';\n\n\ntype ModelsIds = ( string | number )[];\n\n// TODO: Change the last parameter to be the Model constructor. Extract the proper Collection type.\nexport function subsetOf<X extends CollectionConstructor<R>, R extends Model>( this : void, masterCollection : CollectionReference, T? : X ) : ChainableAttributeSpec<SubsetCollectionConstructor<R>>{\n    const CollectionClass = T || Collection,\n        // Lazily define class for subset collection, if it's not defined already...\n        SubsetOf = CollectionClass._SubsetOf || ( CollectionClass._SubsetOf = defineSubsetCollection( CollectionClass as any ) as any ),\n        getMasterCollection = parseReference( masterCollection );\n\n    return type( SubsetOf ).get(\n        function( refs ){\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\n            return refs;\n        }\n    );\n}\n\n\ntype subsetOfType = typeof subsetOf;\n\ndeclare module \"../collection\" {\n    namespace Collection {\n        export const subsetOf : subsetOfType;\n    }    \n}\n\n( Collection as any ).subsetOf = subsetOf;\n\n\nCollection.prototype.createSubset = function<M extends Model>( this : Collection<M>, models : any, options ) : SubsetCollection<M> {\n    const SubsetOf = subsetOf( this, this.constructor as any ).options.type,\n          subset   = new SubsetOf( models, options );\n        \n    subset.resolve( this );\n    return subset as any;\n}\n\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\n\nfunction defineSubsetCollection( CollectionClass : typeof Collection ) {\n    @define class SubsetOfCollection extends CollectionClass {\n        refs : any[];\n        resolvedWith : Collection = null;\n\n        _metatype : AggregatedType\n\n        get __inner_state__(){ return this.refs || this.models; }\n\n        constructor( recordsOrIds?, options? ){\n            super( [], options, subsetOfBehavior );\n            this.refs = toArray( recordsOrIds );\n        }\n\n        // Remove should work fine as it already accepts ids. Add won't...\n        add( a_elements, options = {} ){\n            const { resolvedWith } = this,\n                    toAdd = toArray( a_elements );\n            \n            if( resolvedWith ){\n                // If the collection is resolved already, everything is simple.\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\n            }\n            else{\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                if( toAdd.length ){\n                    const isRoot = transactionApi.begin( this );\n\n                    // Save elements to resolve in future...\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\n\n                    transactionApi.markAsDirty( this, options );\n\n                    // And throw the 'changes' event.\n                    isRoot && transactionApi.commit( this );\n                }\n            }\n        }\n\n        reset( a_elements?, options = {} ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options ) as any || [];\n        }\n\n        _createTransaction( a_elements, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options );\n        }\n\n        // Serialized as an array of model ids.\n        toJSON() : ModelsIds {\n            return this.refs ?\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\n                this.models.map( model => model.id );\n        }\n\n        // Subset is always valid.\n        _validateNested(){ return 0; }\n\n        get length() : number {\n            return this.models.length || ( this.refs ? this.refs.length : 0 );\n        }\n\n        // Must be shallow copied on clone.\n        clone( owner? ){\n            var Ctor = (<any>this).constructor,\n                copy = new Ctor( [], {\n                    model : this.model,\n                    comparator : this.comparator\n                });\n\n            if( this.resolvedWith ){\n                // TODO: bug here. \n                copy.resolvedWith = this.resolvedWith;\n                copy.refs = null;\n                copy.reset( this.models, { silent : true } );\n            }\n            else{\n                copy.refs = this.refs.slice();\n            }\n\n            return copy;\n        }\n\n        // Clean up the custom parse method possibly defined in the base class.\n        parse( raw : any ) : Model[] {\n            return raw;\n        }\n\n        resolve( collection : Collection ) : this {\n            if( collection && collection.length ){\n                this.resolvedWith = collection;\n\n                if( this.refs ){\n                    this.reset( this.refs, { silent : true } );\n                    this.refs = null;\n                }\n            }\n\n            return this;\n        }\n\n        getModelIds() : ModelsIds { return this.toJSON(); }\n\n        toggle( modelOrId : any, val : boolean ) : boolean {\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\n        }\n\n        addAll() : Model[] {\n            if( this.resolvedWith ){\n                this.set( this.resolvedWith.models );\n                return this.models;\n            }\n\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\n        }\n\n        toggleAll() : Model[] {\n            return this.length ? this.reset() : this.addAll();\n        }\n    }\n\n    // Clean up all custom item events to prevent memory leaks.\n    SubsetOfCollection.prototype._itemEvents = void 0;\n\n    return SubsetOfCollection;\n}\n\nexport interface SubsetCollection<M extends Model> extends Collection<M>{\n    getModelIds() : string[]\n    toggle( modelOrId : string | M, val : boolean ) : boolean\n    addAll() : M[]\n    toggleAll() : M[]\n    resolve( baseCollection : Collection<M> ) : this\n}\n\nexport interface SubsetCollectionConstructor<R extends Model = Model > {\n    new ( records? : ElementsArg<R> | string[], options?: CollectionOptions ) : SubsetCollection<R>\n    prototype : SubsetCollection<R>\n};\n\nfunction resolveRefs( master, elements ){\n    const records = [];\n    \n    for( let el of elements ){\n        const record = master.get( el );\n        if( record ) records.push( record );\n    }\n\n    return records;\n}\n\nfunction delaySet( collection, elements, options ) : void {\n    if( tools.notEqual( collection.refs, elements ) ){\n        const isRoot = transactionApi.begin( collection );\n\n        // Save elements to resolve in future...\n        collection.refs = elements.slice();\n\n        transactionApi.markAsDirty( collection, options );\n        \n        // And throw the 'changes' event.\n        isRoot && transactionApi.commit( collection );\n    }\n}\n\nfunction toArray( elements ){\n    return elements ? ( \n        Array.isArray( elements ) ? elements : [ elements ]\n    ) : [];\n}","import { Model } from '../model';\nimport { Transactional } from '../transactions';\n\nlet _store : Store = null;\n\nexport class Store extends Model {\n    getStore() : Store { return this; }\n \n    // delegate item lookup to owner, and to the global store if undefined\n    get( name : string ) : any {\n        // Lookup for resource in the current store. \n        let local = this[ name ];\n\n        // If something is found or it's the global store, return result.\n        if( local || this === this._defaultStore ) return local;\n\n        // Forward failed lookup to owner or global store.\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \n    }\n\n    static get global(){ return _store; }\n    static set global( store : Store ){\n        if( _store ){\n          _store.dispose();\n        }\n\n        Transactional.prototype._defaultStore = _store = store;\n    }\n}\n\nStore.global = new Store();","// Dummy polyfill to prevent exception in IE.\nif( typeof Symbol === 'undefined' ){\n    Object.defineProperty( window, 'Symbol', { value : { iterator : 'Symbol.iterator' }, configurable : true  });\n}\n\nimport { Events, Mixable as Class } from '@type-r/mixture';\n// Define synonims for NestedTypes backward compatibility.\nimport { Model } from './model';\n\n/**\n * Export everything \n */\nexport * from './collection';\nexport * from './io-tools';\nexport * from '@type-r/mixture';\nexport * from './model';\nexport * from './relations';\nexport * from './transactions';\nexport { Model as Record, Class };\nexport { Linked } from '@linked/value'\n\nexport const { on, off, trigger, once, listenTo, stopListening, listenToOnce } = <any>Events;\n\n/** Wrap model or collection method in transaction. */\nexport function transaction< F extends Function >( method : F ) : F {\n    return <any>function( ...args ){\n        let result;\n        \n        this.transaction( () => {\n            result = method.apply( this, args );\n        });\n        \n        return result;\n    }\n}"],"names":["defaults","dest","source","name","hasOwnProperty","arguments","length","i","other","isValidJSON","value","proto","Object","getPrototypeOf","prototype","Array","every","getBaseClass","Class","constructor","isEmpty","obj","key","some","fun","ArrayProto","arr","result","someArray","someObject","predicate","x","omit","discard","transform","assign","once","func","memo","first","apply","this","DateProto","Date","ObjectProto","notEqual","a","b","protoA","arraysNotEqual","keysA","keys","objectsNotEqual","HashProto","create","hashMap","hash","compare","av","valueOf","bv","definition","_i","names","names_1","_a","name_1","prop","desc","getOwnPropertyDescriptor","o","EventMap","map","handlers","concat","addEvent","split","eventSplitter","getBubblingHandler","callback","name_2","push","EventDescriptor","target","event_1","on","event_2","off","slice","addEventsMap","handler","_bubblingHandlers","event","c","d","e","trigger5","trigger3","trigger2","context","next","listOff","_events","filteredHead","prev","head","ev","_callback","listSend3","call","EventHandler","once_1","_once","name_3","strings","api","events","test","self","queue","all","listSend2","listSend4","listSend5","f","listSend6","extendStatics","setPrototypeOf","__proto__","p","__extends","__","__assign","t","s","n","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","r","Reflect","decorate","defineProperty","Mixable","protoProps","staticProps","BaseClass","mixins","defineMixin","merge","mergeObject","getStaticDefinitions","onDefine","definitions","mergeInheritedMembers","spec","statics","TheSubclass","tslib_1.__extends","predefine","define","Constructor","__super__","MixinsState","get","populate","onExtend","ClassOrDefinition","Ctor","rules","definitionRules","definitionDecorator","definitionKey","rule","appliedMixins","mixins_1","mixin","isArray","sourceMixins","mergeRules","ctors","ctors_1","unshift","object","ignore","dontMix","getOwnPropertyNames","forEachOwnProp","sourceProp","_this","assignProperty","mixinRules","protoValue","baseProto","resolveRule","function","caller","list","destProp","configurable","pipe","classFirst","classLast","_idCount","uniqueId","Messenger","localEvents","_localEvents","properties","eventsMap","defineProperties","toPropertyDescriptor","addReference","a_source","_listeningTo","removeAll","second","cid","_disposed","stopListening","initialize","Events","listener","isProduction","process","env","NODE_ENV","logEvents","Logger","level","filter","topic","msg","props","args","toString","console","Error","counter","_super","window","something","__inner_state__","body","join","JSON","stringify","logger","logEvents_1","logToConsole","throwingLogger","throwOn","log","trigger","bind","startIO","promise","options","thenDo","abortIO","_ioPromise","then","resp","triggerAndBubble","catch","err","abort","eventSource","collection","referenceMask","reference","splitTail","path","match","substr","tail","pop","local","resolve","Function","shift","resolveReference","root","action","skip","getStore","getOwner","ValidationError","iteratee","error","nested","each","eachError","_validateNested","validate","helpers","arrayHelpers","objectHelpers","dummyHelpers","Linked","clone","link","remove","iterator","mapped","element","at","array","splice","j","y","set","ClonedValueLink","checked","onChange","Boolean","update","truthyValue","EqualsValueLink","defaultValue","EnabledValueLink","ContainsRef","_","PropValueLink","links","_value$","whenValid","defaultError","CustomValueLink","unwrap","sourceKey","trim","sourceVal","parent","nextValue","el","removeAt","field","values","ItemsBehavior","Transactional","endpoint","_endpoint","Transactional_1","_owner","_ownerKey","_changeEventName","listenTo","isRoot","transactionApi","begin","commit","transaction","_changeToken","json","strict","validationError","eachValidationError","getClassName","data","_defaultStore","getOwnerEndpoint","_endpoints","_validationError","getValidationError","cidPrefix","_transaction","markAsDirty","dirty","silent","_isDirty","initiator","originalOptions","_onChildrenChange","aquire","owner","child","ReferenceError","free","_begin","_markAsDirty","setAttribute","record","_attributes","doUpdate","attributes","_previousAttributes","AttributesCopy","_changedAttributes","UpdateModelMixin","attribute","propagateChanges","forceAttributeChange","_createTransaction","a_values","unknown","changes","parse","shouldBeAnObject","unknownAttrsWarning","ModelTransaction","nested_1","_log","nested_2","changes_1","_b","emptyOptions","AnyType","model","handleChange","toJSON","type","getHook","v","isChanged","code","text","New value","Prev. value","a_options","getHooks","transforms","changeHandlers","changeEvents","hasCustomDefault","tools.isValidJSON","isRequired","wrapIsRequired","convert","getHook_1","reduce","chainGetHooks","validate_1","chainTransforms","chainChangeHandlers","doInit","prevHook","nextHook","prevTransform","nextTransform","prevHandler","nextHandler","ImmutableClassType","PrimitiveType","NumericType","num","isFinite","ArrayType","ObjectType","doNothing","FunctionType","DateType","date","timestamp","getTime","toISOString","supportsDate","isNaN","struct","minutesOffset","isoDatePattern","exec","k","numericKeys","undefined","UTC","safeParseDate","AggregatedType","canBeUpdated","nestedTransaction","_shared","persistent","_handleChange","unset","dispose","shareAndListen","listen","share","SharedType","implicitObject","_onChange","builtins","String","Number","metatypes","getMetatype","_metatype","idx","resolveBuiltins","ChainableAttributeSpec","check","metadata","required","ref","emptyFunction","changed","eventMap","unsubscribe","subscribe","cloned","Type","attrDef","shared","inferType","createAttribute","from","createAttributesMixin","attributesDefinition","baseClassAttributes","myAttributes","_.transform","allAttributes","_.defaults","ConstructorsMixin","attrDefs","attrs","attr","Attributes","constructorsMixin","_attributesArray","createPropertyDescriptor","attrSpecs","eventsApi.EventMap","createWatcherFromRef","wrapWatcher","localEventsMixin","watcher","IOModelMixin","save","getEndpoint","ioMethod","isNew","id","fetch","read","destroy","_cidCounter","Model","asc","idAttribute","extend","_attributes$","__Attributes$","diff","hasChanged","val","old","nullify","forEach","_attributesArray_1","copy","pinStore","errors","asJson","l","newModel","clear","a_logger","Attributes definition","a_fun","tools.transform","Symbol","ModelEntriesIterator","Collection","typeCheck","BaseModelAttributes","BaseModelAttributesCopy","IdAttribute","metatype","done","LinkedAttr","_error","_token","DefaultCollection","dynamicMixin","AttributeRefs","__ModelAttrRef","isMutableType","addAttributeLinks","_aquire","_free","convertAndAquire","_aggregationError","_itemEvents","sortElements","_comparator","sort","models","addIndex","index","removeIndex","updateIndex","previous","CollectionTransaction","logAggregationError","added","removed","added_1","_d","removed_1","_e","sorted","addTransaction","items","a_items","forceMerge","_byId","prevLength","a_items_1","item","appendElements","needSort","length_1","moveElements","sortOrMoveElements","ArrayMixin","mapFilter","res","doWhile","init","end","modelOrId","idOrObj","toPredicateFunction","m","firstMatch","find","entries","a_index","noOp","keys_1","keys_2","removeMany","toRemove","_removeFromIndex","_reallocate","silentOptions","emptySetTransaction","len","src","_reallocateEmpty","setTransaction","_prevById","prevModels","toAdd","orderKept","reusedCount","previous_1","_garbageCollect","children","children_1","freeAll","addedOrChanged","_count","CollectionRefsType","Refs","RefsCollection","_SubsetOf","Subset","itemEvents","comparator","aa","bb","_store","objOrId","count","elements","add","reset","enabled","liveUpdates","filter_1","_liveUpdates","updated","tslib_1.__assign","aggregated","a_elements","previousModels","toElements","previousModels_1","toDispose","recordsOrIds","notify","removeOne","LinkedIncludes","a_next","Argument","Attributes spec","records","parsed","toggle","parseReference","collectionRef","ModelRefType","theMemberOf","masterCollection","T","getMasterCollection","subsetOf","CollectionClass","SubsetOf","subsetOfBehavior","refs","toArray","SubsetOfCollection","resolvedWith","resolveRefs","delaySet","raw","addAll","defineSubsetCollection","memberOf","createSubset","subset","master","elements_1","tools.notEqual","Store","store","global","listenToOnce","DefaultModel","attrName","getMetadata","value_1","as","reject","onAbort","fn","Promise","a_resolve","a_reject","listName","method"],"mappings":"4MAEgBA,EAAeC,EAAUC,GACrC,IAAK,IAAIC,KAAQD,EACTA,EAAOE,eAAgBD,KAAWF,EAAKG,eAAgBD,KACvDF,EAAME,GAASD,EAAQC,IAI/B,GAAuB,EAAnBE,UAAUC,OACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,UAAUC,OAAQC,IAAK,CACvC,IAAMC,EAAQH,UAAWE,GACzBC,GAASR,EAAUC,EAAMO,GAIjC,OAAOP,WAIKQ,EAAaC,GACzB,GAAc,OAAVA,EACA,OAAO,EAGX,cAAeA,GACf,IAAK,SACL,IAAK,SACL,IAAK,UACD,OAAO,EAEX,IAAK,SACD,IAAIC,EAAQC,OAAOC,eAAgBH,GAEnC,GAAIC,IAAUC,OAAOE,WAAaH,IAAUI,MAAMD,UAC9C,OAAOE,EAAON,EAAOD,GAI7B,OAAO,WAOKQ,EAAcC,GAC1B,OAAON,OAAOC,eAAgBK,EAAMJ,WAAYK,qBAWpCC,EAASC,GACrB,GAAIA,EACA,IAAK,IAAIC,KAAOD,EACZ,GAAIA,EAAIjB,eAAgBkB,GACpB,OAAO,EAKnB,OAAO,WA4BKC,EAAMF,EAAKG,GACvB,OAAIZ,OAAOC,eAAgBQ,KAAUI,EAxBzC,SAAoBC,EAAaF,GAG7B,IAFA,IAAIG,EAEKpB,EAAI,EAAGA,EAAImB,EAAIpB,OAAQC,IAC5B,GAAIoB,EAASH,EAAKE,EAAKnB,GAAKA,GACxB,OAAOoB,EAoBJC,CAAWP,EAAKG,GAf/B,SAAqBH,EAAUG,GAC3B,IAAIG,EAEJ,IAAK,IAAIL,KAAOD,EACZ,GAAIA,EAAIjB,eAAgBkB,KAChBK,EAASH,EAAKH,EAAKC,GAAOA,IAC1B,OAAOK,EAYRE,CAAYR,EAAKG,YAKhBR,EAAOK,EAAWS,GAC9B,OAAQP,EAAMF,EAAK,SAAAU,GAAK,OAACD,EAAWC,cAgBxBC,EAAM9B,GAGlB,IAFA,IAAMD,EAAO,GAAIgC,EAAU,GAElB1B,EAAI,EAAGA,EAAIF,UAAUC,OAAQC,IAClC0B,EAAS5B,UAAWE,KAAQ,EAGhC,IAAK,IAAIJ,KAAQD,GACR+B,EAAQ7B,eAAgBD,IAAUD,EAAOE,eAAgBD,KAC1DF,EAAME,GAASD,EAAQC,IAI/B,OAAOF,WAMKiC,EAAmBjC,EAAiCC,EAAmCsB,GACnG,IAAK,IAAIrB,KAAQD,EACb,GAAIA,EAAOE,eAAgBD,GAAS,CAChC,IAAIO,EAAQc,EAAKtB,EAAQC,GAAQA,QACvB,IAAVO,IAAsBT,EAAME,GAAcO,GAIlD,OAAOT,WAuBKkC,EAAalC,EAAUC,GACnC,IAAK,IAAIC,KAAQD,EACTA,EAAOE,eAAgBD,KACvBF,EAAME,GAASD,EAAQC,IAI/B,GAAuB,EAAnBE,UAAUC,OACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,UAAUC,OAAQC,IAAK,CACvC,IAAMC,EAAQH,UAAWE,GACzBC,GAAS2B,EAAQlC,EAAMO,GAI/B,OAAOP,WASKmC,EAAMC,GAClB,IAAIC,EAAMC,GAAQ,EAClB,OAAO,WAMH,OALKA,IACDA,GAAQ,EACRD,EAAOD,EAAKG,MAAMC,KAAMpC,WACxBgC,EAAO,MAEJC,GAIf,IAAMb,EAAaV,MAAMD,UACnB4B,EAAYC,KAAK7B,UACjB8B,EAAchC,OAAOE,mBAOX+B,EAAUC,EAASC,GAC/B,GAAID,IAAMC,EAAI,OAAO,EAErB,GAAID,GAAKC,GAAiB,iBAALD,GAA6B,iBAALC,EAAgB,CACzD,IAAMC,EAASpC,OAAOC,eAAgBiC,GAEtC,GAAIE,IAAWpC,OAAOC,eAAgBkC,GAAM,OAAO,EAEnD,OAAQC,GACJ,KAAKN,EAAc,OAAQI,IAAOC,EAClC,KAAKtB,EAAc,OA0B/B,SAAyBqB,EAAGC,GACxB,GAAID,EAAExC,SAAWyC,EAAEzC,OAAS,OAAO,EAEnC,IAAK,IAAIC,EAAI,EAAGA,EAAIuC,EAAExC,OAAQC,IAC1B,GAAIsC,EAAUC,EAAGvC,GAAKwC,EAAGxC,IAAQ,OAAO,EAG5C,OAAO,EAjC2B0C,CAAgBH,EAAGC,GAC7C,KAAKH,EACL,KAAK,KACD,OAOhB,SAA0BE,EAAGC,GACzB,IAAMG,EAAQtC,OAAOuC,KAAML,GAE3B,GAAII,EAAM5C,SAAWM,OAAOuC,KAAMJ,GAAIzC,OAAS,OAAO,EAEtD,IAAK,IAAIC,EAAI,EAAGA,EAAI2C,EAAM5C,OAAQC,IAAM,CACpC,IAAMe,EAAM4B,EAAO3C,GAEnB,IAAKwC,EAAE3C,eAAgBkB,IAASuB,EAAUC,EAAGxB,GAAOyB,EAAGzB,IACnD,OAAO,EAIf,OAAO,EApBY8B,CAAiBN,EAAGC,IAIvC,OAAO,EAiCX,IAAMM,EAAYzC,OAAO0C,OAAQ,eAGjBC,EAASlC,GACrB,IAAMmC,EAAO5C,OAAO0C,OAAQD,GAC5B,OAAOhC,EAAMc,EAAQqB,EAAMnC,GAAQmC,WAGvBC,EAASX,EAASC,GAE9B,GAAID,GAAKC,EAAI,OAAO,EAGpB,GAAS,MAALD,EAAY,OAAQ,EACxB,GAAS,MAALC,EAAY,OAAO,EAGvB,IAAMW,EAAKZ,EAAEa,UACTC,EAAKb,EAAEY,UAEX,OAAQD,EAAKE,GAAM,EACNA,EAALF,EAAU,EACV,EArBZL,EAAUjD,eAAiBwC,EAAYxC,wGAzNmBc,EAAO2C,OAAgB,aAAAC,mBAAAA,IAAAC,oBAC7E,IAAiB,QAAAC,IAAAC,WAAAA,IAAO,CAAnB,IAAIC,OACCxD,EAAQmD,EAAYK,QAChB,IAAVxD,IAAsBQ,EAAMJ,UAAWoD,GAASxD,6DAyDjBW,EAAU8C,GAG7C,IAFA,IAAIC,EAEKzD,EAAQU,GAAM+C,GAAQzD,EAAOA,EAAQC,OAAOC,eAAgBF,GACjEyD,EAAOxD,OAAOyD,yBAA0B1D,EAAOwD,GAGnD,OAAOC,0CAmCsBnE,EAAUC,GACvC,IAAK,IAAIC,KAAQD,EACbD,EAAME,GAASD,EAAQC,GAG3B,OAAOF,yBAGwBA,EAAUC,GACzC,IAAK,IAAIC,KAAQD,OACQ,IAAjBD,EAAME,KACNF,EAAME,GAASD,EAAQC,IAI/B,OAAOF,0BAuBWqE,GAClB,OAAOA,EAAI1D,OAAOuC,KAAMmB,GAAM,+CCjK9BC,kBAAA,SAAOC,GACH/B,KAAKgC,SAAWhC,KAAKgC,SAASC,OAAQF,EAAIC,WAG9CF,yBAAA,SAAcC,GACV,IAAK,IAAIT,KAASS,EACd/B,KAAKkC,SAAUZ,EAAOS,EAAKT,KAInCQ,yBAAA,SAAcR,GACV,IAAiB,QAAAE,EAAAF,EAAMa,MAAOC,GAAbf,WAAAA,IAA8B,CAA1C,IAAII,OACLzB,KAAKkC,SAAUT,EAAMY,EAAoBZ,MAIjDK,qBAAA,SAAUR,EAAgBgB,GAGtB,IAFQ,IAAAN,oBAESR,EAAAF,EAAMa,MAAOC,GAAbf,WAAAA,IAA8B,CAA1C,IAAIkB,OACLP,EAASQ,KAAM,IAAIC,EAAiBF,EAAMD,MAIlDR,sBAAA,SAAWY,EAAajF,GACpB,IAAkB,QAAA+D,EAAAxB,KAAKgC,SAALX,WAAAA,IAAe,CAA5B,IAAIsB,OACLC,EAAInF,EAAQkF,EAAMjF,KAAMiF,EAAML,SAAUI,KAIhDZ,wBAAA,SAAaY,EAAajF,GACtB,IAAkB,QAAA+D,EAAAxB,KAAKgC,SAALX,WAAAA,IAAe,CAA5B,IAAIwB,OACLC,EAAKrF,EAAQoF,EAAMnF,KAAMmF,EAAMP,SAAUI,QA3CjD,WAAaX,GAFb/B,cAA+B,GAGvB+B,IACIA,aAAeD,EACf9B,KAAKgC,SAAWD,EAAIC,SAASe,QAG7BhB,GAAO/B,KAAKgD,aAAcjB,IA0C1C,MAGI,SACWrE,EACP4E,GADOtC,UAAAtC,EAIHsC,KAAKsC,UADQ,IAAbA,EACgBD,EAAoB3E,GAEX,iBAAb4E,EAER,WACI,IAAMW,EAAUjD,KAAMsC,GACtBW,GAAWA,EAAQlD,MAAOC,KAAMpC,YAId0E,GAKhCY,EAAoB,GAE1B,SAASb,EAAoBc,GACzB,OAAOD,EAAmBC,KACtBD,EAAmBC,GAAU,SAAU9C,EAAIC,EAAI8C,EAAIC,EAAIC,QACzC,IAAND,QAAsB,IAANC,GAAeC,EAAUvD,KAAMmD,EAAO9C,EAAGC,EAAG8C,EAAGC,EAAGC,QAC5D,IAANF,EAAeI,EAAUxD,KAAMmD,EAAO9C,EAAGC,EAAG8C,GAC3CK,EAAUzD,KAAMmD,EAAO9C,EAAGC,KAS3C,MACI,SAAoBgC,EAA4BoB,EAAsBC,gBAAAA,QAAlD3D,cAAAsC,EAA4BtC,aAAA0D,EAAsB1D,UAAA2D,GAG1E,SAASC,EAASC,EAA2BnG,EAAe4E,EAAqBoB,GAK7E,IAJA,IAEII,EAAcC,EAFZC,EAAOH,EAASnG,GAIbuG,EAAKD,EAAMC,EAAIA,EAAKA,EAAGN,KAEtBrB,GAAYA,IAAa2B,EAAG3B,UAAYA,IAAa2B,EAAG3B,SAAS4B,WACjER,GAAWA,IAAYO,EAAGP,SAE5BK,EAAOE,EACWH,EAAlBA,GAAiCG,GAI7BF,IAAOA,EAAKJ,KAAOM,EAAGN,MAI9BK,IAASF,IAAeD,EAASnG,GAASoG,GAOlD,SAASK,EAAWH,EAAqB3D,EAAGC,EAAG8C,GAC3C,IAAK,IAAIa,EAAKD,EAAMC,EAAIA,EAAKA,EAAGN,KAAOM,EAAG3B,SAAS8B,KAAMH,EAAGP,QAASrD,EAAGC,EAAG8C,YAmB/DR,EAAInF,EAAsBC,EAAe4E,EAAqBoB,GAC1E,GAAIpB,EAAU,CACV,IAAMuB,EAAUpG,EAAOoG,UAAapG,EAAOoG,QAAU1F,OAAO0C,OAAQ,OACpEgD,EAASnG,GAAS,IAAI2G,EAAc/B,EAAUoB,EAASG,EAASnG,cAIxDiC,EAAMlC,EAAsBC,EAAe4E,EAAqBoB,GAC5E,GAAIpB,EAAU,CACV,IAAMgC,EAAkBC,EAAO,WAC3BzB,EAAKrF,EAAQC,EAAM4G,GACnBhC,EAASvC,MAAMC,KAAMpC,aAGzB0G,EAAKJ,UAAY5B,EACjBM,EAAInF,EAAQC,EAAM4G,EAAMZ,aAIhBZ,EAAKrF,EAAsBC,EAAgB4E,EAAsBoB,GACrE,IAAAG,YACR,GAAIA,EACA,GAAIvB,GAAYoB,EACZ,GAAIhG,EACAkG,EAASC,EAASnG,EAAM4E,EAAUoB,QAGlC,IAAK,IAAIc,KAAQX,EACbD,EAASC,EAASW,EAAMlC,EAAUoB,QAIrChG,EACLmG,EAASnG,QAAS,EAGlBD,EAAOoG,aAAU,EAU7B,IAAMzB,EAAgB,eAENqC,EAASC,EAAgBjH,EAAsBkH,EAAiBrC,EAAqBoB,GACjG,GAAItB,EAAcwC,KAAMD,GAEpB,IADA,QACiBpD,EADHoD,EAAOxC,MAAOC,GACXf,WAAAA,KAAQqD,EAAKjH,OAAc6E,EAAUoB,QAErDgB,EAAKjH,EAAQkH,EAAQrC,EAAUoB,YASvBD,EAAUoB,EAAoBnH,EAAe2C,EAAGC,GACrD,IAAAuD,YACR,GAAIA,EAAS,CACH,IAAAiB,EAAQjB,EAASnG,GACjBqH,SA1Fd,SAAoBf,EAAqB3D,EAAGC,GACxC,IAAK,IAAI2D,EAAKD,EAAMC,EAAIA,EAAKA,EAAGN,KAAOM,EAAG3B,SAAS8B,KAAMH,EAAGP,QAASrD,EAAGC,GA2FpE0E,CAAWF,EAAOzE,EAAGC,GACrB6D,EAAWY,EAAKrH,EAAM2C,EAAGC,aAIjBkD,EAAUqB,EAAoBnH,EAAe2C,EAAGC,EAAG8C,GACvD,IAAAS,YACR,GAAIA,EAAS,CACH,IAAAiB,EAAQjB,EAASnG,GACjBqH,QAENZ,EAAWW,EAAOzE,EAAGC,EAAG8C,GA/FhC,SAAoBY,EAAqB3D,EAAGC,EAAG8C,EAAGC,GAC9C,IAAK,IAAIY,EAAKD,EAAMC,EAAIA,EAAKA,EAAGN,KAAOM,EAAG3B,SAAS8B,KAAMH,EAAGP,QAASrD,EAAGC,EAAG8C,EAAGC,GA+F1E4B,CAAWF,EAAKrH,EAAM2C,EAAGC,EAAG8C,aAIpBG,EAAUsB,EAAoBnH,EAAe2C,EAAGC,EAAG8C,EAAGC,EAAGC,GAC7D,IAAAO,YACR,GAAIA,EAAS,CACH,IAAAiB,EAAQjB,EAASnG,GACjBqH,SApGd,SAAoBf,EAAqB3D,EAAGC,EAAG8C,EAAGC,EAAGC,GACjD,IAAK,IAAIW,EAAKD,EAAMC,EAAIA,EAAKA,EAAGN,KAAOM,EAAG3B,SAAS8B,KAAMH,EAAGP,QAASrD,EAAGC,EAAG8C,EAAGC,EAAGC,GAqG7E4B,CAAWJ,EAAOzE,EAAGC,EAAG8C,EAAGC,EAAGC,GAlGtC,SAAoBU,EAAqB3D,EAAGC,EAAG8C,EAAGC,EAAGC,EAAG6B,GACpD,IAAK,IAAIlB,EAAKD,EAAMC,EAAIA,EAAKA,EAAGN,KAAOM,EAAG3B,SAAS8B,KAAMH,EAAGP,QAASrD,EAAGC,EAAG8C,EAAGC,EAAGC,EAAG6B,GAkGhFC,CAAWL,EAAKrH,EAAM2C,EAAGC,EAAG8C,EAAGC,EAAGC,oICvOtC+B,EAAgB,SAAShC,EAAG/C,GAI5B,OAHA+E,EAAgBlH,OAAOmH,gBAClB,CAAEC,UAAW,cAAgBjH,OAAS,SAAU+E,EAAG/C,GAAK+C,EAAEkC,UAAYjF,IACvE,SAAU+C,EAAG/C,GAAK,IAAK,IAAIkF,KAAKlF,EAAOA,EAAE3C,eAAe6H,KAAInC,EAAEmC,GAAKlF,EAAEkF,MACpDnC,EAAG/C,IAGrB,SAASmF,EAAUpC,EAAG/C,GAEzB,SAASoF,IAAO1F,KAAKtB,YAAc2E,EADnCgC,EAAchC,EAAG/C,GAEjB+C,EAAEhF,UAAkB,OAANiC,EAAanC,OAAO0C,OAAOP,IAAMoF,EAAGrH,UAAYiC,EAAEjC,UAAW,IAAIqH,GAG5E,IAAIC,EAAW,WAQlB,OAPAA,EAAWxH,OAAOuB,QAAU,SAAkBkG,GAC1C,IAAK,IAAIC,EAAG/H,EAAI,EAAGgI,EAAIlI,UAAUC,OAAQC,EAAIgI,EAAGhI,IAE5C,IAAK,IAAI0H,KADTK,EAAIjI,UAAUE,GACOK,OAAOE,UAAUV,eAAeyG,KAAKyB,EAAGL,KAAII,EAAEJ,GAAKK,EAAEL,IAE9E,OAAOI,IAEK7F,MAAMC,KAAMpC,YAGzB,SAASmI,EAAOF,EAAGvC,GACtB,IAAIsC,EAAI,GACR,IAAK,IAAIJ,KAAKK,EAAO1H,OAAOE,UAAUV,eAAeyG,KAAKyB,EAAGL,IAAMlC,EAAE0C,QAAQR,GAAK,IAC9EI,EAAEJ,GAAKK,EAAEL,IACb,GAAS,MAALK,GAAqD,mBAAjC1H,OAAO8H,sBACtB,CAAA,IAAInI,EAAI,EAAb,IAAgB0H,EAAIrH,OAAO8H,sBAAsBJ,GAAI/H,EAAI0H,EAAE3H,OAAQC,IAC3DwF,EAAE0C,QAAQR,EAAE1H,IAAM,GAAKK,OAAOE,UAAU6H,qBAAqB9B,KAAKyB,EAAGL,EAAE1H,MACvE8H,EAAEJ,EAAE1H,IAAM+H,EAAEL,EAAE1H,KAE1B,OAAO8H,EAGJ,SAASO,EAAWC,EAAY1D,EAAQ7D,EAAK8C,GAChD,IAA2H0B,EAAvHD,EAAIxF,UAAUC,OAAQwI,EAAIjD,EAAI,EAAIV,EAAkB,OAATf,EAAgBA,EAAOxD,OAAOyD,yBAAyBc,EAAQ7D,GAAO8C,EACrH,GAAuB,iBAAZ2E,SAAoD,mBAArBA,QAAQC,SAAyBF,EAAIC,QAAQC,SAASH,EAAY1D,EAAQ7D,EAAK8C,QACpH,IAAK,IAAI7D,EAAIsI,EAAWvI,OAAS,EAAQ,GAALC,EAAQA,KAASuF,EAAI+C,EAAWtI,MAAIuI,GAAKjD,EAAI,EAAIC,EAAEgD,GAAS,EAAJjD,EAAQC,EAAEX,EAAQ7D,EAAKwH,GAAKhD,EAAEX,EAAQ7D,KAASwH,GAChJ,OAAW,EAAJjD,GAASiD,GAAKlI,OAAOqI,eAAe9D,EAAQ7D,EAAKwH,GAAIA,SCjBrDI,SAAP,SAAeC,EAAqCC,gBAArCD,MACX,IAAME,EAAiCpI,EAAcwB,MAGrD2G,GAAejH,EAAQM,KAAM2G,GAGrB,IAAAE,WAAQC,kBAehB,OAdAD,GAAU7G,KAAK6G,OAAOE,MAAOF,GAG7B7G,KAAK6G,OAAOG,YAAahH,KAAK3B,UAAWyI,GAAa,GAGtD9G,KAAK6G,OAAOG,YAAahH,KAAK3B,UAAW2B,KAAK6G,OAAOI,qBAAsBL,IAAa,GAGxF5G,KAAKkH,UAAYlH,KAAKkH,SAAUlH,KAAK6G,OAAOM,YAAaP,GAGzD5G,KAAK6G,OAAOO,sBAAuBR,GAE5B5G,MAIJyG,SAAP,SAAiCY,EAAWC,GACxC,IAAIC,IAWc,4DAMlB,OAbIF,GAAQA,EAAK1J,eAAgB,eAG7B8H,EADA8B,EAAcF,EAAK3I,YACKsB,OAIawH,MAAAxH,MAArCuH,KAGJE,EAAWF,GACXF,GAAQE,EAAYG,OAAQL,EAAMC,GAE3BC,MArDf,uBA4DgBE,EAAWE,GACvB,IAAMf,EAAiCpI,EAAcmJ,GAGrDA,EAAYC,UAAYhB,EAAUvI,UAGlCsJ,EAAYD,QAAUG,EAAYC,IAAKrB,GAAUsB,SAAUJ,GAG3DE,EAAYC,IAAKH,GAGjBA,EAAYK,UAAYL,EAAYK,SAAUpB,YAQlCc,EAAQO,GAEpB,GAAiC,mBAAtBA,EAMP,OAAO,SAAUC,GACbT,EAAWS,GACXA,EAAKR,OAAQO,IAPjBR,EAAWQ,GACTA,EAA0CP,kBAWpCP,EAAagB,GACzB,OAAO,SAAE1J,GACL,IAAMoI,EAASgB,EAAYC,IAAKrJ,GAChCoI,EAAOuB,gBAAkB7K,EAAUuD,IAAWqH,EAAOtB,EAAOuB,2BAcpDC,EAAqBC,EAAerK,GAChD,OAAO,SAAEC,EAAgBR,WACrBmK,EACKC,IAAK5J,EAAMQ,aACXsI,YAAa9I,UACRoK,WACI5K,GAASO,iBAapB4J,MAAP,SAAYpJ,GACA,IAAAoI,WAER,OAAOA,GAAUpI,IAAUoI,EAAOpI,MAAQoI,EACrCpI,EAAMoI,OAAS,IAAIgB,EAAapJ,IAWzCoJ,iCAAA,SAAsBjB,GACZ,IAAAO,EAAcrG,IACdrC,aAEN,OAAOgB,EAAW0H,EAAanH,KAAKoI,gBAAiB,SAAEG,EAAM7K,GACzD,GAAIkJ,EAAWlJ,KAAWe,EAAOf,GAC7B,OAAOe,EAAOf,MAK1BmK,kBAAA,SAAOhB,GAQH,IAPM,IAAA3I,EAAa8B,KAAKvB,MAAMJ,UAIxBmK,mBAAgBxI,KAAKwI,cAAgBxI,KAAKwI,cAAczF,aAG5C0F,IAAApH,WAAAA,IAAS,CAAtB,IAAIqH,OAEL,GAAIpK,MAAMqK,QAASD,GACf1I,KAAK+G,MAAO2B,QAGX,GAAIF,EAAcxC,QAAS0C,GAAU,EAItC,GAHAF,EAAchG,KAAMkG,GAGC,mBAAVA,EAAsB,CAE7B1I,KAAKgH,YAAahH,KAAKvB,MAAOiK,GAG9B,IAAME,EAAiBF,EAAe7B,OAClC+B,IACA5I,KAAK6I,WAAatL,EAAUuD,IAAWd,KAAK6I,WAAYD,EAAaC,YACrE7I,KAAKoI,gBAAkB7K,EAAUuD,IAAWd,KAAKoI,gBAAiBQ,EAAaR,iBAC/EpI,KAAKwI,cAAgBxI,KAAKwI,cAAcvG,OAAQ2G,EAAaJ,gBAIjExI,KAAKgH,YAAa9I,EAAOwK,EAAMrK,gBAI/B2B,KAAKgH,YAAa9I,EAAOwK,KAMzCb,qBAAA,eAAU,aAAAxG,mBAAAA,IAAAyH,kBACN,IAAiB,QAAAC,IAAAvH,WAAAA,IAAQ,CAApB,IAAI0G,OACLL,EAAYC,IAAKI,GAAOnB,MAAM,CAAE/G,KAAKvB,UAI7CoJ,wBAAA,SAAarK,EAAeC,EAAiBuL,GAA7C,YAgDJ,SAAyBC,EAAiBlK,GAGtC,IAFA,IAAMmK,EAASC,SAAgBF,OAEdzH,EAAArD,OAAOiL,oBAAqBH,GAA5B5H,WAAAA,IAAuC,CAAnD,IAAIkB,OACL2G,EAAQ3G,IAAUxD,EAAKwD,IAnDvB8G,CAAgB5L,EAAQ,SAAAC,GACpB,IACI6K,EADEe,EAAanL,OAAOyD,yBAA0BnE,EAAQC,IAGxD6K,EAAOgB,EAAKnB,gBAAiB1K,KAC7B8L,EAAgBD,EAAKpC,YAAazJ,EAAM4L,EAAYf,EAAMS,GAGzDT,GAAQA,IAASkB,EAAWC,YAC7BF,EAAgBhM,EAAME,EAAM4L,EAAYC,EAAKV,WAAYnL,GAAQsL,MAK7EnB,kCAAA,SAAuBjB,GACb,IAAEiC,kBAAYpK,aAEpB,GAAIoK,EAAY,CACZ,IAAM3K,EAAQO,EAAMJ,UAChBsL,EAAY/C,EAAUvI,UAE1B,IAAK,IAAIoD,KAAQoH,EAAa,CAC1B,IAAMN,EAAOM,EAAYpH,GAErBvD,EAAMP,eAAgB8D,IAAUA,KAAQkI,IACxCzL,EAAOuD,GAASmI,EAAa1L,EAAOuD,GAAQkI,EAAWlI,GAAQ8G,UA5F/E,WAAoB9J,GAAAuB,WAAAvB,EAXpBuB,iBAAuB,GAYX,IAAA6G,cAER7G,KAAK6I,WAAehC,GAAUA,EAAOgC,YAAgB/H,IACrDd,KAAKoI,gBAAoBvB,GAAUA,EAAOuB,iBAAqBtH,IAC/Dd,KAAKwI,cAAkB3B,GAAUA,EAAO2B,eAAmB,GA8FnE,IAAMW,EAAU,CACZU,SAAW/I,EAAQ,CACfjD,QAAS,EACTQ,WAAY,EACZyL,QAAS,EACTlM,WAAY,EACZF,MAAO,EACPkK,WAAY,IAGhBqB,OAASnI,EAAQ,CACbpC,aAAc,KAiCA,SAATmI,QAAW,aAAAxF,mBAAAA,IAAA0I,kBAAuB,gBACzCtL,GAAsB,OAAAoJ,EAAYC,IAAKrJ,GAAQsI,MAAOgD,QAI/CN,WAAiBtB,GAA6B,gBACrD1J,GACE,IAAMoI,EAASgB,EAAYC,IAAKrJ,GAChCoI,EAAOgC,WAAatL,EAAU4K,EAAOtB,EAAOgC,cA4DpD,SAASW,EAAgBhM,EAAeE,EAAe4L,EAAiCf,EAAuBS,GAE3G,GAAIxL,EAAKG,eAAgBD,GAAQ,CAC7B,IAAMsM,EAAW7L,OAAOyD,yBAA0BpE,EAAME,GAEpDsM,EAASC,cAAgB,UAAWD,IACpCxM,EAAME,GAASsL,EACXY,EAAaN,EAAWrL,MAAO+L,EAAS/L,MAAOsK,GAC/CqB,EAAaI,EAAS/L,MAAOqL,EAAWrL,MAAOsK,SAKvDpK,OAAOqI,eAAgBhJ,EAAME,EAAM4L,GAI3C,SAASM,EAAapM,EAAMC,EAAQ8K,GAEhC,YAAa,IAAT/K,EAAyBC,EAGxB8K,QAAmB,IAAX9K,EAGN8K,EAAM/K,EAAMC,GAHqBD,EA5E5CiM,EAAWxL,MAAQ,SAAEoC,EAAGC,GAAO,OAAAD,GAE/BoJ,EAAWC,WAAa,SAAErJ,EAAGC,GAAO,OAAAD,GAGpCoJ,EAAW1C,MAAQ,SAAE1G,EAAGC,GAAO,OAAA/C,EAAU,GAAI8C,EAAGC,IAGhDmJ,EAAWS,KAAO,SAAE7J,EAAGC,GAAO,gBAChBhB,GACN,OAAOe,EAAE+D,KAAMpE,KAAMM,EAAE8D,KAAMpE,KAAMV,MAK3CmK,EAAWlM,SAAW,SAAE8C,EAAcC,GAAkB,kBAEhD,OAAO/C,EAAU8C,EAAEN,MAAOC,KAAMpC,WAAa0C,EAAEP,MAAOC,KAAMpC,cAKpE6L,EAAWU,WAAa,SAAE9J,EAAcC,GAAkB,kBAElDD,EAAEN,MAAOC,KAAMpC,WACf0C,EAAEP,MAAOC,KAAMpC,aAKvB6L,EAAWW,UAAY,SAAE/J,EAAcC,GAAkB,kBAEjDA,EAAEP,MAAOC,KAAMpC,WACfyC,EAAEN,MAAOC,KAAMpC,aAKvB6L,EAAWlL,MAAQ,SAAE8B,EAAcC,GAAiB,kBAE5C,OAAOD,EAAEN,MAAOC,KAAMpC,YAAe0C,EAAEP,MAAOC,KAAMpC,aAI5D6L,EAAW3K,KAAO,SAAEuB,EAAcC,GAAiB,kBAE3C,OAAOD,EAAEN,MAAOC,KAAMpC,YAAe0C,EAAEP,MAAOC,KAAMpC,aC/WpD,IAAA6G,KAAS7B,KAAIE,KAAKnD,KAAM4D,KAAUE,KAAUD,KAEhD6G,GAAW,EAEf,SAASC,KACL,MAAO,IAAMD,aA2CNE,YAAP,SAAgB/I,EAAiEoF,OAA/D4D,gBAAaC,iBAAcC,eAEzC,GAAIF,GAAeC,EAAc,CAC7B,IAAME,EAAY,IAAI7I,EAAU9B,KAAK3B,UAAUoM,cAE/CD,GAAeG,EAAU3H,aAAcwH,GACvCC,GAAgBE,EAAU5D,MAAO0D,GAEjCzK,KAAK3B,UAAUoM,aAAeE,EAI9BD,GACAvM,OAAOyM,iBAAkB5K,KAAK3B,UAAWoB,EAAW,GAAiBiL,EAAYG,MAwBzFN,wBAAA,aAEAA,gBAAA,SAAI5F,EAAwCrC,EAAWoB,GACnD,GAAsB,iBAAXiB,EAAsBF,GAAS7B,GAAI5C,KAAM2E,EAAQrC,EAAUoB,QACjE,IAAK,IAAIjC,KAAQkD,EAASF,GAAS7B,GAAI5C,KAAMyB,EAAMkD,EAAQlD,GAAQiC,GAAWpB,GAEnF,OAAOtC,MAGXuK,kBAAA,SAAM5F,EAAwCrC,EAAWoB,GACrD,GAAsB,iBAAXiB,EAAsBF,GAAS9E,GAAMK,KAAM2E,EAAQrC,EAAUoB,QACnE,IAAK,IAAInB,KAAQoC,EAASF,GAAS9E,GAAMK,KAAMuC,EAAMoC,EAAQpC,GAAQmB,GAAWpB,GAErF,OAAOtC,MAGXuK,iBAAA,SAAK5F,EAAyCrC,EAAWoB,GACrD,GAAKiB,EACA,GAAsB,iBAAXA,EAAsBF,GAAS3B,GAAK9C,KAAM2E,EAAQrC,EAAUoB,QACvE,IAAK,IAAIc,KAAQG,EAASF,GAAS3B,GAAK9C,KAAMwE,EAAMG,EAAQH,GAAQd,GAAWpB,QAFtEQ,GAAK9C,UAAM,EAAQsC,EAAUoB,GAI3C,OAAO1D,MAOXuK,qBAAA,SAAQ7M,EAAe2C,EAAIC,EAAI8C,EAAIC,EAAIC,GAInC,YAHU,IAAND,QAAsB,IAANC,EAAeC,GAAUvD,KAAMtC,EAAM2C,EAAGC,EAAG8C,EAAGC,EAAGC,QACtD,IAANF,EAAeI,GAAUxD,KAAMtC,EAAM2C,EAAGC,EAAG8C,GAC/CK,GAAUzD,KAAMtC,EAAM2C,EAAGC,GACvBN,MAGXuK,sBAAA,SAAU9M,EAAoB4C,EAAmCC,GAM7D,OALI7C,IACAqN,GAAc9K,KAAMvC,GACpBA,EAAOmF,GAAIvC,EAAIC,GAAkB,iBAAND,EAAwBC,EAAPN,KAAUA,OAGnDA,MAGXuK,0BAAA,SAAc9M,EAAoB4C,EAAmCC,GAMjE,OALI7C,IACAqN,GAAc9K,KAAMvC,GACpBA,EAAOkC,KAAMU,EAAIC,GAAkB,iBAAND,EAAwBC,EAAPN,KAAUA,OAGrDA,MAGXuK,2BAAA,SAAeQ,EAAuB1K,EAAoCC,GAC9D,IAAA0K,oBACR,GAAIA,EAAc,CACd,IAAMC,IAAe5K,GAAKC,GACpB4K,EAAU5K,GAAkB,iBAAND,EAAwBC,EAAPN,KAE7C,GAAI+K,EAAU,CACV,IAAMtN,EAASuN,EAAcD,EAASI,KAClC1N,IACIwN,UAAmBD,EAAcD,EAASI,KAC9C1N,EAAOqF,IAAKzC,EAAG6K,EAAQlL,YAG1B,GAAgB,MAAZ+K,EAAkB,CACvB,IAAK,IAAII,KAAOH,EAAeA,EAAcG,GAAMrI,IAAKzC,EAAG6K,EAAQlL,MAE/DiL,IAAcjL,KAAKgL,kBAAe,IAI9C,OAAOhL,MASXuK,qBAAA,WACQvK,KAAKoL,YAETpL,KAAKqL,gBACLrL,KAAK8C,MAEL9C,KAAKoL,WAAY,IArIZb,MALZ7C,EACAP,EAAY,CACTuD,WAAajB,EAAW1C,MACxByD,YAAcf,EAAW1C,SAEhBwD,KAqCT,cAXAvK,kBAA4B,EAG5BA,uBAAiC,EAS7BA,KAAKmL,IAAMb,KACXtK,KAAKsL,WAAWvL,MAAOC,KAAMpC,eAqGxB2N,GAAiChM,EAAMgL,GAAUlM,UAAW,cAAe,cAMxF,SAASwM,GAAsBvL,GAC3B,GAAIA,EACA,MAAoB,mBAANA,EAAmB,CAAEwI,IAAmBxI,EAAG2K,cAAe,GAA8B3K,EAI9G,SAASwL,GAAcU,EAAsB/N,IACnB+N,EAASR,eAAiBQ,EAASR,aAAe7M,OAAO0C,OAAQ,QACzEpD,EAAO0N,MAAS1N,EAAO0N,IAAMb,OAEpB7M,SCnMdgO,GAAkC,oBAAZC,SAA2BA,QAAQC,KAAgC,eAAzBD,QAAQC,IAAIC,SACrFC,GAA0BJ,GACtB,CAAE,QAAS,QACX,CAAE,QAAS,OAAQ,QAAS,OAAQ,WAGhBjE,QAAA+C,IAIxBuB,0BAAA,SAAcC,EAAkBC,GAC5B,OAAOhM,KAAK4C,GAAImJ,EAAO,SAAEE,EAAOC,EAAKC,GACjC,IAAKH,GAAUA,EAAOpH,KAAMqH,GAAS,CACjC,IAAMG,EAAO,CAAE,IAAIH,OAAUC,GAE7B,IAAK,IAAIzK,KAAQ0K,EACbC,EAAK5J,KAAM,OAAOf,MAAS4K,GAAUF,EAAO1K,KAGhD6K,QAASP,GAAQhM,MAAOuM,QAASF,OAM7CN,qBAAA,SAASC,EAAkBC,GACvB,OAAOhM,KAAK4C,GAAImJ,EAAO,SAAEE,EAAOC,EAAKC,GACjC,IAAKH,GAAUA,EAAOpH,KAAMqH,GACxB,MAAM,IAAIM,MAAO,IAAIN,OAAUC,MAM3CJ,mBAAA,SAAOC,EAAkBC,GAAzB,WACI,OAAOhM,KAAK4C,GAAImJ,EAAO,SAAEE,EAAOC,EAAKC,GAC5BH,IAAUA,EAAOpH,KAAMqH,KACxB1C,EAAKiD,QAAST,IAAYxC,EAAKiD,QAAST,IAAW,GAAM,MAarED,gBAAA,SAAIzL,EAASC,GACT,OAAOmM,aAAM7J,aAAIvC,EAAGC,IA7CfwL,MADZpE,GACYoE,KADb,cAAA,uDAEIvC,UAAgD,KAoDpD,IAAI8C,GAA6B,oBAAXK,OAClB,SAAAC,GACI,GAAIA,GAAkC,iBAAdA,EAAwB,CAE5C,IAAM1O,EAAQ0O,EAAUC,iBAAmBD,EAGrCE,EAFQvO,MAAMqK,QAAS1K,GAEN,cAAeA,EAAMJ,YAAc,KAAMM,OAAOuC,KAAMzC,GAAQ6O,KAAM,WAE3F,OAAOH,EAAUjO,YAAYhB,KAAO,IAAMmP,EAG9C,OAAOE,KAAKC,UAAWL,IAEzB,SAAArN,GAAK,OAAAA,GAEE2N,GAAS,IAAInB,GAE1B,GAAuB,oBAAZQ,QACP,IAAkB,SAAAY,MAAA7L,aAAAA,KAAW,CAAxB,IAAIsB,UACLsK,GAAOE,aAAcxK,QAIhByK,GAAiB,IAAItB,GAClCsB,GAAeC,QAAS,SAAUA,QAAS,YAE9BC,GAA8BL,GAAOM,QAAQC,KAAMP,aCjBhDQ,GAAS5I,EAAe6I,EAA0BC,EAAqBC,GAyBnF,OAvBAC,GAAShJ,GAETA,EAAKiJ,WAAaJ,EACbK,KAAM,SAAAC,GACHnJ,EAAKiJ,WAAa,KAElB,IAAM5O,EAAS0O,EAASA,EAAQI,GAASA,EAIzC,OAFAC,GAAkBpJ,EAAM,OAAQA,EAAMmJ,EAAML,GAErCzO,IAEVgP,MAAO,SAAAC,GAMJ,MALAtJ,EAAKiJ,WAAa,KAGlBG,GAAkBpJ,EAAM,QAASA,EAAMsJ,EAAKR,GAEtCQ,IAGdtJ,EAAKiJ,WAAWM,MAAQV,EAAQU,MAEzBvJ,EAAKiJ,oBAGAD,GAAShJ,GACjBA,EAAKiJ,YAAcjJ,EAAKiJ,WAAWM,QACnCvJ,EAAKiJ,WAAWM,QAChBvJ,EAAKiJ,WAAa,eAIVG,GAAkBI,OAAa,aAAAhN,mBAAAA,IAAA+K,oBAC3CiC,EAAYd,QAAQxN,MAAOsO,EAAajC,GAChC,IAAAkC,eACRA,GAAcA,EAAWf,QAAQxN,MAAOuO,EAAYlC,GCxGxD,IAAMmC,GAAiB,gCAUnB,SAAaC,EAAoBC,gBAAAA,MAC7B,IAAMC,EAAOF,EACIG,MAAOJ,IACPxM,IAAK,SAAAlD,GACF,MAAY,MAARA,GAAuB,UAARA,EAAyB,aAE3B,MAAbA,EAAK,GAAqB,mBAAoBA,EAAI+P,OAAQ,QAE9B,IAA5B/P,EAAImH,QAAS,UAA0B,mBAAoBnH,EAAI+P,OAAQ,QAEpE/P,IAG3BmB,KAAK6O,KAAOJ,GAAaC,EAAKI,MAC9B9O,KAAK+O,OAASL,EAAK7Q,OAEnBmC,KAAKgP,QAAgB,IAAIC,SAAU,OAAQ,8BACvBP,EAAKQ,uDAElBR,EAAK3M,IAAK,SAAAzC,GAAK,MAAA,gCACAA,sBACfwN,KAAK,qDAOJqC,GAAkBC,EAAoBZ,EAAoBa,GAMtE,IALA,IAAMX,EAAOF,EAAUG,MAAOJ,IACxBe,EAAOZ,EAAK7Q,OAAS,EAEvBgH,EAAOuK,EAEFtR,EAAI,EAAGA,EAAIwR,EAAMxR,IAAK,CAC3B,IAAMe,EAAM6P,EAAM5Q,GAClB,OAAQe,GACJ,IAAK,IAAMgG,EAAOA,EAAK0K,WAAY,MACnC,IAAK,IAAM1K,EAAOA,EAAK2K,WAAY,MACnC,QAAW3K,EAAOA,EAAKiD,IAAKjJ,GAIhC,IAAKgG,EAAO,OAGhB,OAAOwK,EAAQxK,EAAM6J,EAAMY,ICpD/B,QAgBIG,kBAAA,SAAMC,GACI,IAAEC,aAAOC,cAIf,IAAK,IAAM/Q,KAFP8Q,GAAQD,EAAUC,EAAO,MAEXC,EACdF,EAAUE,EAAQ/Q,GAAOA,IAIjC4Q,uBAAA,SAAWC,EAAwEzG,GAC/EjJ,KAAK6P,KAAM,SAAE5R,EAAaY,GAClBZ,aAAiBwR,GACCxR,EAAO6R,UAAWJ,EAAUzG,EAAOnB,IAAKjJ,IAG1D6Q,EAAUzR,EAAOY,EAAKoK,UAxBlC,YAAarK,GACToB,KAAKnC,OAASe,EAAImR,gBAAiB/P,KAAK4P,OAAS,KAE7C5P,KAAK2P,MAAQ/Q,EAAIoR,SAAUpR,KAC3BoB,KAAKnC,SCTjB,IAAMmB,GAAaV,MAAMD,UACnB8B,GAAchC,OAAOE,mBAEX4R,GAAShS,GACrB,GAAIA,GAA0B,iBAAVA,EAChB,OAAQE,OAAOC,eAAgBH,IAC3B,KAAKe,GAAc,OAAOkR,GAC1B,KAAK/P,GAAc,OAAOgQ,GAIlC,OAAOC,GAIX,ICwJiBC,GDxJXD,GAAwB,CAC1BE,eAAOrS,GAAS,OAAOA,GACvB8D,IAAA,SAAKwO,EAAqBxR,GAAO,MAAO,IACxCyR,gBAAQvS,GAAS,OAAOA,IAIfkS,GAAyB,CAElCpO,IAAA,SAAKwO,EAAqBE,GAClB,IAAAC,EAAS,GACPzS,UAEN,IAAK,IAAIY,KAAOZ,EACZ,GAAIA,EAAMN,eAAgBkB,GAAO,CAC7B,IAAM8R,EAAUF,EAAUF,EAAKK,GAAI/R,GAAOA,QAC9B,IAAZ8R,GAAwBD,EAAOlO,KAAMmO,GAI7C,OAAOD,GAGXF,OAAA,SAAQvH,EAAapK,GAEjB,cADOoK,EAAQpK,GACRoK,GAIXqH,MAAA,SAAOrH,GACH,YAAYA,KAKPiH,GAAwB,CAEjCI,MAAA,SAAOO,GACH,OAAOA,EAAM9N,SAGjByN,OAAA,SAAQK,EAAe/S,GAEnB,OADA+S,EAAMC,OAAQhT,EAAG,GACV+S,GAIX9O,IAAA,SAAKwO,EAAqBE,GAItB,IAHA,IAAM5S,EAAS0S,EAAKtS,MAAMJ,OACpB6S,EAASpS,MAAOT,GAEbC,EAAI,EAAGiT,EAAI,EAAGjT,EAAID,EAAQC,IAAK,CACpC,IAAMkT,EAAIP,EAAUF,EAAKK,GAAI9S,GAAKA,QAC5B,IAANkT,IAAkBN,EAAQK,KAAQC,GAKtC,OAFAN,EAAO7S,SAAWkT,IAAOL,EAAO7S,OAASkT,GAElCL,ICrEX,YAAoBzS,GAAA+B,WAAA/B,EALpB+B,gBAAc,YAQd7B,sBAAIkS,4BAAJ,WAAe,OAAOrQ,KAAK/B,WAC3B,SAAaqB,GAASU,KAAKiR,IAAK3R,oCAGhCnB,sBAAckS,iCAAd,WACI,OAAOrQ,KAAK/B,uCAIhBoS,sBAAA,SAAUpN,GAAV,WACI,OAAO,IAAIiO,GAAiBlR,KAAM,SAAEV,GAChC2D,EAAS3D,GACTiK,EAAK0H,IAAK3R,MAKlB+Q,kBAAA,SAAMpN,GAAN,WACI,OAAO,IAAIiO,GAAiBlR,KAAM,SAAAV,GAC9B,IAAMqE,EAAOV,EAAS3D,EAAGiK,EAAKtL,YACrB,IAAT0F,GAAmB4F,EAAK0H,IAAKtN,MASrCxF,sBAAIkS,0BAAJ,WAAA,WACI,MAA6B,kBAAfrQ,KAAK/B,MAAsB,CACrCkT,QAAUnR,KAAK/B,MACfmT,SAAW,SAAA9N,GAAK,OAAAiG,EAAK0H,IAAKI,QAAS/N,EAAEZ,OAAOyO,YAC9C,CACElT,MAAQ+B,KAAK/B,MACbmT,SAAW,SAAA9N,GAAK,OAAAiG,EAAK0H,IAAK3N,EAAEZ,OAAOzE,0CAK3CoS,oBAAA,SAAQ5Q,EAAiC6D,GACrC,IAAMK,EAAOlE,EAAWO,KAAKsQ,QAAShN,QAC7B,IAATK,GAAmB3D,KAAKiR,IAAKtN,IAIjC0M,oBAAA,SAAQ5Q,GAAR,WACI,OAAO,SAAA6D,GAAK,OAAAiG,EAAK+H,OAAQ7R,EAAW6D,KAGxC+M,oBAAA,SAAQkB,GACJ,OAAO,IAAIC,GAAiBxR,KAAMuR,IAGtClB,qBAAA,SAASoB,GACL,OAAO,IAAIC,GAAkB1R,KAAMyR,GAAgB,KAIvDpB,sBAAA,SAAiCM,GAC7B,OAAO,IAAIgB,GAAa3R,KAAM2Q,IAIlCN,kBAAA,WACI,IAAMQ,EAAQX,GAAaI,MAAOtQ,KAAK/B,OACvCK,MAAMD,UAAUmE,KAAKzC,MAAO8Q,EAAOjT,WACnCoC,KAAKiR,IAAKJ,IAIdR,qBAAA,WACI,IAAMQ,EAAQX,GAAaI,MAAOtQ,KAAK/B,OACvCK,MAAMD,UAAU2K,QAAQjJ,MAAO8Q,EAAOjT,WACtCoC,KAAKiR,IAAKJ,IAKdR,oBAAA,WACI,IAAMQ,EAAQX,GAAaI,MAAOtQ,KAAK/B,OACvCK,MAAMD,UAAUyS,OAAO/Q,MAAO8Q,EAAOjT,WACrCoC,KAAKiR,IAAKJ,IAMdR,iBAAA,SAAKI,GACD,OAAOR,GAASjQ,KAAK/B,OAAQ8D,IAAK/B,KAAMyQ,IAK5CJ,sBAAA,SAAUxR,GACE,IAAAZ,aACJ2T,EAAI3B,GAAShS,GAEjB+B,KAAKiR,IAAKW,EAAEpB,OAAQoB,EAAEtB,MAAOrS,GAASY,KAK1CwR,gBAAA,SAAIxR,GACA,OAAO,IAAIgT,GAAe7R,KAAMnB,IAGpCwR,mBAAA,WACU,IAAApS,aACN,OAAOgS,GAAShS,GAAQqS,MAAOrS,IAOnCoS,kBAAA,WAGI,IAFA,IAAIyB,EAAQ,GAAIpR,EAAO9C,UAAUC,OAASD,UAAYO,OAAOuC,KAAMV,KAAK/B,OAE/DH,EAAI,EAAGA,EAAI4C,EAAK7C,OAAQC,IAAK,CAClC,IAAMe,EAAe6B,EAAM5C,GAC3BgU,EAAOjT,GAAQ,IAAIgT,GAAe7R,KAAMnB,GAG5C,OAAOiT,GAOX3T,sBAAIkS,sBAAJ,WACI,IAAKrQ,KAAK+R,QAAS,CACX,IAAAD,EAA2B9R,KAAK+R,QAAU,GACxC9T,aAEN,IAAK,IAAIY,KAAOZ,EACRA,EAAMN,eAAgBkB,KACtBiT,EAAOjT,GAAQ,IAAIgT,GAAe7R,KAAMnB,IAKpD,OAAOmB,KAAK+R,yCAQhB1B,mBAAA,SAAO2B,EAAiCrC,GAKpC,OAJK3P,KAAK2P,OAAUqC,EAAWhS,KAAK/B,SAChC+B,KAAK2P,MAAQA,GAASqC,EAAUrC,OAASsC,IAGtCjS,WAIEqQ,GAAAA,WAAAA,oBAcb,SAA0BpS,EAAWgT,GACjC,OAAO,IAAIiB,GAAiBjU,EAAOgT,IAMvBZ,aAAhB,SAA6CyB,GACzC,OAAOK,GAAQL,EAAO,UAMVzB,aAAhB,SAA6CyB,GACzC,OAAOK,GAAQL,EAAO,UAMVzB,aAAhB,SAA6CyB,GACzC,IAAK,IAAIjT,KAAOiT,EACZ,GAAIA,EAAMnU,eAAgBkB,IAASiT,EAAOjT,GAAM8Q,MAC5C,OAAO,EAIf,OAAO,GAMIU,aAAhB,SAA6CyB,EAAwBrU,GAChE,GAAIA,EACA,IAAK,IAAIoB,KAAOiT,EAAO,CACnB,IAAMM,EAAYC,GAAMxT,GACxB,GAAIpB,EAAOE,eAAgByU,GAAa,CACpC,IAAME,EAAY7U,EAAQ2U,QACZ,IAAdE,GAAwBR,EAAOjT,GAAMoS,IAAKqB,MAQ9D,WAAmC9K,QAAA6I,UAC/B6B,iBAAA,SAAK5S,SAEL,YAAarB,EAAWgT,GAAxB,MACIxE,aAAOxO,gBACPsL,EAAK0H,IAAMA,IAInB,WAAmCzJ,QAAA6I,UAC/Ba,iBAAA,SAAK5R,SAEL,YAAaiT,EAAsBtB,GAAnC,MACIxE,aAAO8F,EAAOtU,aACdsL,EAAK0H,IAAMA,EAEH,IAAAtB,iBACJA,IAAQpG,EAAKoG,MAAQA,KAIjC,WAA8BnI,QAAA6I,UAK1BmB,iBAAA,SAAKlS,GACDU,KAAKuS,OAAOtB,IAAK3R,EAAIU,KAAKuR,YAAc,WAL5C,YAAoBgB,EAA+BhB,GAAnD,MACI9E,aAAO8F,EAAOtU,QAAUsT,gBADRhI,SAAAgJ,EAA+BhJ,cAAAgI,IASvD,WAA+B/J,QAAA6I,UAK3BqB,iBAAA,SAAKpS,GACDU,KAAKuS,OAAOtB,IAAK3R,EAAIU,KAAKyR,aAAe,WAL7C,YAAoBc,EAA+Bd,GAAnD,MACIhF,aAAuB,MAAhB8F,EAAOtU,oBADEsL,SAAAgJ,EAA+BhJ,eAAAkI,IASvD,WAA0BjK,QAAA6I,UAKtBsB,iBAAA,SAAKrS,GAAL,WACQqE,EAAO0N,QAAS/R,GAEpB,GAAIU,KAAK/B,QAAU0F,EAAM,CACrB,IAAI1E,EAAce,KAAKuS,OAAOtU,MAC1BuU,EAAYlT,EAAIL,EAAIgD,OAAQjC,KAAK2Q,SAAY1R,EAAI+M,OAAQ,SAAAyG,GAAM,OAAAA,IAAOlJ,EAAKoH,UAE/E3Q,KAAKuS,OAAOtB,IAAKuB,SAXzB,YAAoBD,EAA+B5B,GAAnD,MACIlE,aAA0C,GAAnC8F,EAAOtU,MAAM+H,QAAS2K,iBADbpH,SAAAgJ,EAA+BhJ,UAAAoH,IAgBvD,OAAOsB,GAAe,oBAMqBzK,QAAA6I,UAKvCwB,oBAAA,WACI7R,KAAKuS,OAAOG,SAAe1S,KAAKnB,MAIpCgT,iBAAA,SAAKvS,GAAL,WACQU,KAAK/B,QAAUqB,GACfU,KAAKuS,OAAOjB,OAAQ,SAAArT,GAEhB,OADAA,EAAOsL,EAAK1K,KAAQS,EACbrB,SAbnB,YAAqBsU,EAA+B1T,GAApD,MACI4N,aAAO8F,EAAOtU,MAAOY,iBADJ0K,SAAAgJ,EAA+BhJ,MAAA1K,IAmBxD,SAASsT,GAAQL,EAAqBa,GAClC,IAAMC,EAAS,GAEf,IAAK,IAAI/T,KAAOiT,EACZ,GAAIA,EAAMnU,eAAgBkB,GAAO,CAC7B,IAAMZ,EAAQ6T,EAAOjT,GAAO8T,QACd,IAAV1U,IACA2U,EAAQP,GAAMxT,IAAUZ,GAKpC,OAAO2U,EAGX,SAASP,GAAMxT,GACX,MAAoB,MAAbA,EAAK,GAAcA,EAAIkE,MAAO,GAAMlE,ECnVvC,IAYIgU,GAZJrP,KAAUZ,KAAIE,MAYV+P,GAAAA,kBAAAA,yCAERA,yBACAA,gDAYkBC,aAYlB,SAAiB3L,EAAuCP,GAChDO,EAAY4L,WAAW/S,KAAK3B,UAAU2U,UAAY7L,EAAY4L,UAClExI,GAAUrD,SAAS9C,KAAMpE,KAAMmH,EAAaP,IAGzCkM,YAAP,SAAiBlM,GAETA,EAAU/F,SAAWb,KAAKa,SAC1Bb,KAAKa,OAASoS,GAAcpS,SAK7BiS,UAAP,SAA2DzS,EAAUC,GACjE,OAAO,IAAKN,KAAcK,EAAGC,IAWjCwS,qBAAA,WACQ9S,KAAKoL,YAETyC,GAAS7N,MACTA,KAAKkT,YAAS,EACdlT,KAAKmT,eAAY,EACjBnT,KAAK8C,MACL9C,KAAKqL,gBACLrL,KAAKoL,WAAY,IAiCrB0H,uBAAA,SAAW7P,EAAoBP,GAC3BE,GAAI5C,KAAMA,KAAKoT,iBAAkBnQ,EAASP,IAM9CoQ,wBAAA,SAAY7P,EAAqBP,GAC7BI,GAAK9C,KAAMA,KAAKoT,iBAAkBnQ,EAASP,IAM/CoQ,6BAAA,SAAiBpQ,EAAwBO,GACrCjD,KAAKqT,SAAU3Q,EAAQA,EAAO0Q,iBAAkBnQ,IAWpD6P,yBAAA,SAAa/T,EAA+B4O,GACxC,IAAM2F,EAASC,GAAeC,MAAOxT,MAC/BsR,EAASvS,EAAIqF,KAAMpE,KAAMA,MAC/BsR,GAAUtR,KAAKiR,IAAKK,GACpBgC,GAAUC,GAAeE,OAAQzT,OAIrC8S,wBAAA,SAAY/H,GAAZ,WAEUtN,EAASsN,aAAoBsF,SAAStF,EAAS9M,MAAQ8M,EAc7D,OAXA/K,KAAK0T,YAAa,WACdnK,EAAK0H,IAAOxT,EAAemP,iBAAmBnP,EAAQ,CAAEsJ,OAAQ,IAGxD,IAAA4M,iBAEJA,IACApK,EAAKoK,aAAeA,KAIrB3T,MAIJ8S,QAAP,SAAmEc,EAAYpS,gBAAAA,MAAE,IAAAqS,WAAQlG,kBAC/E/O,EAAwBoB,KAAca,OAAQ+S,OAAWjG,GAASV,OAAS4G,EAASzG,QAAiB,KAQ3G,OANIyG,GAAUjV,EAAIkV,iBACdlV,EAAImV,oBAAqB,SAAEpE,EAAO9Q,EAAKD,GACnC,MAAM,IAAI2N,MAAW3N,EAAIoV,mBAAoBnV,OAAU8Q,KAIxD/Q,GAcXkU,mBAAA,SAAOmB,EAAYtG,GAAwC,OAAOsG,GAalEnB,qBAAA,SAAStE,GACL,OAAOW,GAAkBnP,KAAMwO,EAAW,SAAEvF,EAAQpK,GAAS,OAAAoK,EAAOnB,IAAMmB,EAAOnB,IAAKjJ,GAAQoK,EAAQpK,MAM1GiU,sBAAA,WACI,OAAO9S,KAAKkT,QAQhBJ,sBAAA,WACY,IAAAI,cACR,OAAOA,EAAyBA,EAAO3D,WAAavP,KAAKkU,eAgB7DpB,0BAAA,WAAmC,OAAO9S,KAAK8N,YAI/CgF,yBAAA,WACI,OAgNR,SAASqB,EAAkBtP,GAEf,IAAAyJ,eACR,GAAIA,EACA,OAAO6F,EAAkB7F,GAI7B,GAAIzJ,EAAKqO,OAAQ,CACL,IAAAkB,sBACR,OAAOA,GAAcA,EAAYvP,EAAKsO,YA1N/BgB,CAAkBnU,OAAUA,KAAKgT,WAY5C7U,sBAAI2U,oCAAJ,WACI,IAAMnD,EAAQ3P,KAAKqU,mBAAsBrU,KAAKqU,iBAAmB,IAAI5E,GAAiBzP,OACtF,OAAO2P,EAAM9R,OAAS8R,EAAQ,sCAQlCmD,sBAAA,SAAUlU,KAGVkU,gCAAA,SAAoBjU,GAChB,IAAI8Q,EAAQ3P,KAAK8T,gBACjB,OAASjV,EAAM8Q,GAASA,EAAMC,OAAQ/Q,GAAQ8Q,IAAW,MAI7DmD,iCAAA,SAAqBtE,GACjB,OAAOW,GAAkBnP,KAAMwO,EAAW,SAAEvF,EAAQpK,GAAS,OAAAoK,EAAOqL,mBAAoBzV,MAI5FiU,iCAAA,SAAqBpD,GACT,IAAAoE,uBACRA,GAAmBA,EAAgBhE,UAAWJ,EAAU1P,OAI5D8S,qBAAA,SAASjU,GACL,OAAQmB,KAAKsU,mBAAoBzV,IAGrCiU,qBAAA,WAAqB,OAAO9S,KAAKmL,KACjC2H,sBAAA,WAAY,OAAO9S,KAAKmL,KAGxB2H,0BAAA,WACY,IAAApV,wBACR,GAAa,aAATA,EAAsB,OAAOA,GAnQnBoV,SALrBpL,EACAP,EAAY,CACT4L,SAAWtJ,EAAWxL,QAEzB4I,EAAQ0D,KACauI,KAgGlB,YAAa3H,GA5CbnL,kBAAoB,GAIpBA,mBAAyB,EAIzBA,cAAiC,KAIjCA,iBAAiB,EAKjBA,oBAAqB,EAmJrBA,2BAAqC,EAvHjCA,KAAKmL,IAAMnL,KAAKuU,UAAYpJ,MAiPvBoI,GAAiB,CAG1BC,MAAA,SAAOvK,GACH,OAAOA,EAAOuL,eAAyBvL,EAAOuL,cAAe,IAMjEC,YAAA,SAAaxL,EAAwB0E,GAEjC,IAAM+G,GAAS/G,EAAQgH,OASvB,OARID,IAAQzL,EAAO2L,SAAWjH,GAG9B1E,EAAO0K,aAAe,GAGtB1K,EAAOoL,sBAAmB,EAEnBK,GAMXjB,OAAA,SAAQxK,EAAwB4L,GAC5B,IAAIC,EAAkB7L,EAAO2L,SAE7B,GAAIE,EAAiB,CAEjB,KAAO7L,EAAO2L,UAAU,CACpB,IAAMjH,EAAU1E,EAAO2L,SACvB3L,EAAO2L,SAAW,KAClBpR,GAAUyF,EAAQA,EAAOmK,iBAAkBnK,EAAQ0E,EAASkH,GAIhE5L,EAAOuL,cAAe,EAGd,IAAAtB,WACJA,GAAUA,IAAiB2B,GAC3B3B,EAAO6B,kBAAmB9L,EAAQ6L,QAKtC7L,EAAO2L,SAAW,KAClB3L,EAAOuL,cAAe,GAU9BQ,OAAA,SAAQC,EAAeC,EAAuBrW,GAC1C,GAAIqW,EAAMhC,OAAS,MAAM,IAAIiC,eAAgB,oEAE7CD,EAAMhC,OAAS+B,EACfC,EAAM/B,UAAYtU,GAKtBuW,KAAA,SAAMH,EAAeC,GACbD,IAAUC,EAAMhC,SAChBgC,EAAMhC,YAAS,EACfgC,EAAM/B,eAAY,KCzbtB,IAAAkC,YAAgBC,kBAA4B7B,aAE5CjQ,cA6CQ+R,GAAcC,EAA8B9X,EAAeO,GAEvE,IAAMqV,EAAUE,GAAOgC,GACjB7H,EAAU,GAGZ6H,EAAOC,YAAa/X,GAAOgY,SAAUzX,EAAOuX,EAAQ7H,KAEpD8G,GAAae,EAAQ7H,GACrBnK,GAAUgS,EAAQ,UAAY9X,EAAM8X,EAAQA,EAAOG,WAAYjY,GAAQiQ,IAI3E2F,GAAUG,GAAQ+B,GAGtB,SAAShC,GAAOgC,GACZ,QAAIH,GAAQG,KACRA,EAAOI,oBAAsB,IAAIJ,EAAOK,eAAgBL,EAAOG,cAC/DH,EAAOM,mBAAqB,OAOpC,SAASrB,GAAae,EAA8B7H,GAMhD,OAJI6H,EAAOM,qBACPN,EAAOM,mBAAqB,MAGzBR,GAAcE,EAAQ7H,GAe1B,IAAMoI,GAAmB,CAE5BrC,YAAA,SAAyC3U,EAA8C4O,GACnF,IAAM2F,EAASE,GAAOxT,MACtBjB,EAAIqF,KAAMpE,KAAMA,MAChBsT,GAAUG,GAAQzT,OAItB+U,kBAAA,SAAmBG,EAAuBvH,GAC9B,IAAAwF,cACF6C,EAAYhW,KAAKyV,YAAatC,GAE/B6C,IAA6DA,EAAUC,kBAAmBjW,KAAKkW,qBAAsB/C,EAAWxF,IAIzIuI,qBAAA,SAAsBrX,EAAc8O,gBAAAA,MAEhC,IAAM2F,EAASE,GAAOxT,MAElByU,GAAazU,KAAM2N,IACnBnK,GAAUxD,KAAM,UAAYnB,EAAKmB,KAAMA,KAAK2V,WAAY9W,GAAO8O,GAGnE2F,GAAUG,GAAQzT,OAGtBmW,mBAAA,SAAgDC,EAAezI,gBAAAA,MAC3D,IAMI0I,EANE/C,EAASE,GAAOxT,MACdsW,EAAqB,GACrB1G,EAA6B,GAC3B6F,mBACF7C,EAASjF,EAAQ4I,MAAQvW,KAAKuW,MAAOH,EAAUzI,GAAYyI,EAInE,GAAII,GAAkBxW,KAAM4S,EAAQjF,GAAW,CAC3C,IAAK,IAAIlM,KAAQmR,EAAQ,CACrB,IAAMvL,EAAOoO,EAAahU,GAEtB4F,EACIA,EAAKqO,SAAU9C,EAAQnR,GAAQzB,KAAM2N,EAASiC,IAC9C0G,EAAQ9T,KAAMf,IAIL4U,EAAbA,GAAuB,IACf7T,KAAM,IAAKf,OAIvB4U,GACAI,GAAqBzW,KAAMqW,EAAS,CAAEzD,UAAUjF,GAIxD,GAAI2I,EAAQzY,QAAU4W,GAAazU,KAAM2N,GACrC,OAAO,IAAI+I,GAAkB1W,KAAMsT,EAAQ1D,EAAQ0G,GAIvD,IAA+B,QAAAK,IAAAtV,WAAAA,IAAQ,MAChBoS,OAAQzT,MAG/BsT,GAAUG,GAAQzT,iBAIVyW,GAAqBjB,EAA8Ba,EAAoBlK,EAAOwB,GAC1F6H,EAAOoB,KAAM,OAAQ,sBAAuB,wBAAyBP,EAAQvJ,KAAK,sBAAsBX,EAAOwB,EAAQV,iBA+B3GuJ,GAAkBhB,EAA8B5C,EAAiBjF,GAC7E,SAAIiF,GAAUA,EAAOlU,cAAgBP,UAErCqX,EAAOoB,KAAM,QAAS,uBAAwB,qCAAsC,CAAEhE,UAAUjF,EAAQV,SACjG,GAKX,QAQIyJ,oBAAA,SAAQ7B,GAIJ,IAHM,IAAEjF,cAAQ3G,cAAQqN,mBAGAO,IAAAxV,WAAAA,SACRoS,OAAQxK,GAMxB,IADQ,IAAA0M,eAAYf,iBACJkC,IAAAC,WAAAA,IAAS,CAApB,IAAIlY,OACL2E,GAAUyF,EAAQ,UAAYpK,EAAKoK,EAAQ0M,EAAY9W,GAAO+V,GAGlE5U,KAAKsT,QAAUG,GAAQxK,EAAQ4L,QArBnC,YAAoB5L,EACAqK,EACA1D,EACA0G,GAHAtW,YAAAiJ,EACAjJ,YAAAsT,EACAtT,YAAA4P,EACA5P,aAAAsW,MC/MhBlW,KAkCF4W,GAAoC,OAgBtCC,0BAAA,SAAclT,EAAMJ,EAAMgK,KAK1BsJ,uBAAA,SAAWtT,EAAYI,EAAYmT,EAA6BvJ,GAAuC,OAAOhK,GAG9GsT,qBAAA,SAAStT,EAAYI,EAAYmT,EAA6BvJ,GAAuC,OAAOhK,GAK5GsT,uBAAA,SAAW5W,EAASC,GAChB,OAAOF,GAAUC,EAAGC,IAMxB2W,0BAAA,SAActT,EAAYI,EAAYmT,EAA6BvJ,KAOnEsJ,oBAAA,aAIAA,mBAAA,SAAOhZ,EAAauX,GAChB,OAAOvX,GAGXgZ,qBAAA,SAASzB,EAA8BvX,GACnC+B,KAAKmX,kBAAc,EAAQlZ,EAAOuX,EAAQwB,KAG9CC,sBAAA,SAAUzB,EAA8BvX,EAAaY,KAErDoY,oBAAA,SAAQhZ,EAAOY,EAAK8O,GAChB,OAAO1P,GAASA,EAAMmZ,OAASnZ,EAAMmZ,OAAQzJ,GAAY1P,GAG7DgZ,2BAAA,WACI,OAAOjX,KAAKqX,MAAQrX,KAAKqX,KAAKhZ,qBAAqByU,IAGvDmE,sCAAA,WACU,IAAEvZ,YAAM4Z,eAEd,GAAa,OAAT5Z,EACA,MAAO,CAEHuT,aAAKhT,GACDsX,GAAcvV,KAAMtC,EAAMO,IAI9B6J,IACIwP,EACI,WACI,OAAOA,EAAQlT,KAAMpE,KAAMA,KAAK2V,WAAYjY,GAAQA,IAExD,WAAa,OAAOsC,KAAK2V,WAAYjY,IAG7CuM,cAAe,IAY3BgN,wBAAA,SAAYvZ,EAAeiQ,KAI3BsJ,oBAAA,SAAQhZ,EAAOuX,EAA8B7H,GACzC,IAAM4J,OAAc,IAAVtZ,EAAmB+B,KAAKyR,eAAiBxT,EAC/CqB,EAAIU,KAAKP,UAAW8X,OAAG,EAAQ/B,EAAQ7H,GAG3C,OADA3N,KAAKmX,aAAc7X,OAAG,EAAQkW,EAAQ7H,GAC/BrO,GAGX2X,sBAAA,SAAUhZ,EAAOuX,EAA8B7H,EAA8BiC,GACjE,IAAAlS,YACFiY,eACA5R,EAAO4R,EAAYjY,GAEnBiG,EAAO3D,KAAKP,UAAWxB,EAAO8F,EAAMyR,EAAQ7H,GAGlD,OAFAgI,EAAYjY,GAASiG,IAEjB3D,KAAKwX,UAAW7T,EAAMI,KAEtB/D,KAAKmX,aAAcxT,EAAMI,EAAMyR,EAAQ7H,IAChC,IAQLsJ,kBAAV,SAAgBlL,EAAkB0L,EAAeC,EAAezZ,EAAOuX,EAA8BvI,GACjGuI,EAAOoB,KAAM7K,EAAO0L,EAASjC,EAAOxB,mBAAmBhU,KAAKtC,SAAUga,EAAS,CAC3EC,YAAc1Z,EACd2Z,cAAgBpC,EAAOG,WAAY3V,KAAKtC,OACzCuP,IAGPgK,0BAAA,WACI,OAAOjX,KAAK/B,WAGhB,YAAoBP,EAAema,GAAf7X,UAAAtC,EAgFpBsC,aAA2C,KA9EvCA,KAAK2N,QAAUkK,EAGf,IAAMlK,KAA+BmK,SAAW,GAAIC,WAAa,GAAIC,eAAiB,IAAOH,GAC7FlK,EAAQmK,SAAWnK,EAAQmK,SAAS/U,QACpC4K,EAAQoK,WAAapK,EAAQoK,WAAWhV,QACxC4K,EAAQqK,eAAiBrK,EAAQqK,eAAejV,QAGtC,IAAA9E,UAAOoZ,SAAMd,UAAOa,WAAQa,iBAC5BjI,aAAU8H,aAAUC,eAAYC,mBA4C1C,GAxCAhY,KAAK/B,MAAQA,EACb+B,KAAKqX,KAAQA,GAGR1J,EAAQuK,kBAAoBb,EAC7BrX,KAAKyR,aAAezR,KAAKa,OAEpBsX,EAAmBla,GAExB+B,KAAKyR,aAAe,IAAIxC,SAAU,UAAWlC,KAAKC,UAAW/O,QAG7D+B,KAAKyR,aAAezR,KAAKyR,aAI7BzR,KAAKiW,kBAAoC,IAAjBgC,EAExBjY,KAAKoX,YAAoB,IAAXA,EAAoBpX,KAAKoX,OAASA,EAEhDpX,KAAKgQ,SAAWA,GAAYhQ,KAAKgQ,SAE7BrC,EAAQyK,aACRpY,KAAKgQ,SAiEjB,SAAyBA,GACrB,OAAO,SAAUwF,EAA8BvX,EAAaY,GACxD,OAAOZ,EAAQ+R,EAAS5L,KAAMpE,KAAMwV,EAAQvX,EAAOY,GAAQ,YAnEvCwZ,CAAgBrY,KAAKgQ,WAQzC+H,EAAW/O,QAAShJ,KAAKsY,SAGrBtY,KAAK8H,KAAMgQ,EAAS9O,QAAShJ,KAAK8H,KAGtC9H,KAAKsL,WAAWlH,KAAMpE,KAAM2N,GAGxBmK,EAASja,OAAQ,CACjB,IAAM0a,EAAUvY,KAAKsX,QAAUQ,EAASU,OAAQC,IAExCC,gBACR1Y,KAAKgQ,SAAW,SAAUwF,EAA8BvX,EAAaY,GACjE,OAAO6Z,EAAStU,KAAMpE,KAAMwV,EAAQ+C,EAAQnU,KAAMoR,EAAQvX,EAAOY,GAAOA,IAIhFmB,KAAKP,UAAYsY,EAAWla,OAASka,EAAWS,OAAQG,IAAoB3Y,KAAKP,UAEjFO,KAAKmX,aAAea,EAAena,OAASma,EAAeQ,OAAQI,IAAwB5Y,KAAKmX,aAG1F,IAAE0B,cAAQnD,gBAChB1V,KAAK6Y,OAAStC,EAAQ,SAAUtY,EAAOuX,EAA8B7H,GACjE,OAAOkL,EAAOzU,KAAMpE,KAAM2N,EAAQ4I,YAAmB,IAAVtY,EAAmBsY,EAAMnS,KAAMoR,EAAQvX,EAAO+B,KAAKtC,MAASO,EAAOuX,EAAQ7H,IACtHkL,EAEJ7Y,KAAK0V,SAAWa,EAAQ,SAAUtY,EAAOuX,EAA8B7H,EAA8BiC,GACjG,OAAO8F,EAAStR,KAAMpE,KAAM2N,EAAQ4I,YAAmB,IAAVtY,EAAmBsY,EAAMnS,KAAMoR,EAAQvX,EAAO+B,KAAKtC,MAASO,EAAOuX,EAAQ7H,EAASiC,IACjI8F,EAQZ,SAAS+C,GAAeK,EAAoBC,GACxC,OAAO,SAAU9a,EAAOP,GACpB,OAAOqb,EAAS3U,KAAMpE,KAAM8Y,EAAS1U,KAAMpE,KAAM/B,EAAOP,GAAQA,IAIxE,SAASib,GAAiBK,EAA2BC,GACjD,OAAO,SAAUtV,EAAMI,EAAMyR,EAAQ7H,GACjC,OAAOsL,EAAc7U,KAAMpE,KAAMgZ,EAAc5U,KAAMpE,KAAM2D,EAAMI,EAAMyR,EAAQ7H,GAAW5J,EAAMyR,EAAQ7H,IAIhH,SAASiL,GAAqBM,EAA6BC,GACvD,OAAO,SAAUxV,EAAMI,EAAMyR,EAAQ7H,GACjCuL,EAAY9U,KAAMpE,KAAM2D,EAAMI,EAAMyR,EAAQ7H,GAC5CwL,EAAY/U,KAAMpE,KAAM2D,EAAMI,EAAMyR,EAAQ7H,eCvQZnG,QAAAyP,IAGpCmC,oBAAA,WACI,OAAO,IAAIpZ,KAAKqX,MAGpB+B,qBAAA,SAASzV,GACL,OAAe,MAARA,GAAgBA,aAAgB3D,KAAKqX,KAAO1T,EAAO,IAAI3D,KAAKqX,KAAM1T,IAG7EyV,oBAAA,SAAQnb,EAAOY,EAAe8O,GAC1B,OAAO1P,GAASA,EAAMmZ,OAASnZ,EAAMmZ,OAAQzJ,GAAY1P,GAG7Dmb,mBAAA,SAAOnb,GACH,OAAO,IAAI+B,KAAKqX,KAAMrX,KAAKoX,OAAQnZ,KAGvCmb,uBAAA,SAAW/Y,EAAGC,GACV,OAAOD,IAAMC,OApBrB,0EA6BmCkH,QAAAyP,IAG/BoC,qBAAA,aACAA,oBAAA,WAAW,OAAOrZ,KAAKqX,QAEvBgC,oBAAA,SAAQpb,GAAU,OAAOA,GAEzBob,qBAAA,SAAS1V,GAAS,OAAe,MAARA,EAAeA,EAAO3D,KAAKqX,KAAM1T,IAE1D0V,uBAAA,SAAWhZ,EAAGC,GAAM,OAAOD,IAAMC,GAEjC+Y,mBAAA,SAAOpb,GAAU,OAAOA,GAExBob,oBAAA,SAAQpb,EAAOuX,EAA8B7H,GACzC,OAAO3N,KAAKP,eAAqB,IAAVxB,EAAmB+B,KAAK/B,MAAQA,OAAO,EAAQuX,EAAQ7H,IAGlF0L,sBAAA,SAAUpb,EAAOuX,EAAQ7H,EAASiC,GACpB,IAAAlS,YACAiY,eACF5R,EAAO4R,EAAYjY,GAE3B,OAAOqG,KAAW4R,EAAYjY,GAASsC,KAAKP,UAAWxB,EAAO8F,EAAMyR,EAAQ7H,KAGhF0L,wBAAA,WACSrZ,KAAK2N,QAAQuK,mBACdlY,KAAK/B,MAAQ+B,KAAKqX,aA5B9B,0EAmCiC7P,QAAA6R,IAG7BC,oBAAA,WACI,OAAO,GAGXA,qBAAA,SAAS3V,EAAMI,EAAOyR,EAAS7H,GAC3B,IAAM4L,EAAc,MAAR5V,EAAeA,EAAO3D,KAAKqX,KAAM1T,GAM7C,OAJI4V,GAAQA,GACRvZ,KAAK4W,KAAM,QAAS,uBAAwB,sDAAuDjT,EAAM6R,EAAQ7H,EAAQV,QAGtHsM,GAGXD,sBAAA,SAAUpC,EAAOjZ,EAAOP,GAEpB,GAAa,MAATO,IAAkBub,SAAUvb,GAC5B,OAAOP,EAAO,4BApB1B,0EA6B+B8J,QAAAyP,IAC3BwC,oBAAA,SAAQxb,GAAU,OAAOA,GACzBwb,qBAAA,aACAA,oBAAA,WAAU,MAAO,IAEjBA,qBAAA,SAAS9V,EAAMI,EAAMyR,EAAQ7H,GAEzB,OAAY,MAARhK,GAAgBrF,MAAMqK,QAAShF,GAAgBA,GAEnD3D,KAAK4W,KAAM,QAAS,sBAAuB,gDAAiDjT,EAAM6R,EAAQ7H,EAAQV,QAE3G,KAGXwM,mBAAA,SAAOxb,GACH,OAAOA,GAASA,EAAM8E,aAf9B,0EAmBgCyE,QAAAyP,IAC5ByC,oBAAA,WAAU,MAAO,IAEjBA,qBAAA,SAAS/V,EAAMI,EAAMyR,EAAQ7H,GACzB,OAAY,MAARhK,GAAgC,iBAATA,EAA2BA,GAEtD3D,KAAK4W,KAAM,QAAS,uBAAwB,qDAAsDjT,EAAM6R,EAAQ7H,EAAQV,QACjH,SAPf,wEAWgB0M,iBAEkBnS,QAAAyP,IAE9B2C,oBAAA,SAAQ3b,KACR2b,oBAAA,WAAU,OAAOD,IACjBC,qBAAA,aAEAA,qBAAA,SAASjW,EAAMI,EAAMyR,EAAQ7H,GAEzB,OAAY,MAARhK,GAAgC,mBAATA,EAA6BA,GAExD3D,KAAK4W,KAAM,QAAS,yBAA0B,sDAAuDjT,EAAM6R,EAAQ7H,EAAQV,QAEpH0M,KAIXC,mBAAA,SAAO3b,GAAS,OAAOA,OAhB3B,0EC/H8BuJ,QAAAyP,IAC1B4C,oBAAA,WACI,OAAO,IAAI3Z,MAGf2Z,qBAAA,SAASlW,EAAYtD,EAAGmV,EAAQ7H,GAC5B,GAAY,MAARhK,GAAgBA,aAAgBzD,KAAO,OAAOyD,EAElD,IAAMmW,EAAO,IAAI5Z,KAAMyD,GACjBoW,EAAYD,EAAKE,UAMvB,OAJID,GAAcA,GACd/Z,KAAK4W,KAAM,QAAS,qBAAsB,4CAA6CjT,EAAM6R,EAAQ7H,EAAQV,QAG1G6M,GAGXD,sBAAA,SAAU3C,EAAOjZ,EAAOP,GACpB,GAAa,MAATO,EAAe,CACf,IAAM8b,EAAY9b,EAAM+b,UACxB,GAAID,GAAcA,EAAY,OAAOrc,EAAO,qBAIpDmc,oBAAA,SAAQ5b,GAAU,OAAOA,GAASA,EAAMgc,eAExCJ,uBAAA,SAAWxZ,EAAGC,GAAM,OAASD,GAAKA,EAAE2Z,cAAkB1Z,GAAKA,EAAE0Z,YAE7DH,oBAAA,SAAQ5b,EAAOuX,EAA8B7H,GAEzC,OAAO3N,KAAKP,eAAqB,IAAVxB,EAAmB+B,KAAKyR,eAAiBxT,OAAO,EAAQuX,EAAQ7H,IAG3FkM,sBAAA,SAAU5b,EAAOuX,EAAQ7H,EAASiC,GACpB,IAAAlS,YACAiY,eACF5R,EAAO4R,EAAYjY,GAG3B,OAAOsC,KAAKwX,UAAWzT,EAAO4R,EAAYjY,GAASsC,KAAKP,UAAWxB,EAAO8F,EAAMyR,EAAQ7H,KAG5FkM,mBAAA,SAAO5b,GAAU,OAAOA,GAAS,IAAIiC,KAAMjC,EAAM+b,YACjDH,qBAAA,iBA5CJ,+DAgDA,SAASK,GAAcJ,GACnB,OAAQK,MAAO,IAAMja,KAAM4Z,GAASE,WAGnCE,GAAa,0BACbA,GAAa,2BACbA,GAAa,4BACbA,GAAa,6BACbA,GAAa,mCAEdL,GAASxb,UAAUia,QAAU,SAAUra,GACnC,OAAgB,MAATA,GAAiBA,aAAiBiC,KAAOjC,EAAQ,IAAIiC,KAOpE,SAAwB4Z,GACpB,IAAIC,EAAWK,EAAgBC,EAAgB,EAE/C,GAAMD,EAASE,GAAeC,KAAMT,GAAU,CAE1C,IAAK,IAAWU,EAAP1c,EAAI,EAAQ0c,EAAIC,GAAa3c,KAASA,EAC3Csc,EAAQI,IAAOJ,EAAQI,IAAO,EAIlCJ,EAAQ,KAAQA,EAAQ,IAAO,GAAK,EACpCA,EAAQ,IAAOA,EAAQ,IAAO,EAEV,MAAhBA,EAAQ,SAA+BM,IAAhBN,EAAQ,KAC/BC,EAA+B,GAAfD,EAAQ,IAAYA,EAAQ,IAExB,MAAhBA,EAAQ,KACRC,EAAgB,EAAIA,IAI5BN,EACI7Z,KAAKya,IAAKP,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAMC,EAAeD,EAAQ,GAC3FA,EAAQ,SAGpBL,EAAY7Z,KAAKqW,MAAOuD,GAG5B,OAAOC,EApC+Da,CAAe3c,MAIzF,IAAMwc,GAAiB,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACtCH,GAAiB,qICvEf,OAAAlF,WAAMJ,iBAEsBxN,QAAAyP,IAGhC4D,mBAAA,SAAO5c,GACH,OAAOA,EAAQA,EAAMqS,QAAUrS,GAGnC4c,oBAAA,SAAQvb,EAAGT,EAAc8O,GAAoB,OAAOrO,GAAKA,EAAE8X,OAAQzJ,IAEnEkN,oBAAA,SAAQ5c,EAAOuX,EAA8B7H,GACzC,IAAM4J,EAAI5J,EAAQ2C,MAAQtQ,KAAKsQ,MAAOrS,QACxB,IAAVA,EAAmB+B,KAAKyR,eAAiBxT,EAGvCqB,EAAIU,KAAKP,UAAW8X,OAAG,EAAQ/B,EAAQ7H,GAE7C,OADA3N,KAAKmX,aAAc7X,OAAG,EAAQkW,EAAQ7H,GAC/BrO,GAGXub,sBAAA,SAAU5c,EAAOuX,EAAQ7H,EAASiC,GACxB,IAEF0B,EAFEzS,EAAMmB,KAAKtC,KAAQiY,eACnB5R,EAAO4R,EAAY9W,GAIzB,GAAIyS,EAAStR,KAAK8a,aAAc/W,EAAM9F,EAAO0P,GAAY,CACrD,IAAMoN,EAAoBhX,EAAKoS,mBAAoB7E,EAAQ3D,GAC3D,SAAIoN,IACInL,EACAA,EAAOpN,KAAMuY,GAGbA,EAAkBtH,OAAQ+B,IAG1BxV,KAAKiW,mBAMjB,IAAMtS,EAAO3D,KAAKP,UAAWxB,EAAO8F,EAAMyR,EAAQ7H,GAGlD,OAFAgI,EAAY9W,GAAQ8E,IAEhB3D,KAAKwX,UAAW7T,EAAMI,KAEtB/D,KAAKmX,aAAcxT,EAAMI,EAAMyR,EAAQ7H,IAEhC,IAMfkN,0BAAA,SAAc9W,EAAsBJ,EAAYgK,GAE5C,GAAI5J,GAAgB,MAARJ,EAAc,CACtB,KAAIA,aAAgB3D,KAAKqX,MAKrB,OAAO1T,EAHP,GAAIgK,EAAQ5G,MAAQ,OAAOpD,EAAKiJ,kBAQ5CiO,qBAAA,SAASlX,EAAYI,EAAYyR,EAA8B7H,GAE3D,OAAY,MAARhK,EAAsBA,EAEtBA,aAAgB3D,KAAKqX,OACjB1T,EAAKqX,SAAcrX,EAAKqX,QAAUnI,gBAAcoI,YAChDjb,KAAK4W,KAAM,QAAS,2BAA4B,0EAA2EjT,EAAM6R,EAAQ7H,EAAQV,QAKjJU,EAAQ5G,MAAepD,EAAK2M,QAE5B3M,EAAKuP,QACLlT,KAAK4W,KAAM,OAAQ,sBAAuB,kGAAmGjT,EAAM6R,EAAQ7H,EAAQV,QAC5JtJ,EAAK2M,SAGT3M,GAGF3D,KAAKqX,KAAaxW,OAAQ8C,EAAMgK,IAG7CkN,qBAAA,SAAUrF,EAA8BvX,GAChCA,GACA+B,KAAKmX,kBAAc,EAAQlZ,EAAOuX,EAAQ,KAIlDqF,sBAAA,SAAUrF,EAA8BvX,GACpC,IAAI0R,EAAQ1R,GAASA,EAAM6V,gBAC3B,GAAInE,EAAQ,OAAOA,GAGvBkL,oBAAA,WACI,OAAa7a,KAAKqX,KAAMxW,UAG5Bga,wBAAA,SAAYlN,GACRA,EAAQqK,eAAehP,QAAShJ,KAAKkb,gBAGzCL,2BAAA,SAAelX,EAAsBI,EAAsByR,EAA8B7H,GACjF5J,IACAqR,GAAMI,EAAQzR,GACd4J,EAAQwN,OAASpX,EAAKqX,WAGtBzX,GAAOqR,GAAQQ,EAAQ7R,EAAM3D,KAAKtC,WApH9C,+DCDQ,OAAAkF,KAAIE,KACNsS,WAAMJ,aAUNqG,GAAiBxI,gBAAcyI,OAASzI,gBAAc0I,UAG5B/T,QAAAyP,IAG3BuE,oBAAA,SAAQvd,EAAOuX,EAA8B7H,GAC1C,IAAM4J,EAAI5J,EAAQ2C,MAAQtQ,KAAKsQ,MAAOrS,EAAOuX,QAC/B,IAAVvX,EAAmB+B,KAAKyR,eAAiBxT,EAGvCqB,EAAIU,KAAKP,UAAW8X,OAAG,EAAQ/B,EAAQ7H,GAE7C,OADA3N,KAAKmX,aAAc7X,OAAG,EAAQkW,EAAQ7H,GAC/BrO,GAGXkc,sBAAA,SAAUvd,EAAOuX,EAAQ7H,EAASiC,GACxB,IAEF0B,EAFEzS,EAAMmB,KAAKtC,KAAQiY,eACnB5R,EAAO4R,EAAY9W,GAIzB,GAAIyS,EAAStR,KAAK8a,aAAc/W,EAAM9F,EAAO0P,GAAY,CACrD,IAAMoN,EAAoBhX,EAAKoS,mBAAoB7E,EAAQ3D,GAC3D,SAAIoN,IACInL,EACAA,EAAOpN,KAAMuY,GAGbA,EAAkBtH,OAAQ+B,IAG1BxV,KAAKiW,mBAMjB,IAAMtS,EAAO3D,KAAKP,UAAWxB,EAAO8F,EAAMyR,EAAQ7H,GAGlD,OAFAgI,EAAY9W,GAAQ8E,IAEhB3D,KAAKwX,UAAW7T,EAAMI,KAEtB/D,KAAKmX,aAAcxT,EAAMI,EAAMyR,EAAQ7H,IAEhC,IAMf6N,mBAAA,SAAOvd,EAAuBuX,GAE1B,IAAKvX,GAASA,EAAMiV,SAAWsC,EAAS,OAAOvX,EAG/C,IAAMqS,EAAQrS,EAAMqS,QAEpB,OADA0E,GAAQQ,EAAQlF,EAAOtQ,KAAKtC,MACrB4S,GAIXkL,oBAAA,aAEAA,0BAAA,SAAczX,EAAsBJ,EAAYgK,GAE5C,GAAI5J,GAAgB,MAARJ,KAAmBA,aAAgB3D,KAAKqX,MAChD,OAAO1T,GAIf6X,qBAAA,SAAS7X,EAAYI,EAAYyR,EAA8B7H,GAC3D,GAAY,MAARhK,GAAgBA,aAAgB3D,KAAKqX,KAAO,OAAO1T,EAGvD,IAAM8X,EAAiB,IAAMzb,KAAKqX,KAAe1T,EAAMgK,EAAS0N,IAKhE,OAFArG,GAAQQ,EAAQiG,EAAgBzb,KAAKtC,MAE9B+d,GAIXD,sBAAA,SAAUtE,EAAOjZ,EAAOP,KAGxB8d,oBAAA,WACI,OAAO,MAIXA,2BAAA,SAAe7X,EAAsBI,EAAsByR,EAA8B7H,GACjF5J,IAEIA,EAAKmP,SAAWsC,GAChBJ,GAAMI,EAAQzR,GACd4J,EAAQwN,OAASpX,EAAKqX,WAGtBtY,GAAKiB,EAAMA,EAAKqP,iBAAkBpT,KAAK0b,UAAWlG,IAItD7R,GAEIA,EAAKuP,SAAWsC,GAChB5S,GAAIe,EAAMA,EAAKyP,iBAAkBpT,KAAK0b,UAAWlG,IAK7DgG,qBAAA,SAAShG,EAA8BvX,GAC/BA,GACA+B,KAAKmX,kBAAc,EAAQlZ,EAAOuX,EAAQ,KAMlDgG,wBAAA,SAAY7N,GAER,IAAMqI,EAAYhW,KAClBA,KAAK0b,UAAY1b,KAAKiW,iBAAmB,SAAUf,EAAOvH,EAASkH,GAC/D7U,OAAS6U,GAAa7U,KAAKkW,qBAAsBF,EAAUtY,KAAMiQ,IACjEzE,GAEJyE,EAAQqK,eAAehP,QAAShJ,KAAKkb,oBA5H7C,+DAgIA,SAAShS,MCpIT,IAAMyS,GAAwB,CAAEC,OAAQC,OAAQxK,QAASnR,KAAM/B,OAAQG,MAAO2Q,UACxE6M,GAAY,CAAEzC,GAAeC,GAAaD,GAAeQ,GAAUH,GAAYD,GAAWG,aAEhFmC,GAAa7T,GACzB,OAASA,EAAc8T,WAU3B,SAA0B9T,GACtB,IAAM+T,EAAMN,GAAS3V,QAASkC,GAC9B,OAAO+T,EAAM,EAAI7C,GAAqB0C,GAAWG,GAZbC,CAAiBhU,GAGzD+O,GAAQpW,OAAS,SAAE8M,EAA4BjQ,GAC3C,IAAM2Z,EAAO1J,EAAQ0J,KAGrB,OAAO,IAFe1J,EAAQqO,YAAe3E,EAAO0E,GAAa1E,GAAQJ,KAE/CvZ,EAAMiQ,ICjB5B,IAAAjO,SA6BJyc,mBAAA,SAAOC,EAAwBzM,GAC3B,SAASK,EAAUkH,EAAOjZ,EAAOP,GAC7B,IAAK0e,EAAMhY,KAAM8S,EAAOjZ,EAAOP,GAAQ,CACnC,IAAMwO,EAAMyD,GAASyM,EAAMzM,OAASjS,EAAO,gBAC3C,MAAsB,mBAARwO,EAAqBA,EAAI9H,KAAM8S,EAAOxZ,GAASwO,GAIrE,IAAMnI,EAAO/D,KAAK2N,QAAQqC,SAE1B,OAAOhQ,KAAKqc,SAAS,CACjBrM,SAAWjM,WACemT,EAAOjZ,EAAOP,GACpB,OAAOqG,EAAMmT,EAAOjZ,EAAOP,IAAUsS,EAAUkH,EAAOjZ,EAAOP,IAElEsS,KAIvB7R,sBAAIge,uBAAJ,WACI,OAAO9T,EAAqB,aAAcrI,uCAG9C7B,sBAAIge,+BAAJ,WACI,OAAOnc,KAAKsc,0CAGhBne,sBAAIge,6BAAJ,WACI,OAAOnc,KAAKqc,SAAS,CAAEjE,YAAa,qCAGxC+D,sBAAA,SAAUpJ,GACN,OAAO/S,KAAKqc,SAAS,CAAEtJ,cAG3BoJ,qBAAA,SAASI,GACL,OAAOvc,KAAKqc,SAAS,CAAEX,UAAYa,KAIvCJ,mBAAA,SAAOpd,GACH,OAAOiB,KAAKqc,SAAS,CAAE9F,MAAQxX,KAGnCod,oBAAA,SAAQpd,GACJ,OAAOiB,KAAKqc,SAAS,CACjBjF,OAAwB,mBAARrY,EAAqBA,EAAQA,EAAM,SAAEO,EAAGkb,EAAG3Y,GAAO,OAAAvC,GAAKA,EAAE8X,OAAQvV,IAAM2a,MAK/FL,iBAAA,SAAKpd,GACD,OAAOiB,KAAKqc,SAAS,CACjBvE,SAAW9X,KAAK2N,QAAQmK,SAAS7V,OAAQlD,MAKjDod,iBAAA,SAAKpd,GAUD,OAAOiB,KAAKqc,SAAS,CACjBtE,WAAa/X,KAAK2N,QAAQoK,WAAW9V,OAVzC,SAAwB0B,EAAMI,EAAMyR,EAA8B7H,GAC9D,GAAI3N,KAAKwX,UAAW7T,EAAMI,GAAS,CAC/B,IAAM0Y,EAAU1d,EAAIqF,KAAMoR,EAAQ7R,EAAM3D,KAAKtC,MAC7C,YAAmB,IAAZ+e,EAAqB1Y,EAAO/D,KAAKsY,QAASmE,EAAS1Y,EAAMyR,EAAQ7H,GAG5E,OAAO5J,OAQfoY,0BAAA,SAAcxX,GACV,OAAO3E,KAAKqc,SAAS,CAAEpE,aAAetT,KAI1CwX,oBAAA,SAAQpa,GACJ,IAAM2a,EAAW,IAAI5a,EAAUC,GAQ/B,OAAO/B,KAAKqc,SAAS,CACjBrE,eAAiBhY,KAAK2N,QAAQqK,eAAe/V,OAPjD,SAAmC0B,EAAMI,EAAMyR,GAC3CzR,GAAQA,EAAKwJ,SAAWmP,EAASC,YAAanH,EAAQzR,GAEtDJ,GAAQA,EAAK4J,SAAWmP,EAASE,UAAWpH,EAAQ7R,QAS5DxF,sBAAIge,wBAAJ,WACI,OAAOnc,sCAGXmc,sBAAA,SAAUxO,GACN,IAAMkP,EAAS,IAAIV,GAAwBnc,KAAK2N,SAEhD,OADAjO,GAAQmd,EAAOlP,QAASA,GACjBkP,GAGXV,mBAAA,SAAO7c,GACH,OAAOU,KAAKqc,SAAS,CAAEpe,MAAQqB,EAAG4Y,kBAAmB,KAGlDiE,QAAP,SAAa9U,GAET,OAAIA,GAAQA,aAAgB8U,GACjB9U,EAGY,mBAATA,EAAsBgQ,GAAMhQ,GAASpJ,GAAOoJ,QAvH9D,YAAasG,GAET3N,KAAK2N,QAAU,CAAEmK,SAAW,GAAIC,WAAa,GAAIC,eAAiB,IAC9DrK,GAAUjO,GAAQM,KAAK2N,QAASA,GAwH5C,SAAS6O,eAEOnF,GAAuCyF,EAAsC7e,GACzF,GAAI6e,aAAgBX,GAAyB,OAAOW,EAEpD,IAAMC,EAAU,IAAIZ,GAA0B,CAAE9E,KAAOyF,IACjDrL,EAAeqL,QAAkB,IAAV7e,EAAmB8d,GAAae,GAAOrL,aAAexT,EAEnF,YAAwB,IAAjBwT,EAA0BsL,EAAUA,EAAQ9e,MAAOwT,YAG9CuL,GAAyCrV,GACrD,OAAO,IAAIwU,GAA0B,CACjCle,MAAQ,KACRoZ,KAAO1P,EACPqU,UAAYR,cAOJvd,GAAuBqB,GACnC,IAAMwd,EAgBV,SAAoB7e,GAChB,cAAeA,GACX,IAAK,SACD,OAAO4d,OACX,IAAK,SACD,OAAOD,OACX,IAAK,UACD,OAAOvK,QACX,IAAK,WACD,OAAOpC,SACX,IAAK,YACD,OACJ,IAAK,SACD,OAAOhR,EAAcA,EAAMS,iBAAc,GA7BpCue,CAAW3d,GAKxB,OAHcwd,GAAQA,EAAKze,qBAAqByU,GAAgBkK,GAAQF,GAC1DzF,GAAMyF,IAEL7e,MAAOqB,YC9JV4d,GAAiB7V,EAAY3J,GACzC,OAAOuZ,GAAQpW,OAAQsb,GAAuBgB,KAAM9V,GAAOsG,QAASjQ,YAIxD0f,GAAuBC,EAA+BC,GAClE,IAAMC,EAAeC,EAAa,GAA4BH,EAAsBH,IAC9EO,EAAgBC,EAAY,GAA4BH,EAAcD,GAEtEK,WR2IyBC,GAC/B,IAAMC,EAAQ1f,OAAOuC,KAAMkd,GAErB/H,EAA6C,IAAI5G,SAAU,SAAU,aACpE4O,EAAM9b,IAAK,SAAA+b,GAAO,MAAA,sBACTA,eAAmBA,kBAC5BhR,KAAM,cAGb+I,EAAexX,UAAYF,OAAOE,UAElC,IAAM0f,EAAqC,IAAI9O,SAAU,SAAU,SAAU,UAAW,yDAGjF4O,EAAM9b,IAAK,SAAA+b,GAAO,MAAA,sBACTA,eAAmBA,qBAAyBA,qCACrDhR,KAAM,cAKb,OAFAiR,EAAW1f,UAAYF,OAAOE,UAEvB,CAAE0f,aAAYlI,kBQhKKmI,CAAmBP,GAE7C,YACOE,GACHlI,YAAc,IAAIkI,EAAkB9H,eAAgB4H,GACpDQ,iBAAmB9f,OAAOuC,KAAM+c,GAAgB1b,IAAK,SAAAlD,GAAO,OAAA4e,EAAe5e,KAC3E6L,WAAa8S,EAAoC,GAAID,EAAc,SAAAje,GAAK,OAAAA,EAAE4e,8BAUlF,SAA2BC,GACvB,IAAI1T,EAEJ,IAAK,IAAI5L,KAAOsf,EAAW,CACjB,IACAzC,EADYyC,EAAWtf,qBAGzB6c,IACkBjR,EAAlBA,GAAiC,IAAI2T,GAExBlc,SAAU,UAAYrD,EACV,iBAAd6c,EACH2C,GAAsB3C,EAAW7c,GACjCyf,GAAa5C,EAAW7c,IAIxC,OAAO4L,EAAe,CAAEA,gBAAiB,GA1BlC8T,CAAkBhB,IACrBnJ,WAAaoJ,EAAa,GAAIC,EAAe,SAAAV,GAAW,OAAAA,EAAQpP,QAAQoF,aA4BhF,SAASuL,GAAaE,EAAS3f,GAC3B,OAAO,SAAU2W,EAAQvX,GACrBugB,EAAQpa,KAAMoR,EAAQvX,EAAOY,IAIrC,SAASwf,GAAsB9B,EAAc1d,GACnC,IAAA2C,eAAEuN,UAAOC,YAASH,SACxB,OAAOE,EACH,SAAUyG,EAAQvX,GACduX,EAAQ3G,GAAQ5Q,EAAOY,IAE3B,SAAU2W,EAAQvX,GACd+Q,EAASwG,GAAU3G,GAAQ5Q,EAAOY,ICrEvC,OAAM4f,GAAe,CACxBC,KAAA,SAAsB/Q,GAAtB,wBAAsBA,MAClB,IAAMoF,EAAW/S,KAAK2e,cAChB/K,EAAO5T,KAAKoX,UAASwH,SAAW,QAAWjR,IAEjD,OAAOF,GACHzN,KACAA,KAAK6e,QACD9L,EAASlS,OAAQ+S,EAAMjG,EAAS3N,MAChC+S,EAASzB,OAAQtR,KAAK8e,GAAIlL,EAAMjG,EAAS3N,MAC7C2N,EAEA,SAAA2D,GACI/H,EAAK0H,IAAKK,KACNiF,OAAQ,EACRqI,SAAW,QACRjR,OAMnBoR,MAAA,SAAOpR,GAAP,WACI,oBADGA,MACIF,GACHzN,KACAA,KAAK2e,cAAcK,KAAMhf,KAAK8e,GAAInR,EAAS3N,MAC3C2N,EAEA,SAAAiG,GAAQ,OAAArK,EAAK0H,IAAK2C,KAAQ2C,OAAQ,EAAMqI,SAAW,SAAYjR,OAIvEsR,QAAA,SAAStR,GAAT,WACI,oBADKA,MACEF,GACHzN,KACAA,KAAK2e,cAAcM,QAASjf,KAAK8e,GAAInR,EAAS3N,MAC9C2N,EAEA,WACY,IAAAW,eAQR,OAPIA,EACAA,EAAWkC,OAAQjH,EAAMoE,GAGzBpE,EAAK6R,UAGF7R,MC7Cf7J,KAAQf,KAWZugB,GAAuB,MA0CA1X,QAAAsL,IAAdqM,YAKT,SAAiB/d,EAAYwF,KAEtBuY,cAAP,SAAqDrB,EAA8BsB,gBAAAA,MACvE,IAAApe,IACR,OAAOoe,EACH,SAAE/e,EAAGC,GAAO,OAAAU,EAASX,EAAGyd,GAAQxd,EAAGwd,KACnC,SAAEzd,EAAGC,GAAO,OAACU,EAASX,EAAGyd,GAAQxd,EAAGwd,MAU5C3f,sBAAWghB,cAAX,WAAA,WACI,OAAO9H,GAAMrX,MACRoX,OAAQ,SAAA9X,GAAK,OAAAA,EAAIA,EAAEwf,GAAK,OACxBvI,MAAO,SAAAjX,SACJ,aAAWiK,EAAKlL,UAAUghB,aAAgB/f,uCAI/C6f,eAAP,SAAwEtB,GACpE,OAAO7d,KAAKzC,SAAUsgB,IAGnBsB,YAAP,SAAiBtB,GACb,OAAO7d,KAAKsf,OAAO,CAAE3J,WAAakI,KAUtC1f,sBAAIghB,sBAAJ,WACI,OAAOnf,KAAKuf,eAAkBvf,KAAKuf,aAAe,IAAIvf,KAAKwf,cAAexf,wCAY9Emf,gCAAA,WAAsB,OAAO,IAAInf,KAAK6V,eAAgB7V,KAAK4V,sBAI3DzX,sBAAIghB,oCAAJ,WAAuB,OAAOnf,KAAK2V,4CAEnCxX,sBAAIghB,4BAAJ,WACI,IAAI1C,EAAUzc,KAAK8V,mBAEnB,IAAK2G,EAAS,CACV,IAAM1Y,EAAO/D,KAAK4V,oBAClB6G,EAAU,GAIV,IAFQ,IAAA9G,sBAESnU,EAAAxB,KAAKie,iBAAL5c,WAAAA,IAAuB,CAAnC,IAAIyc,OACCjf,EAAMif,EAAKpgB,KACbO,EAAQ0X,EAAY9W,GAEpBif,EAAKtG,UAAWvZ,EAAO8F,EAAMlF,MAC7B4d,EAAS5d,GAAQZ,GAIzB+B,KAAK8V,mBAAqB2G,EAG9B,OAAOA,mCAGX0C,+BAAA,SAAmBM,GACf,IAAKA,EAAO,QAAOzf,KAAK0f,mBAAoB1f,KAAKyc,SAEjD,IAAIkD,EAAKlD,GAAyB,EAC9BmD,EAAe5f,KAAKwU,aAAexU,KAAK4V,oBAAsB5V,KAAK2V,WACnEwI,EAAene,KAAKyV,YAExB,IAAK,IAAIqI,KAAQ2B,EACRtB,EAAWL,GAAOtG,UAAWoI,EAAK9B,GAAU6B,EAAMF,EAAM3B,OAChDrB,EAAZA,GAAsB,IAAMqB,GAAS6B,GAG1C,OAAOlD,GAGX0C,wBAAA,SAAYtgB,GACA,IAAA+W,2BACR,QAAKA,IAEE/W,EACCmB,KAAKyV,YAAa5W,GAAM2Y,UAAWxX,KAAK2V,WAAY9W,GAAO+W,EAAqB/W,KAC/EF,GAASqB,KAAKyc,WAG3B0C,sBAAA,SAAUtgB,GACN,GAAIA,EAAK,CACG,IAAA+W,2BACR,GAAIA,EAAsB,OAAOA,EAAqB/W,GAG1D,OAAO,MAGXsgB,mBAAA,WACI,OAAkB,MAAXnf,KAAK8e,IAGhBK,iBAAA,SAAKtgB,GACD,OAAsB,MAAfmB,KAAMnB,IAKjBsgB,mBAAA,SAAOtgB,EAAc8O,SACX1P,EAAQ+B,KAAMnB,GAEpB,OADAmB,KAAKiR,YAAQpS,QAAQ,QAAYsc,OAAQ,GAASxN,IAC3C1P,GAIXkhB,mBAAA,SAAOxR,GAAP,WACUkS,EAAUlS,GAAWA,EAAQkS,QAMnC,OAJA7f,KAAK0T,YAAa,WACdnK,EAAKuW,QAAS,SAAE7hB,EAAOY,GAAS,OAAA0K,EAAM1K,GAAQghB,EAAU,UAAO,KAChElS,GAEI3N,MAIXmf,sBAAA,WACI,IAAMlK,EAAcjV,KAAKkT,OAIzB,OAAOlT,KAAKmT,UAAY8B,EAAQA,GAASA,EAAM/B,QAWnD/U,sBAAIghB,uBAAJ,WAAoB,OAAOnf,KAAK2V,WAAY3V,KAAKqf,kBACjD,SAAQ/f,GAAciW,GAAcvV,KAAMA,KAAKqf,YAAa/f,oCAkB5D6f,sBAAA,SAAUvM,gBAAAA,MAIN,IAHM,IAAArV,EAAW,OAGAwiB,wBAAA1e,WAAAA,IAAkB,CAA9B,IAAIyc,OACCjf,EAAMif,EAAKpgB,KACjBO,EAAQ2U,EAAQ/T,GAEhBtB,EAAUsB,QAAkB,IAAVZ,EAAmB6f,EAAKrM,eAAiBxT,EAG/D,OAAOV,GAwBX4hB,wBAAA,SAAYvM,EAAyBjF,KAGrCwR,mBAAA,SAAOxR,gBAAAA,MACH,IAAMqS,EAAc,IAAUhgB,KAAKtB,YAAcsB,KAAK2V,WAAY,CAAErF,OAAQ,IAI5E,OAFI3C,EAAQsS,WAAWD,EAAK9L,cAAgBlU,KAAKuP,YAE1CyQ,GAIXb,6BAAA,SAAiBe,GAKb,IAJA,IAAIriB,EAAY,EAER8X,sBAEcnU,EAAAxB,KAAKie,iBAAL5c,WAAAA,IAAuB,CAAxC,IAAI2U,OACGvU,SACJkO,EAAQqG,EAAUhG,SAAUhQ,KAAM2V,EAAYlU,GAAQA,GAEtDkO,IACAuQ,EAAQze,GAASkO,EACjB9R,KAIR,OAAOA,GAIXshB,iBAAA,SAAKtgB,GACD,OAAOmB,KAAMnB,IAIjBsgB,iBAAA,SAAKvM,EAAcjF,GACf,GAAIiF,EAAQ,CACR,IAAMc,EAAc1T,KAAKmW,mBAAoBvD,EAAQjF,GACrD+F,GAAeA,EAAYD,SAG/B,OAAOzT,MAQXmf,oBAAA,SAAQxR,GAIJ,IAHM,IAAAiG,EAAO,GACP+B,sBAEgBnU,EAAAxB,KAAKie,iBAAL5c,WAAAA,IAAuB,CAAxC,IAAI2U,OACGzT,SACJtE,EAAQ0X,EAAYpT,GAExB,QAAc,IAAVtE,EAAkB,CAElB,IAAMkiB,EAASnK,EAAUoB,OAAOhT,KAAMpE,KAAM/B,EAAOsE,EAAMoL,QAG1C,IAAXwS,IAAoBvM,EAAMrR,GAAS4d,IAI/C,OAAOvM,GAIXuL,mBAAA,SAAOlL,EAAMtG,GACT,OAAOsG,GAMXkL,qBAAA,SAASzhB,EAAeO,EAAa0P,GAArC,WA8CI,OA5CA3N,KAAK0T,YAAa,WAQd,UAPMhF,EAAQhR,EAAKyE,MAAO,KACtBie,EAAQ1R,EAAK7Q,OAAS,EACtBigB,EAAQpP,EAAM0R,GAEdlJ,EAAQ3N,EAGHzL,EAAI,EAAGA,EAAIsiB,EAAGtiB,IAAK,CACxB,IAAMe,EAAM6P,EAAM5Q,GAGd6F,EAAUuT,EAAMpP,IAAMoP,EAAMpP,IAAKjJ,GAAQqY,EAAOrY,GAGpD,IAAK8E,EAAM,CACP,IAAMwa,EAAYjH,EAAMzB,YACxB,IAAI0I,EAYC,OAVD,IAAIkC,EAAWlC,EAAWtf,GAAMgC,SAG5B8M,GAAWA,EAAQkS,SAAWQ,EAAS5K,aACvC4K,EAASC,MAAO3S,GAGpBuJ,EAAOrY,GAAQ8E,EAAO0c,EAM9BnJ,EAAQvT,EAIRuT,EAAMjG,IACNiG,EAAMjG,YAAQ6M,GAAS7f,KAAS0P,GAGhCuJ,EAAO4G,GAAS7f,IAIjB+B,MAIX7B,sBAAIghB,+BAAJ,WACI,OAAOnf,KAAKmT,UAAY,KAAOnT,KAAKkT,wCAIxCiM,qBAAA,WACI,IAAInf,KAAKoL,UAAT,CAIA,IAFQ,IAAAuK,sBAESnU,EAAAxB,KAAKie,iBAAL5c,WAAAA,IAAuB,CAAnC,IAAIyc,OACLA,EAAK1C,QAASpb,KAAM2V,EAAYmI,EAAKpgB,OAGzC+O,aAAM2O,qBAIV+D,kBAAA,SAAMpT,EAAkBE,EAAeyL,EAAevL,EAAgBoU,IAChEA,GAAYtT,IAASM,QAASxB,EAAOE,EAAOjM,KAAKgU,eAAiB,IAAM0D,OACnEvL,GACHgT,MAAUnf,KACVwgB,wBAA0BxgB,KAAKyV,gBAIvC0J,0BAAA,WACI,OAAO1S,aAAMuH,yBAAkB,SAInCmL,gCAAA,SAAoBvM,EAAiBjF,KAYrCwR,qBAAA,SAASzP,EAAoDhM,GACnD,IAAA3E,OAAkB,IAAZ2E,EAAqB,SAAE6T,EAAGiD,GAAO,OAAA9K,EAAStL,KAAMV,EAAS6T,EAAGiD,IAAM9K,EACxEiG,kBAEN,IAAK,IAAM9W,KAAOmB,KAAK2V,WAAY,CAC/B,IAAM1X,EAAQ0X,EAAY9W,QACZ,IAAVZ,GAAmBc,EAAKd,EAAOY,KAI3CsgB,uBAAA,SAAWsB,EAA+B/c,GACtC,IAAM3E,OAAkB,IAAZ2E,EAAqB+c,EAAQA,EAAMjT,KAAM9J,GACrD,OAAOgd,EAAiB,GAAI1gB,KAAK2V,WAAY5W,IAGjDogB,aAAEwB,OAAOlQ,UAAT,WACI,OAAO,IAAImQ,GAAsB5gB,OAGrCmf,qBAAA,WACI,OAAO,IAAIyB,GAAsB5gB,OAIrCmf,kBAAA,WACI,IAAMze,EAAkB,GAIxB,OAFAV,KAAK8f,QAAS,SAAE7hB,EAAOY,GAAS,OAAA6B,EAAK8B,KAAM3D,KAEpC6B,GAhaJye,aAAYtE,GAgBZsE,MAAK9H,GAAMuE,QAAS3d,MAAO,MAlBzBkhB,MAjBZzX,EAAO,CAEJ6M,UAAY,IAGZnB,iBAAmB,SAGnBiM,YAAc,OAEjBlY,EAAY,CACT5J,SAAWkM,EAAW1C,MACtB4O,WAAalM,EAAW1C,MACxBuH,WAAa7E,EAAW1C,MACxB8Z,WAAapX,EAAWxL,MACxBohB,YAAc5V,EAAWC,cAEhByV,KAyMT,YAAa/I,EAAiByB,GAA9B,MACIpL,aAAOyS,YAlKX3V,oBAAwB,EAmKpBA,EAAKoM,WAAa,GAElB,IAAMhI,EAAUkK,GAAa,GACvBjF,GAAWjF,EAAQ4I,MAAQhN,EAAKgN,MAAOH,EAAUzI,GAAayI,IAAc,UAElF3K,IAwPR,SAAoB+J,EAAgB5C,EAAiBjF,GACjD,GAAI6I,GAAkBhB,EAAQ5C,EAAQjF,GAAW,CACrC,IAAA8H,gBACJY,SAEJ,IAAK,IAAI7R,KAAQoO,EACR6C,EAAajR,KACD6R,EAAbA,GAAuB,IACf7T,KAAM,IAAKgC,OAIvB6R,GACAI,GAAqBjB,EAAQa,EAAS,CAAEzD,UAAUjF,IArQtCmT,CAAWvX,EAAMqJ,EAAQjF,GAEzCpE,EAAKqM,oBAAsBrM,EAAKoM,WAAa,IAAIpM,EAAKwU,WAAYxU,EAAMqJ,EAAQjF,GAEhFpE,EAAK+B,WAAY8K,EAAUyB,GAEvBtO,EAAKkB,cAAelB,EAAKkB,aAAamS,UAAWrT,EAAMA,QAoN3D4V,GAAM9gB,UAAW0X,GAAkB0I,IASvC,YAAajJ,EAAgBlW,EAAsBqO,GAC/C3N,KAAK8e,GAAKxf,EAAEwf,GAIpBK,GAAM9gB,UAAU0f,WAAagD,GAKzB,YAAazhB,GACTU,KAAK8e,GAAKxf,EAAEwf,GAIpBK,GAAM9gB,UAAUwX,eAAiBmL,GAEjC,IAAMC,GAAchK,GAAQpW,OAAO,CAAE5C,WAAQ,GAAU,MACvDkhB,GAAM9gB,UAAUoX,YAAc,CAAEqJ,GAAKmC,IACrC9B,GAAM9gB,UAAU4f,iBAAmB,CAAEgD,IAoBrC,QAKIL,kBAAA,WACY,IAAApL,cACJ0L,EAAW1L,EAAOyI,iBAAkBje,KAAKic,OAE7C,MAAO,CACHkF,MAAQD,EACRjjB,MAAQijB,EAAW,CAAEA,EAASxjB,KAAM8X,EAAQ0L,EAASxjB,YAAW,QARxE,YAA8B8X,GAAAxV,YAAAwV,EAFtBxV,SAAM,ECvflB,WAAmCwH,QAAA6I,UAK/B+Q,iBAAA,SAAK9hB,GACDU,KAAKkX,MAAOlX,KAAK8d,MAASxe,GAK9BnB,sBAAIijB,0BAAJ,WACI,OAAOphB,KAAKqhB,SAAYrhB,KAAKqhB,OAASrhB,KAAKkX,MAAM5C,mBAAoBtU,KAAK8d,YAG9E,SAAWxe,GACPU,KAAKqhB,OAAS/hB,mCAIlBnB,sBAAIijB,+BAAJ,WACI,OAAOphB,KAAKkX,MAAMzB,YAAazV,KAAK8d,2CApBxC,YAAuB5G,EAAyB4G,EAAe7f,EAAiBqjB,GAAhF,MACI7U,aAAOxO,gBADYsL,QAAA2N,EAAyB3N,OAAAuU,EAAgCvU,SAAA+X,IAwBpFnjB,OAAOqI,eAAgB4a,GAAW/iB,UAAW,eAAgB,CAAEJ,MAAQ,OCtD/D,IAAAyB,KAAQnC,KAUhB4hB,GAAMnX,SAAW,SAA+BpB,GAC5CkM,GAAc9K,SAAS5D,KAAMpE,KAAM4G,GAGnC,MAAMnI,EAAQuB,QAE6BwH,MAAAZ,EAAUia,YAC1CU,QAAQ9iB,EADF8iB,KAAhB9Z,GAAgB8Z,IAAN,4DAIXvhB,KAAKuhB,kBAAoBA,EAIrB9iB,EAAMoiB,aAAeja,EAAUia,aAC/B7gB,KAAK6gB,WAAaU,IAI1BpC,GAAMjY,SAAW,SAAU9F,EAA8BwF,GACrD,IAAM+C,EAAoB/C,EAAUvI,UAG9BmD,qBAoBV,SAAuBA,OAAEjE,aAAUoY,eAAY0J,gBACrCje,EAAauU,GAAcpY,GAAY,IAGzC8hB,GAAkBA,KAAeje,IACjCA,EAAYie,QAAgB,GAGhC,OAAOje,qBA5BCsJ,eAAYD,iBAAc+W,qCAClC9hB,GAAQM,KAAK3B,UAAWmjB,GAExBpgB,EAAWsJ,WAAanN,GAAU6D,EAAWsJ,YAAc,GAAIA,GAC/DtJ,EAAWqJ,aAAeA,EAE1BqI,GAAc5L,SAAS9C,KAAMpE,KAAMoB,EAAYwF,GAG/C5G,KAAKuhB,kBAAkB7Z,OAAQtG,EAAWkN,YAAc,IAGxDtO,KAAK6gB,WAAazf,EAAWyf,WAC7B7gB,KAAK6gB,WAAWxiB,UAAU6Y,MAAQlX,KAE9BoB,EAAW2R,WAAW/S,KAAK6gB,WAAWxiB,UAAU2U,UAAY5R,EAAW2R,mBDzD5CtU,GACvB,IAAAJ,cACA4f,qBAEFwD,EAAgB,IAAIxS,SAAS,QAAS,2CAErCgP,EAAiBlc,IAAK,SAACP,GAAa,MAAA,gCAA4BsL,KAAM,gBAG7E2U,EAAcpjB,UAAUqjB,eAAiBN,GAEzC,IAAiB,QAAArB,IAAA1e,WAAAA,IAAkB,CAA9B,IAAIyc,OACGrc,SAERtD,OAAOqI,eAAgBib,EAAcpjB,UAAWoD,EAAM,CAClDqG,IAAM,IAAImH,SAAU6O,EAAK6D,gBAAkB,wCAClBlgB,gDACKA,qKAIZA,+CAAiDA,uCAC/D,wCACqBA,wEAE2BA,8CAClCA,+CAAiDA,oBAAsBA,2BAKjGpD,EAAUmhB,cAAgBiC,EC4B1BG,CAAmB5hB,OC1Df,IAAAyD,KAAUD,KAAUZ,KAAIE,KACxB2Q,aACFoO,GAAUtO,GAAeyB,OAAQ8M,GAAQvO,GAAe6B,cA+C9C2M,GAAkBzT,EAA6BuP,EAAoBlQ,GACvE,IAEJ6H,EAFI0B,UAIJ5I,EAAW0M,SACXxF,EAASqI,aAAiB3G,EAAQ2G,EAAe3G,EAAMrW,OAAQgd,EAAOlQ,GAElEW,EAAW0M,QAAUnI,gBAAcyI,QACnC1Y,GAAI4S,EAAQA,EAAOpC,iBAAkB9E,EAAWyG,kBAAmBzG,KAIvEkH,EAASqI,aAAiB3G,EAAUvJ,EAAQ5G,MAAQ8W,EAAMvN,QAAUuN,EAAiB3G,EAAMrW,OAAQgd,EAAOlQ,IAE/FuF,OACHsC,EAAOtC,SAAW5E,IAClBuT,GAASvT,EAAYkH,EAAOlF,UACbhC,EAAW0T,oBAAuB1T,EAAW0T,kBAAoB,KACzExf,KAAMgT,IAIjBqM,GAASvT,EAAYkH,GAKrB,IAAAyM,gBAGR,OAFAA,GAAeA,EAAYrF,UAAWtO,EAAYkH,GAE3CA,WAIKJ,GAAMH,EAAwBC,EAAeiG,GACrDlG,EAAM+F,QACF/F,EAAM+F,QAAUnI,gBAAcyI,QAC9BxY,GAAKoS,EAAOA,EAAM9B,iBAAkB6B,EAAMF,kBAAmBE,IAIjE6M,GAAO7M,EAAOC,GACdiG,GAASjG,EAAMkG,WAGX,IAAA6G,gBACRA,GAAeA,EAAYtF,YAAa1H,EAAOC,YAgBnCgN,GAAc5T,EAA6BX,GACjD,IAAAwU,gBACN,SAAIA,IAAgC,IAAjBxU,EAAQyU,QACvB9T,EAAW+T,OAAOD,KAAMD,IACjB,YAeCG,GAAUC,EAAiBrL,GAEvC,IAAI4H,GADJyD,EAAOrL,EAAM/L,KAAQ+L,GACM4H,IAEvBA,GAAwB,IAAhBA,IACRyD,EAAOzD,GAAO5H,YAKNsL,GAAaD,EAAiBrL,UACnCqL,EAAOrL,EAAM/L,KACpB,IAAI2T,EAAK5H,EAAM4H,IACXA,GAAwB,IAAhBA,UACDyD,EAAOzD,YAIN2D,GAAaF,EAAiBrL,UACnCqL,EAAOrL,EAAMwL,SAAUxL,EAAMmI,cAE5B,IAAAP,OACF,MAANA,IAAgByD,EAAOzD,GAAO5H,GAkBlC,QAUIyL,oBAAA,SAAQ9N,GAKJ,IAJM,IAAEjF,cAAQ3G,cACR2L,iBAGgB+B,IAAAtV,WAAAA,KAAfqS,QACOD,OAAQxK,GAGpBA,EAAO+Y,mBACPY,GAAqB3Z,EAAQ2L,GAKjC,IAAwB,QAAAiC,IAAAE,WAAAA,IAAQ,CAA3B,IAAIrD,OACLjQ,GAAUwF,EAAQ,SAAUyK,EAAYzK,OAAQ2L,GAOpD,IAHM,IAAEiO,aAAOC,mBAGIC,IAAAC,WAAAA,IAAO,CAArB,IAAIxN,OACLhS,GAAUgS,EAAQ,MAAOA,EAAQvM,EAAQ2L,GACzCpR,GAAUyF,EAAQ,MAAOuM,EAAQvM,EAAQ2L,GAI7C,IAAmB,QAAAqO,IAAAC,WAAAA,IAAV1N,OACLhS,GAAUgS,EAAQ,SAAUA,EAAQvM,EAAQ2L,GAC5CpR,GAAUyF,EAAQ,SAAUuM,EAAQvM,EAAQ2L,GAG5C5U,KAAKmjB,QACL1f,GAAUwF,EAAQ,OAAQA,EAAQ2L,IAGlCiO,EAAMhlB,QAAUilB,EAAQjlB,SACxB4F,GAAUwF,EAAQ,SAAUA,EAAQ2L,GAGxC5U,KAAKsT,QAAUG,GAAQxK,EAAQ4L,QAlDnC,YAAuB5L,EACAqK,EACAuP,EACAC,EACAlT,EACAuT,GALAnjB,YAAAiJ,EACAjJ,YAAAsT,EACAtT,WAAA6iB,EACA7iB,aAAA8iB,EACA9iB,YAAA4P,EACA5P,YAAAmjB,WAiDXP,GAAqBtU,EAA6BX,GAC9DW,EAAWsI,KAAM,OAAQ,sBAAuB,4GAA6GtI,EAAW0T,kBAAmBrU,EAAQV,QACnMqB,EAAW0T,uBAAoB,ECtO3B,IAAAxO,YAAOC,aAAQgB,2BAOP2O,GAAgB9U,EAA6B+U,EAAe1V,EAAsB5G,GAC9F,IAAMuM,EAASE,GAAOlF,GAChBsB,EAAwB,GAE1BiT,EAoDR,SAAyBvU,EAA6BgV,EAAiB1T,EAAwBiI,EAAwB0L,GAOnH,IANM,IAAAC,UAAOnB,WACTtb,GAAgBwc,GAAc1L,EAAU9Q,SAAYuH,EAAW0M,QAE/DqE,GADcxH,EAAUtB,MACVjI,EAAW4I,MAAM7Y,UAAUghB,aACzCoE,EAAapB,EAAOxkB,WAEL6lB,IAAAriB,WAAAA,IAAS,CAAvB,IAAMsiB,OACHzM,EAAQyM,EAAOH,EAAOG,EAAMtE,KAAmBmE,EAAOG,EAAKxY,KAAQ,KAEvE,GAAI+L,GACA,GAAInQ,GAAS4c,IAASzM,EAAO,CACzB,IAAI2G,EAAQ8F,EAAKhO,YAAcgO,EACzBjQ,EAAcwD,EAAMf,mBAAoB0H,EAAOhG,GACrDnE,GAAe9D,EAAOpN,KAAMkR,GAExBwD,EAAMwI,WAAYL,IAClBoD,GAAae,EAAOtM,SAK5BA,EAAQ6K,GAAkBzT,EAAYqV,EAAM9L,GAC5CwK,EAAO7f,KAAM0U,GACboL,GAAUkB,EAAOtM,GAIzB,OAAOmL,EAAOtf,MAAO0gB,GAhFTG,CAAgBtV,EAAY+U,EAAOzT,EAAQjC,EAAS5G,GAEhE,GAAI8b,EAAMhlB,QAAU+R,EAAO/R,OAAQ,CAC/B,IAAIgmB,EAcZ,SAA6BvV,EAA6BuU,EAAiBlV,GACvE,IAAIiD,EAAKjD,EAAQiD,GAGjB,GAAU,MAANA,EAeJ,OAAOsR,GAAc5T,EAAYX,GAb7B,IAAMmW,EAASxV,EAAW+T,OAAOxkB,OAASglB,EAAMhlB,QAGhD+S,EAAKiL,OAAQjL,IACJ,IAAIA,GAAe,EAATkT,GACflT,EAAK,IAAIA,EAAK,GACTkT,EAALlT,IAAcA,EAAKkT,GAIvB,OAOR,SAAuBrmB,EAAgBmT,EAAaiS,GAChD,IAAK,IAAI9R,EAAItT,EAAOI,OAAS,EAAGC,EAAIiT,EAAI8R,EAAMhlB,OAAa+S,GAAL9S,EAASA,IAAKiT,IAChEtT,EAAQsT,GAAMtT,EAAQK,GAG1B,IAAKA,EAAI,EAAGiT,EAAIH,EAAI9S,EAAI+kB,EAAMhlB,OAAQC,IAAKiT,IACvCtT,EAAQsT,GAAM8R,EAAO/kB,GAdrBimB,CAAczV,EAAW+T,OAAQzR,EAAIiS,IAC9B,EA9BQmB,CAAoB1V,EAAYuU,EAAOlV,GACtD,GAAI8G,GAAanG,EAAYX,GACzB,OAAO,IAAIgV,GAAuBrU,EAAYgF,EAAQuP,EAAO,GAAIjT,EAAQiU,GAGzEvV,EAAW0T,mBAAoBY,GAAqBtU,EAAYX,GAIxE2F,GAAUG,GAAQnF,GCpBtB,QASI2V,iBAAA,SAAQC,EAA6CxgB,GAMjD,IALQ,IAAA2e,cACFxkB,WACFsmB,EAAM7lB,MAAOT,GACbkB,EAAM2E,EAAUwgB,EAAU1W,KAAM9J,GAAYwgB,EAEvCpmB,EAAI,EAAGiT,EAAI,EAAGjT,EAAID,EAAQC,IAAK,CACpC,IAAM6hB,EAAM5gB,EAAKsjB,EAAQvkB,GAAKA,QACtB,IAAR6hB,IAAoBwE,EAAKpT,KAAQ4O,GAOrC,OAJI7hB,IAAMiT,IACNoT,EAAItmB,OAASkT,GAGVoT,GAOXF,kBAAA,SAASllB,EAAyC2E,GAK9C,IAJQ,IAAA2e,cACFxkB,WACF6R,EAAWhM,EAAU3E,EAAIyO,KAAM9J,GAAY3E,EAEtCjB,EAAI,EAAGA,EAAID,EAAQC,IACxB4R,EAAU2S,EAAQvkB,GAAKA,IAW/BmmB,wBAAA,SAAeG,EAA2C1gB,GAKtD,IAJQ,IAAA2e,cACFxkB,WACF6R,EAAWhM,EAAU0gB,EAAQ5W,KAAM9J,GAAY0gB,EAE1CtmB,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC7B,IAAMqmB,EAAMzU,EAAU2S,EAAQvkB,GAAKA,GACnC,QAAY,IAARqmB,EAAiB,OAAOA,IAUpCF,oBAAA,SAAWvU,EAAmF2U,GAC1F,YAAgB,IAATA,EAAkBrkB,KAAKqiB,OAAO7J,OAAQ9I,GAAa1P,KAAKqiB,OAAO7J,OAAQ9I,EAAU2U,IAI5FJ,mBAAA,SAAOzQ,EAAiB8Q,GACpB,OAAOtkB,KAAKqiB,OAAOtf,MAAOyQ,EAAO8Q,IAGrCL,qBAAA,SAASM,GACL,OAAOvkB,KAAKqiB,OAAOrc,QAAShG,KAAK8H,IAAKyc,KAG1CN,sBAAA,SAAUO,GACN,OAAOnT,QAASrR,KAAK8H,IAAK0c,KAG9BP,oBAAA,SAAQvU,EAAyBhM,GAC7B,IAAM3E,EAAM0lB,GAAqB/U,GACjC,OAAO1P,KAAK+B,IAAK,SAAA2iB,GAAK,OAAA3lB,EAAK2lB,GAAMA,OAAI,GAAQhhB,IAGjDugB,kBAAA,SAAMvU,EAAyBhM,GAC3B,IAAM3E,EAAM0lB,GAAqB/U,GACjC,OAAO1P,KAAK2kB,WAAY,SAAAD,GAAK,OAAA3lB,EAAK2lB,GAAMA,OAAI,GAAQhhB,IAGxDugB,kBAAA,SAAMvU,EAAyBhM,GAC3B,OAAO2N,QAASrR,KAAK4kB,KAAMlV,EAAUhM,KAGzCugB,qBAAA,SAASvU,EAA+ChM,GACpD1D,KAAK6P,KAAMH,EAAUhM,IAGzBugB,oBAAA,WACI,OAAOjkB,KAAKqiB,OAAOzP,UAGvBqR,qBAAA,WACI,OAAOjkB,KAAKqiB,OAAOwC,WAGvBZ,mBAAA,SAAOvU,EAAyBhM,GAC5B,IAAM3E,EAAM0lB,GAAqB/U,GACjC,YAAsE,IAA/D1P,KAAK2kB,WAAY,SAAAD,GAAK,QAAA3lB,EAAK2lB,SAAM,GAAgBhhB,IAG5DugB,mBAAA,SAA0BplB,GACtB,OAAOmB,KAAK+B,IAAK,SAAAmV,GAAS,OAAAA,EAAOrY,MAGrColB,mBAAA,WAAc,OAAOjkB,KAAKqiB,OAAQ,IAElC4B,kBAAA,WAAa,OAAOjkB,KAAKqiB,OAAQriB,KAAKqiB,OAAOxkB,OAAS,IAEtDomB,gBAAA,SAAIa,GACA,IAAMvC,EAAQuC,EAAU,EAAIA,EAAU9kB,KAAKqiB,OAAOxkB,OAASinB,EAC3D,OAAO9kB,KAAKqiB,OAAQE,QA3H5B,eA+HA,IAAMwC,GAAO,SAAAzlB,GAAK,OAAAA,GAElB,SAASmlB,GAAwB/U,GAC7B,GAAgB,MAAZA,EAAmB,OAAOqV,GAE9B,cAAerV,GACX,IAAK,WAAa,OAAOA,EACzB,IAAK,SACD,IAAMsV,EAAO7mB,OAAOuC,KAAMgP,GAE1B,OAAO,SAAApQ,GACH,IAAgB,QAAA2lB,EAAAD,EAAA3jB,WAAAA,IAAM,CAAjB,IAAIxC,OACL,GAAI6Q,EAAU7Q,KAAUS,EAAGT,GACvB,OAAO,EAGf,OAAO,GAEf,QAAU,MAAM,IAAI0N,MAAO,qBCzI3B,IAAA9I,KAAUD,KACZiR,kBAAajB,YAAOC,sBAyCVyR,GAAY5W,EAA6B6W,EAAkBxX,GACvE,IAAMmV,EAqBV,SAA2BxU,EAAY6W,EAAUhK,GAI7C,IAHA,IAAI2H,EAAUxkB,MAAO6mB,EAAStnB,QAC1B2lB,EAAUlV,EAAWkV,MAEhB1lB,EAAI,EAAGiT,EAAI,EAAGjT,EAAIqnB,EAAStnB,OAAQC,IAAK,CAC7C,IAAIoZ,EAAQ5I,EAAWxG,IAAKqd,EAAUrnB,IAClCoZ,IACA4L,EAAS/R,KAAQmG,EACjBsL,GAAagB,EAAOtM,GACpB9B,GAAM9G,EAAY4I,EAAOiE,IAMjC,OAFA2H,EAAQjlB,OAASkT,EAEV+R,EApCSsC,CAAkB9W,EAAY6W,EAAUxX,EAAQwN,OAChE,GAAI2H,EAAQjlB,OAAQ,CAChB,IAAMyV,EAASE,GAAOlF,GAItB,GAmCR,SAAsBA,EAAYwU,GAK9B,IAJA,IAAI/e,EAASuK,EAAW+T,OACpBA,EAAS/T,EAAW+T,OAAS/jB,MAAOyF,EAAKlG,OAASilB,GAClDU,EAAQlV,EAAWkV,MAEd1lB,EAAI,EAAGiT,EAAI,EAAGjT,EAAIiG,EAAKlG,OAAQC,IAAK,CACzC,IAAIoZ,EAAQnT,EAAMjG,GAEd0lB,EAAOtM,EAAM/L,OACbkX,EAAQtR,KAAQmG,GAIxBmL,EAAOxkB,OAASkT,EAlDZsU,CAAa/W,EAAYwU,EAAQjlB,QAE7B4W,GAAanG,EAAYX,GACL,IAAIgV,GAAuBrU,EAAYgF,EAAQ,GAAIwP,EAAS,IAAI,GACxErP,cAIZH,GAAUG,GAAQnF,GAI1B,OAAOwU,ECtEH,IAAAtP,YAAOC,aAAQgB,kBAGjB6Q,GAAgB,CAAE3Q,QAAS,YAGjB4Q,GAAqBjX,EAA6B+U,EAAkB1V,EAA6BgH,GAC7G,IAAMrB,EAASE,GAAOlF,GAEhBuU,EAsHV,SAA2Bhe,EAAMpH,EAAQkQ,GAMrC,IALA,IAAI6X,EAAc/nB,EAASA,EAAOI,OAAS,EACvCwkB,EAAc/jB,MAAOknB,GACrBhC,EAAkB,GAClBnE,EAAcxa,EAAKqS,MAAM7Y,UAAUghB,YAE9BvhB,EAAI,EAAGiT,EAAI,EAAGjT,EAAI0nB,EAAK1nB,IAAK,CACjC,IAAI2nB,EAAMhoB,EAAQK,GAElB,IAAI2nB,IAASjC,EAAOiC,EAAKpG,MAAmBmE,EAAOiC,EAAIta,KAAvD,CAIA,IAAI+L,EAAQ6K,GAAkBld,EAAM4gB,EAAK9X,GACzC0U,EAAQtR,KAAQmG,EAChBoL,GAAUkB,EAAOtM,IAMrB,OAHAmL,EAAOxkB,OAASkT,EAChBlM,EAAK2e,MAAWA,EAET3e,EAAKwd,OAASA,EA3IPqD,CAAkBpX,EAAY+U,EAAO1V,GAEnD,GAAIkV,EAAMhlB,OAAQ,CACd,IAAMgmB,EAAW3B,GAAc5T,EAAYX,GAE3C,GAAI8G,GAAanG,EAAYqG,EAAS2Q,GAAgB3X,GAElD,OAAO,IAAIgV,GAAuBrU,EAAYgF,EAAQuP,EAAM9f,QAAS,GAAI,GAAI8gB,GAG7EvV,EAAW0T,mBAAoBY,GAAqBtU,EAAYX,GAIxE2F,GAAUG,GAAQnF,YAINqX,GAAgBrX,EAAY+U,EAAO1V,GAC/C,IAAM2F,EAASE,GAAOlF,GAChBsB,EAAS,GAEX8S,EAAWpU,EAAW+T,OACtBQ,EA2CR,SAAsBvU,EAA6B7Q,EAAgBmS,EAAwBjC,GAWvF,IAVA,IAAI0U,EAAc/jB,MAAOb,EAAOI,QAC5B2lB,EAAkB,GAClBzc,GAAiC,MAAjB4G,EAAQ5G,OAAuB4G,EAAQ5G,SAAYuH,EAAW0M,QAC9E4K,EAActX,EAAWkV,MACzBqC,EAAcvX,EAAW+T,OACzBhD,EAAc/Q,EAAW4I,MAAM7Y,UAAUghB,YACzCyG,EAAc,GACdC,GAAc,EAGTjoB,EAAI,EAAGiT,EAAI,EAAGjT,EAAIL,EAAOI,OAAQC,IAAK,CAC3C,IAAI6lB,EAAQlmB,EAAQK,GAChBoZ,EAAgB,KAEpB,GAAIyM,EAAM,CACN,IAAI7E,EAAM6E,EAAMtE,GACZlU,EAAMwY,EAAKxY,IAEf,GAAIqY,EAAO1E,IAAQ0E,EAAOrY,GAAQ,SAElC+L,EAAQ0O,EAAW9G,IAAQ8G,EAAWza,GAG1C,GAAI+L,GACA,GAAInQ,GAAS4c,IAASzM,EAAO,CACrB6O,GAAaF,EAAY9U,KAAQmG,IAAQ6O,GAAY,GAEzD,IAAIlI,EAAQ8F,EAAKhO,YAAcgO,EACzBjQ,EAAcwD,EAAMf,mBAAoB0H,EAAOlQ,GACrD+F,GAAe9D,EAAOpN,KAAMkR,SAIhCwD,EAAQ6K,GAAkBzT,EAAYqV,EAAMhW,GAC5CmY,EAAMtjB,KAAM0U,GAGhBmL,EAAQtR,KAAQmG,EAChBoL,GAAUkB,EAAOtM,GAGrBmL,EAAOxkB,OAASkT,EAChBzC,EAAW+T,OAAWA,EACtB/T,EAAWkV,MAAWA,EAEjBuC,IAAYpY,EAAQwV,QAAS,GAElC,OAAO2C,EA3FQT,CAAa/W,EAAY+U,EAAOzT,EAAQjC,GAEjDqY,EAAc1X,EAAW+T,OAAOxkB,OAASglB,EAAMhlB,OAC/CilB,EAAUkD,EAActD,EAAS7kB,OACnBmoB,EAsBxB,SAA0B1X,EAA6BoU,GAKnD,IAJQ,IAAAc,UACFV,EAAU,OAGGmD,IAAA5kB,WAAAA,IAAU,CAAxB,IAAImU,OACAgO,EAAOhO,EAAOrK,OACf2X,EAAQtgB,KAAMgT,GACdJ,GAAM9G,EAAYkH,IAI1B,OAAOsN,EAlC2BoD,CAAiB5X,EAAYoU,YJiE1CpU,EAA6B6X,GAClD,IAAkB,QAAAC,IAAA/kB,WAAAA,IAAU,CACxB+T,GAAM9G,QAGV,OAAO6X,EIrE6BE,CAAS/X,EAAYoU,GACrC,GAEd4D,EAAiB1W,EAAO/R,QAAUglB,EAAMhlB,OAExCslB,EAAWjB,GAAc5T,EAAYX,IAAa2Y,GAAoBzD,EAAMhlB,QAAU8P,EAAQwV,OAEpG,GAAImD,GAAkBxD,EAAQjlB,QAAUslB,EAAQ,CAC5C,GAAI1O,GAAanG,EAAYX,GACzB,OAAO,IAAIgV,GAAuBrU,EAAYgF,EAAQuP,EAAOC,EAASlT,EAAQuT,GAG9E7U,EAAW0T,mBAAoBY,GAAqBtU,EAAYX,GAGxE2F,GAAUG,GAAQnF,GC7Cd,OAAA7K,KACF+P,YAAOC,aAAQgB,kBAEjB8R,GAAS,MAeoB/e,QAAAgU,IACtBgL,gBAAe,OAD1B,0EAyB0Dhf,QAAAsL,IAA7C+N,MAaT,SAAmC3Y,GAC/B,OAAOA,EAAK2Y,YAUTA,UAAP,SAAuC3Y,GACnC,OAAOA,EAAK2Y,WAAW4F,MAW3B5F,0BAAA,SAAcwB,EAAyB1U,GACnC,MAAM,IAAIwH,eAAgB,gCAGvB0L,YAAP,SAAiBja,GAEb,IAAMsB,EAAOlI,KAGb,SAAS0mB,EAAgBrmB,EAAGC,EAAGgb,GAC3BpT,EAAK9D,KAAMpE,KAAMK,EAAGC,EAAGuS,gBAAc0I,OAAUD,EAASzI,gBAAcyI,OAAS,IAHnFtb,KAAK2mB,UAAY,KAMjBlgB,EAAQI,OAAOkB,SAAU2e,GAEzBA,EAAeroB,UAAY2B,KAAK3B,UAChCqoB,EAAe1K,UAAYwK,GAE3BxmB,KAAKymB,KAAOzmB,KAAK4mB,OAAcF,EAE/B5T,GAAc9K,SAAS5D,KAAMpE,KAAM4G,IAGhCia,YAAP,SAAiBzf,EAAmCwF,GAChD,GAAIxF,EAAWylB,WAAY,CACvB,IAAMlc,EAAY,IAAI7I,EAAU8E,EAAUvI,UAAU4jB,aACpDtX,EAAU3H,aAAc5B,EAAWylB,YACnC7mB,KAAK3B,UAAU4jB,YAActX,OAGH,IAA1BvJ,EAAW0lB,aAAwB9mB,KAAK3B,UAAUyoB,WAAa1lB,EAAW0lB,YAE9EhU,GAAc5L,SAAS9C,KAAMpE,KAAMoB,IAcvCjD,sBAAI0iB,oCAAJ,WAAuB,OAAO7gB,KAAKqiB,wCAMnClkB,sBAAI0iB,+BAoCJ,WAAkB,OAAO7gB,KAAKmiB,iBApC9B,SAAgB7iB,GAAhB,WAEI,cAAeA,GACX,IAAK,SACDU,KAAKmiB,YAAc,SAAE9hB,EAAGC,GACpB,IAAMymB,EAAK1mB,EAAWf,GAAK0nB,EAAK1mB,EAAWhB,GAC3C,OAAIynB,IAAOC,EAAY,EAChBD,EAAKC,GAAM,EAAI,GAE1B,MACJ,IAAK,WACgB,IAAb1nB,EAAEzB,OACFmC,KAAKmiB,YAAc,SAAE9hB,EAAGC,GACpB,IAAMymB,EAAWznB,EAAG8E,KAAMmF,EAAMlJ,GAAK2mB,EAAW1nB,EAAG8E,KAAMmF,EAAMjJ,GAC/D,OAAIymB,IAAOC,EAAY,EAChBD,EAAKC,GAAM,EAAI,GAI1BhnB,KAAKmiB,YAAc,SAAE9hB,EAAGC,GAAO,OAAMhB,EAAG8E,KAAMmF,EAAMlJ,EAAGC,IAE3D,MAEJ,QACIN,KAAKmiB,YAAc,uCAK/BtB,sBAAA,WACI,OAAO7gB,KAAKinB,SAAYjnB,KAAKinB,OAASjnB,KAAKkT,OAASlT,KAAKkT,OAAO3D,WAAavP,KAAKkU,gBAYtF2M,+BAAA,SAAmBrL,EAAY7H,EAAmCkH,GAE9D,gBAF2BlH,MAEvBkH,IAAc7U,KAAlB,CAEQ,IAAAqf,mBAEJ7J,EAAOkK,WAAYL,IACnBoD,GAAaziB,KAAKwjB,MAAOhO,GAG7B,IAAMlC,EAASE,GAAOxT,MAElByU,GAAazU,KAAM2N,IAEnBlK,GAAUzD,KAAM,SAAUwV,EAAQ7H,GAGtC2F,GAAUG,GAAQzT,QAGtB6gB,iBAAA,SAAKqG,GACD,GAAe,MAAXA,EAAJ,CAEA,GAAuB,iBAAZA,EAKP,OAAOlnB,KAAKwjB,MAAO0D,GAJnB,IAAMpI,EAAKoI,EAASlnB,KAAKqf,aACzB,YAAgB,IAAPP,GAAiB9e,KAAKwjB,MAAO1E,IAAU9e,KAAKwjB,MAAO0D,EAAQ/b,OAO5E0V,aAAEF,OAAOlQ,UAAT,WACI,OAAOzQ,KAAKqiB,OAAQ1B,OAAOlQ,aAK/BoQ,wBAAA,SAAYnR,GACR,IAAM4D,EAASC,GAAeC,MAAOxT,MACrCA,KAAK6P,KAAMH,GACX4D,GAAUC,GAAeE,OAAQzT,OAIrC6gB,6BAAA,SAAiBX,GAEb,GAAIlgB,KAAKgb,QAAU,OAAO,EAE1B,IAAImM,EAAQ,EAUZ,OARAnnB,KAAK6P,KAAM,SAAA2F,GACP,IAAM7F,EAAQ6F,EAAO1B,gBACjBnE,IACAuQ,EAAQ1K,EAAOrK,KAAQwE,EACvBwX,OAIDA,GAyCXtG,wBAAA,aAGAA,mBAAA,SAAOlT,gBAAAA,MACH,IAAM0U,EAASriB,KAAKgb,QAAUnI,gBAAc0I,MAAQvb,KAAKqiB,OAASriB,KAAK+B,IAAK,SAAAmV,GAAS,OAAAA,EAAM5G,UACrF0P,EAAc,IAAUhgB,KAAKtB,YAAc2jB,EAAQ,CAAEnL,MAAQlX,KAAKkX,MAAO4P,WAAa9mB,KAAK8mB,YAAc9mB,KAAKgb,SAIpH,OAFIrN,EAAQsS,WAAWD,EAAK9L,cAAgBlU,KAAKuP,YAE1CyQ,GAGXa,oBAAA,SAAQlT,GACJ,OAAO3N,KAAK+B,IAAK,SAAAmV,GAAS,OAAAA,EAAME,OAAQzJ,MAI5CkT,iBAAA,SAAKuG,EAAgCzZ,GAMjC,gBANCyZ,mBAAgCzZ,WACN,IAAjBA,EAAS0Z,KACfrnB,KAAK4W,KAAM,OAAQ,uBAAwB,oFAAqFjJ,GAIhIA,EAAQ2Z,MACRtnB,KAAKsnB,MAAOF,EAAUzZ,OAEtB,CACA,IAAM+F,EAAc1T,KAAKmW,mBAAoBiR,EAAUzZ,GACvD+F,GAAeA,EAAYD,SAG/B,OAAOzT,MAUX6gB,yBAAA,SAAa0G,GAAb,WACI,GAAIA,EAAS,CACTvnB,KAAKwnB,aAAa,GAElB,IAAMC,EAA4B,mBAAZF,EAAyBA,EAAU,WAAM,OAAA,GAU/D,OARAvnB,KAAK0nB,aAAe,CAChBC,QAAU,SAAA/T,GACN6T,EAAQ7T,IAAUrK,EAAK8d,IAAKzT,EAAM,CAAE2C,OAAQ,EAAMxP,OAAQ,KAG9D+b,QAAU,SAAAhE,GAAM,OAAAvV,EAAKiH,OAAQsO,KAG1B9e,KAAK2e,cAAc/B,UAAW5c,KAAK0nB,aAAc1nB,MAAO+N,KAAM,WAAM,OAAAxE,IAGvEvJ,KAAK0nB,eACL1nB,KAAK2e,cAAchC,YAAa3c,KAAK0nB,aAAc1nB,MACnDA,KAAK0nB,aAAe,OAUhC7G,mBAAA,SAAOhJ,GAAP,wBAAOA,MACH,IAAMlK,KAAY4I,OAAQ,GAASsB,GAC/B9E,EAAW/S,KAAK2e,cAEpB,OAAOlR,GACHzN,KACA+S,EAAShJ,KAAM4D,EAAS3N,MACxB2N,EAEA,SAAAiG,GACI,IAAI1U,EAAeqK,EAAK0H,IAAK2C,EAAMgU,GAAErR,OAAQ,EAAMqI,SAAW,SAAYjR,IAM1E,OAJIA,EAAQ6Z,cACRtoB,EAASqK,EAAKie,YAAa7Z,EAAQ6Z,cAGhCtoB,KAKnB2hB,qBAAA,WACI,IAAI7gB,KAAKoL,UAAT,CAIA,IAFA,IAAMyc,GAAc7nB,KAAKgb,YAENxZ,EAAAxB,KAAKqiB,OAALhhB,WAAAA,IAAa,CAA3B,IAAImU,OACLJ,GAAMpV,KAAMwV,GAERqS,GAAarS,EAAO4F,UAG5Bpb,KAAKwnB,aAAa,GAElB/a,aAAM2O,qBAGVyF,mBAAA,SAAOiH,EAA8Bna,gBAAAA,MACjC,IAAM2F,EAASE,GAAOxT,MAChB+nB,EAAiB/nB,KAAKqiB,OAGxByF,EACAvC,GAAqBvlB,KAAMgoB,GAAYhoB,KAAM8nB,EAAYna,GAAWA,GAAS,IAG7E3N,KAAKwjB,MAAQ,GACbxjB,KAAKqiB,OAAS,IAGlB5N,GAAazU,KAAM2N,GAEnBA,EAAQgH,QAAUlR,GAAUzD,KAAM,QAASA,QAAQ+nB,kBAAmBpa,IAKtE,IAFQ,IAAA6V,iBAEcyE,IAAA5mB,WAAAA,IAAgB,CAAjC,IAAI6mB,OACL1E,EAAO0E,EAAU/c,MAASiK,GAAMpV,KAAMkoB,GAI1C,OADA5U,GAAUG,GAAQzT,MACXA,KAAKqiB,QAIhBxB,iBAAA,SAAKiH,EAA8Bna,gBAAAA,MAC/B,IAAMyZ,EAAWY,GAAYhoB,KAAM8nB,EAAYna,GACzC+F,EAAc1T,KAAKqiB,OAAOxkB,OACpBulB,GAAgBpjB,KAAMonB,EAAUzZ,GAChC4X,GAAqBvlB,KAAMonB,EAAUzZ,GAEjD,GAAI+F,EAEA,OADAA,EAAYD,SACLC,EAAYmP,OAK3BhC,oBAAA,SAAQsH,EAAoBxa,GACxB,oBADwBA,MACpBwa,EACO7pB,MAAMqK,QAASwf,GACVjD,GAAYllB,KAAMmoB,EAAcxa,YFja7BW,EAA6BmE,EAA0B9E,GAC9E,IAAIuJ,EAAgB5I,EAAWxG,IAAK2K,GAEpC,GAAIyE,EAAO,CACP,IAAM5D,EAASE,GAAOlF,GAChB+T,EAAS/T,EAAW+T,OAG1BA,EAAOvR,OAAQuR,EAAOrc,QAASkR,GAAS,GACxCsL,GAAalU,EAAWkV,MAAOtM,GAG/B,IAAMkR,EAAS3T,GAAanG,EAAYX,GAexC,OAZIya,IACA5kB,GAAU0T,EAAO,SAAUA,EAAO5I,EAAYX,GAC9CnK,GAAU8K,EAAY,SAAU4I,EAAO5I,EAAYX,IAGvDyH,GAAM9G,EAAY4I,EAAOvJ,EAAQwN,OAEjCiN,GAAU3kB,GAAU6K,EAAY,SAAUA,EAAYX,GAGtD2F,GAAUG,GAAQnF,GAEX4I,GEuYSmR,CAAWroB,KAAMmoB,EAAcxa,GAGxC,IAGXkT,uBAAA,SAAW2D,GACP,OAAO,IAAI8D,GAAgBtoB,KAAMwkB,IAMrC3D,gCAAA,SAAoBiH,EAA6Bna,gBAAAA,MAC7C,IAAMyZ,EAAWY,GAAYhoB,KAAM8nB,EAAYna,GAE/C,OAAI3N,KAAKqiB,OAAOxkB,QACc,IAAnB8P,EAAQ6C,OACH4S,GAAgBpjB,KAAMonB,EAAUzZ,GAAS,GACzCgY,GAAgB3lB,KAAMonB,EAAUzZ,GAGrC4X,GAAqBvlB,KAAMonB,EAAUzZ,IAWpDkT,kBAAA,SAAMlT,GACF,gBADEA,MACEuU,GAAcliB,KAAM2N,GAAW,CAC/B,IAAM2F,EAASE,GAAOxT,MAElByU,GAAazU,KAAM2N,IACnBlK,GAAUzD,KAAM,OAAQA,KAAM2N,GAGlC2F,GAAUG,GAAQzT,MAGtB,OAAOA,MAIX6gB,mBAAA,SAAO0D,EAAwB5W,GAC3B,IAAM1P,EAAQ+B,KAAK8H,IAAKyc,GAExB,OADAvkB,KAAKwQ,OAAQ+T,KAAapJ,OAAQ,GAASxN,IACpC1P,GAGX4iB,qBAAA,SAAShD,GACL,OAAOA,EAAO7d,KAAKkX,MAAM7Y,UAAUghB,cAIvCwB,oBAAA,SAAQ3J,EAAWqR,GACf,IAAIxkB,EAAOsN,QAASrR,KAAK8H,IAAKoP,IAC1BvT,OAAkB,IAAX4kB,GAAqBxkB,EAAOsN,QAASkX,GAWhD,OATIxkB,IAASJ,IACLI,EACA/D,KAAKwQ,OAAQ0G,GAGblX,KAAKqnB,IAAKnQ,IAIXvT,GAIXkd,kBAAA,SAAM9U,EAAkBE,EAAgByL,EAAezZ,EAAgBsiB,IACjEA,GAAYtT,IAASM,QAASxB,EAAOE,EAAWjM,KAAKkX,MAAM7Y,UAAU2V,mBAAoBhU,KAAKgU,oBAAsB0D,EAAM,CACxH8Q,SAAWvqB,EACXwqB,kBAAoBzoB,KAAKkX,MAAM7Y,UAAUoX,eAIjDoL,0BAAA,WACI,OAAOpU,aAAMuH,yBAAkB,cAOnC7V,sBAAI0iB,2BAAJ,WAAwB,OAAO7gB,KAAKqiB,OAAOxkB,wCAG3CgjB,kBAAA,SAAK3J,EAAwBvJ,GACzB,OAAO3N,KAAKqnB,IAAInQ,KAAStG,GAAI5Q,KAAKnC,QAAW8P,KAIjDkT,iBAAA,SAAKlT,GACD,IAAIuJ,EAAQlX,KAAK4Q,GAAG5Q,KAAKnC,OAAS,GAElC,OADAmC,KAAKwQ,OAAO0G,KAASiE,OAAQ,GAASxN,IAC/BuJ,GAIX2J,qBAAA,SAAQ3J,EAAwBvJ,GAC5B,OAAO3N,KAAKqnB,IAAInQ,KAAStG,GAAI,GAAMjD,KAIvCkT,mBAAA,SAAOlT,GACH,IAAMuJ,EAAQlX,KAAK4Q,GAAG,GAEtB,OADA5Q,KAAKwQ,OAAQ0G,KAASiE,OAAQ,GAASxN,IAChCuJ,GAldJ2J,UAAS7D,GA2XT6D,aAAYhG,GA1ZVgG,MAbZnZ,EAAO,CAEJ6M,UAAY,IACZ2C,MAAQiI,GACR/L,iBAAmB,UACnB4O,kBAAoB,OAEvBnb,EAAQod,IACR9c,EAAY,CACT2f,WAAard,EAAWxL,MACxBiZ,MAAQzN,EAAWC,WACnBmd,WAAapd,EAAW1C,SAEf8Z,KAqMT,YAAa6H,EAA2B/a,EAAkCqP,gBAAlCrP,MAAxC,MACIlB,aAAO8Z,YACPhd,EAAK8Y,OAAS,GACd9Y,EAAKia,MAAQ,GAEbja,EAAKud,WAAcvd,EAAKud,gBAEG,IAAvBnZ,EAAQmZ,aACRvd,EAAKud,WAAanZ,EAAQmZ,WAC1BnZ,EAAQmZ,gBAAa,GAGzBvd,EAAK2N,MAAc3N,EAAK2N,MAEpBvJ,EAAQuJ,QACR3N,EAAK2N,MAAQvJ,EAAQuJ,MACrBvJ,EAAQuJ,WAAQ,GAGpB3N,EAAK8V,YAAc9V,EAAK2N,MAAM7Y,UAAUghB,YAExC9V,EAAKyR,QAAUgC,GAAU,EAErB0L,GAEAnD,GAAqBhc,EADJye,GAAYze,EAAMmf,EAAS/a,GACPA,GAAS,UAGlDpE,EAAK+B,WAAWvL,MAAOwJ,EAAM3L,WAEzB2L,EAAKkB,cAAelB,EAAKkB,aAAamS,UAAWrT,EAAMA,KA0RnE,SAASye,GAA6B1Z,EAA4B8Y,EAA2BzZ,GACzF,IAAMgb,EAAShb,EAAQ4I,MAAQjI,EAAWiI,MAAO6Q,EAAUzZ,GAAYyZ,EACvE,OAAO9oB,MAAMqK,QAASggB,GAAWA,EAAS,CAAEA,GAGhDxJ,GAAM0B,WAAaA,GAEnB,WAA6BrZ,QAAA6I,UAOzBiY,iBAAA,SAAKhpB,GACDU,KAAKsO,WAAWsa,OAAQ5oB,KAAKkX,YAPjC,YACY5I,EACA4I,GAFZ,MAGQzK,aAAO6B,EAAWxG,IAAKoP,iBAFnB3N,aAAA+E,EACA/E,QAAA2N,aCtjBA2R,GAAgBC,GAC5B,cAAeA,GACX,IAAK,WACD,OAAO,SAAA1Z,GAAQ,OAAM0Z,EAAe1kB,KAAMgL,IAC9C,IAAK,SACD,OAAO,WAAM,OAAY0Z,GAC7B,IAAK,SAED,0BCEZ,WAA2BthB,QAAAyP,IAEvB8R,oBAAA,SAAQ9qB,GACJ,OAAOA,GAA0B,iBAAVA,EAAqBA,EAAM6gB,GAAK7gB,GAI3D8qB,mBAAA,SAAO9qB,GACH,OAAOA,GAA0B,iBAAVA,EAAqBA,EAAM6gB,GAAK7gB,GAI3D8qB,uBAAA,SAAW1oB,EAAmBC,GAI1B,OAHUD,IAAwB,MAATA,EAAGye,GAAaze,EAAYA,EAAGye,QAC9Cxe,IAAwB,MAATA,EAAGwe,GAAaxe,EAAYA,EAAGwe,MAM5DiK,sBAAA,SAAU7R,EAAOjZ,EAAOP,SApB5B,+DAuBA,SAASsrB,GAAkDC,EAAwCC,GAC/F,IAAMC,EAAsBN,GAAgBI,GAO5C,OALiB,IAAI9M,GAA0B,CAC3Cle,MAAQ,KACR+d,UAAY+M,KAIXjhB,IAAK,SAAUof,EAAyBxpB,GACrC,GAAuB,iBAAZwpB,EAAuB,OAAOA,EAGzC,IAAM5Y,EAAa6a,EAAqBnpB,MAClCwV,EAAiB,KAYvB,OATIlH,GAAcA,EAAWzQ,SAEzB2X,EAASlH,EAAWxG,IAAKof,IAAa,MACtClnB,KAAK2V,WAAYjY,GAAS8X,IAGhBxV,KAAKyV,YAAa/X,GAAOyZ,aAAc3B,EAAQ,KAAMxV,KAAM,KAGlEwV,aCxDH4T,GAA4EH,EAAwCC,GAChI,IAAMG,EAAkBH,GAAKrI,GAEzByI,EAAWD,EAAgB1C,YAAe0C,EAAgB1C,UAiClE,SAAiC0C,GACrB,kBAQJ,WAAalB,EAAexa,GAA5B,MACIlB,YAAO,GAAIkB,EAAS4b,iBAPxBhgB,eAA4B,KAQxBA,EAAKigB,KAAOC,GAAStB,KAyH7B,OAnIyC3gB,OAMrCrJ,sBAAIurB,mCAAJ,WAAuB,OAAO1pB,KAAKwpB,MAAQxpB,KAAKqiB,wCAQhDqH,gBAAA,SAAK5B,EAAYna,gBAAAA,MACL,IAAAgc,oBACA7D,EAAQ2D,GAAS3B,GAEzB,GAAI6B,EAEA,OAAOld,YAAM4a,cAAKuC,GAAaD,EAAc7D,GAASnY,GAItD,GAAImY,EAAMjoB,OAAQ,CACd,IAAMyV,EAASC,GAAeC,MAAOxT,MAGrCA,KAAKwpB,KAAOxpB,KAAKwpB,KAAOxpB,KAAKwpB,KAAKvnB,OAAQ6jB,GAAUA,EAAM/iB,QAE1DwQ,GAAekB,YAAazU,KAAM2N,GAGlC2F,GAAUC,GAAeE,OAAQzT,QAK7C0pB,kBAAA,SAAO5B,EAAana,gBAAAA,MACR,IAAAgc,oBACJvC,EAAWqC,GAAS3B,GAExB,OAAO6B,EAEHld,YAAM6a,gBAAOsC,GAAaD,EAAcvC,GAAYzZ,GAEpDkc,GAAU7pB,KAAMonB,EAAUzZ,IAAoB,IAGtD+b,+BAAA,SAAoB5B,EAAYna,GACpB,IAAAgc,oBACJvC,EAAWqC,GAAS3B,GAExB,OAAO6B,EAEHld,YAAM0J,6BAAoByT,GAAaD,EAAcvC,GAAYzZ,GAEjEkc,GAAU7pB,KAAMonB,EAAUzZ,IAIlC+b,mBAAA,WACI,OAAO1pB,KAAKwpB,KACRxpB,KAAKwpB,KAAKznB,IAAK,SAAAmlB,GAAW,OAAAA,EAAQpI,IAAMoI,IACxClnB,KAAKqiB,OAAOtgB,IAAK,SAAAmV,GAAS,OAAAA,EAAM4H,MAIxC4K,4BAAA,WAAmB,OAAO,GAE1BvrB,sBAAIurB,0BAAJ,WACI,OAAO1pB,KAAKqiB,OAAOxkB,SAAYmC,KAAKwpB,KAAOxpB,KAAKwpB,KAAK3rB,OAAS,oCAIlE6rB,kBAAA,SAAOzU,GACH,IACI+K,EAAO,IADMhgB,KAAMtB,YACF,GAAI,CACjBwY,MAAQlX,KAAKkX,MACb4P,WAAa9mB,KAAK8mB,aAa1B,OAVI9mB,KAAK2pB,cAEL3J,EAAK2J,aAAe3pB,KAAK2pB,aACzB3J,EAAKwJ,KAAO,KACZxJ,EAAKsH,MAAOtnB,KAAKqiB,OAAQ,CAAE1N,QAAS,KAGpCqL,EAAKwJ,KAAOxpB,KAAKwpB,KAAKzmB,QAGnBid,GAIX0J,kBAAA,SAAOI,GACH,OAAOA,GAGXJ,oBAAA,SAASpb,GAUL,OATIA,GAAcA,EAAWzQ,SACzBmC,KAAK2pB,aAAerb,EAEhBtO,KAAKwpB,OACLxpB,KAAKsnB,MAAOtnB,KAAKwpB,KAAM,CAAE7U,QAAS,IAClC3U,KAAKwpB,KAAO,OAIbxpB,MAGX0pB,wBAAA,WAA4B,OAAO1pB,KAAKoX,UAExCsS,mBAAA,SAAQnF,EAAiB5E,GACrB,OAAOlT,YAAMmc,iBAAQ5oB,KAAK2pB,aAAa7hB,IAAKyc,GAAa5E,IAG7D+J,mBAAA,WACI,GAAI1pB,KAAK2pB,aAEL,OADA3pB,KAAKiR,IAAKjR,KAAK2pB,aAAatH,QACrBriB,KAAKqiB,OAGhB,MAAM,IAAI9V,MAAO,0EAGrBmd,sBAAA,WACI,OAAO1pB,KAAKnC,OAASmC,KAAKsnB,QAAUtnB,KAAK+pB,UAjInCL,KAAbhiB,GAAagiB,IAA2BL,GAwIzC,OAFAK,EAAmBrrB,UAAU4jB,iBAAc,EAEpCyH,EA1KmEM,CAAwBX,IAC9FF,EAAsBN,GAAgBI,GAE1C,OAAO5R,GAAMiS,GAAWxhB,IACpB,SAAU0hB,GAEN,OADCA,GAAQA,EAAKG,cAAgBH,EAAKxa,QAASma,EAAqBnpB,OAC1DwpB,ID2DjBrK,GAAe8K,SAAWjB,GC7C1BnI,GAAoBuI,SAAWA,GAGjCvI,GAAWxiB,UAAU6rB,aAAe,SAAiD7H,EAAc1U,GAC/F,IACMwc,EAAW,IADAf,GAAUppB,KAAMA,KAAKtB,aAAqBiP,QAAQ0J,MACpCgL,EAAQ1U,GAGvC,OADAwc,EAAOnb,QAAShP,MACTmqB,GAGX,IAAMZ,GAAmB1W,gBAAc0I,MAAQ1I,gBAAcoI,WA2J7D,SAAS2O,GAAaQ,EAAQhD,GAG1B,IAFA,IAAMsB,EAAU,OAED2B,IAAAhpB,WAAAA,IAAU,CAApB,IAAIoR,OACC+C,EAAS4U,EAAOtiB,IAAK2K,GACvB+C,GAASkT,EAAQlmB,KAAMgT,GAG/B,OAAOkT,EAGX,SAASmB,GAAUvb,EAAY8Y,EAAUzZ,GACrC,GAAI2c,EAAgBhc,EAAWkb,KAAMpC,GAAY,CAC7C,IAAM9T,EAASC,GAAeC,MAAOlF,GAGrCA,EAAWkb,KAAOpC,EAASrkB,QAE3BwQ,GAAekB,YAAanG,EAAYX,GAGxC2F,GAAUC,GAAeE,OAAQnF,IAIzC,SAASmb,GAASrC,GACd,OAAOA,EACH9oB,MAAMqK,QAASye,GAAaA,EAAW,CAAEA,GACzC,GChOR,UAAIH,GAAiB,SAEMzf,QAAA2X,IACvBoL,sBAAA,WAAqB,OAAOvqB,MAG5BuqB,iBAAA,SAAK7sB,GAED,IAAIqR,EAAQ/O,KAAMtC,GAGlB,OAAIqR,GAAS/O,OAASA,KAAKkU,cAAuBnF,EAG3C/O,KAAKkT,OAASlT,KAAKkT,OAAOpL,IAAKpK,GAASsC,KAAKkU,cAAcpM,IAAKpK,IAG3ES,sBAAWosB,iBAAX,WAAqB,OAAOtD,QAC5B,SAAmBuD,GACXvD,IACFA,GAAO7L,UAGTtI,GAAczU,UAAU6V,cAAgB+S,GAASuD,uCArBzD,+DAyBAD,GAAME,OAAS,IAAIF,GC7BG,oBAAX5J,QACPxiB,OAAOqI,eAAgBkG,OAAQ,SAAU,CAAEzO,MAAQ,CAAEwS,SAAW,mBAAqBxG,cAAe,QAmBzFrH,cAAIE,UAAKyK,cAAS5N,WAAM0T,eAAUhI,oBAAeqf,6ZXNlB9M,GAClC,MAAA,4DAIR,OAJmCpW,MAAA2X,IACxBwL,aAAa/M,EADV+M,KAAbjjB,GAAaijB,oBAiEIzsB,EAAO0sB,GACzB,GAAuB,oBAAZtkB,SAA2BA,QAAQukB,YAAa,CACvD,IAAID,EAGA,CACA,IAAME,EAAQ5sB,EACd,OAAO,SAAEA,EAAgB0sB,GACrBvT,GAAM/Q,QAAQukB,YAAa,cAAe3sB,EAAO0sB,IAAa3sB,MAAO6sB,GAAQC,GAAI7sB,EAAO0sB,IAL5FvT,GAAM/Q,QAAQukB,YAAa,cAAe3sB,EAAO0sB,IAAaG,GAAI7sB,EAAO0sB,QAU7E1sB,EAAM0Y,KAAM,QAAS,uBAAwB,6FlBzCpBtL,GAC7B,IAAI0D,EAASgc,EAAQC,EAErB,SAAS7c,EAAO8c,GACZD,EAAUC,EAGd,IAAMxd,EAA2B,IAAIyd,QAAS,SAAEC,EAAWC,GAGvD/f,EADA0D,EAAUoc,EADVJ,EAASK,EAEoBjd,KAOjC,OAJAV,EAAQU,MAAQ,WACZ6c,EAAUA,EAASjc,EAASgc,GAAWA,EAAQ,IAAIze,MAAO,iBAGvDmB,gIAvCKyG,EAAkBtP,GAEtB,IAAAyJ,eACR,GAAIA,EACA,OAAO6F,EAAkB7F,GAI7B,GAAIzJ,EAAKqO,OAAQ,CACL,IAAAkB,sBACR,OAAOA,GAAcA,EAAYvP,EAAKsO,qNH6FPmY,GACnC,OAAO,SAAkBptB,EAAOR,IACfQ,EAAMP,eAAgB2tB,GAC/BptB,EAAOotB,GAAcptB,EAAOotB,IAAcptB,EAAOotB,IAAc,IAAIvoB,SAElEP,KAAK9E,+HgCnHiC6tB,GAC/C,OAAY,eAAA,IACJrsB,kBADcmC,mBAAAA,IAAA+K,kBAOlB,OAJApM,KAAK0T,YAAa,WACdxU,EAASqsB,EAAOxrB,MAAOwJ,EAAM6C,KAG1BlN"}