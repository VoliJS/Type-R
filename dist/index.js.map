{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/object-plus/tools.ts","../src/object-plus/mixins.ts","../src/object-plus/eventsource.ts","../src/object-plus/events.ts","../src/traversable.ts","../src/io-tools.ts","../src/transactions.ts","../src/record/attributes/updates.ts","../src/record/attributes/any.ts","../src/record/attributes/attrDef.ts","../src/record/attributes/date.ts","../src/record/attributes/basic.ts","../src/record/attributes/index.ts","../src/link/helpers.ts","../src/record/links.ts","../src/record/record.ts","../src/record/index.ts","../src/collection/commons.ts","../src/collection/add.ts","../src/collection/set.ts","../src/collection/remove.ts","../src/collection/index.ts","../src/relations/commons.ts","../src/relations/subsetOf.ts","../src/object-plus/index.ts","../src/validation.ts","../src/record/attributes/owned.ts","../src/record/attributes/shared.ts","../src/record/io-mixin.ts","../src/link/index.ts","../src/relations/from.ts","../src/relations/store.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n * Simple overridable logging stubs, writing to `console` by default.\n * Node.js users might want to redirect logging somewhere.\n * \n * This is the singleton avaliable globally through `Object.log` or \n * exported [[log]] variable.\n */\n\n// Logger is the function.\nexport type Logger = ( level : LogLevel, error : string, props? : object ) => void;\n\nexport type LogLevel = 'none' | 'error' | 'warn' | 'info' | 'debug' | 'log';\n\nconst levelToNumber = {\n    none : 0, error : 1, warn : 2, info : 3, log : 4, debug : 5\n}\n\nexport interface Log extends Logger {\n    level : number\n    throw : number\n    stop : number\n    logger : Logger\n}\n\nexport const log : Log = <any>function( a_level : LogLevel, a_msg : string, a_props : object ){\n    let levelAsNumber = levelToNumber[ a_level ], msg, props, level;\n\n    if( levelAsNumber === void 0 && !a_props ){\n        levelAsNumber = 4;\n        msg = a_level;\n        props = a_msg;\n        level = 'log';\n    }\n    else{\n        msg = a_msg, level = a_level, props = a_props;\n    }\n\n    if( levelAsNumber <= log.level ){\n        if( levelAsNumber <= log.throw || !log.logger ){\n            const error = new Error( msg );\n            (error as any).props = props;\n            throw error;\n        }\n        else{\n            log.logger( level, msg, props );\n            \n            if( levelAsNumber <= log.stop ){\n                debugger;\n            }\n        }\n    }\n}\n\ndeclare var process: any;\n\nlog.level = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production' ? 1 : 2;\nlog.throw = 0;\nlog.stop = 0;\n\nif( typeof console !== 'undefined' ) {\n    log.logger = function _console( level : LogLevel, error : string, props : object ){\n        const args = [ error ];\n        for( let name in props ){\n            args.push( `\\n\\t${name}:`, props[ name ] );\n        }\n\n        console[ level ].apply( console, args );\n    }\n}\n\n/** Check if value is raw JSON */\nexport function isValidJSON( value : any ) : boolean {\n    if( value === null ){\n        return true;\n    }\n\n    switch( typeof value ){\n    case 'number' :\n    case 'string' :\n    case 'boolean' :\n        return true;\n\n    case 'object':\n        var proto = Object.getPrototypeOf( value );\n\n        if( proto === Object.prototype || proto === Array.prototype ){\n            return every( value, isValidJSON );\n        }\n    }\n\n    return false;\n}\n\n/** Get the base class constructor function.\n * @param Class Subclass constructor function.\n * @returns Base class constructor function.\n */\nexport function getBaseClass( Class : Function ) {\n    return Object.getPrototypeOf( Class.prototype ).constructor\n}\n\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\n    for( let name of names ){\n        const value = definition[ name ];\n        value === void 0 || ( Class.prototype[ name ] = value );\n    }\n}\n\n/** Checks whenever given object is an empty hash `{}` */\nexport function isEmpty( obj : {} ) : boolean {\n    if( obj ){\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport type Iteratee = ( value : any, key? : string | number ) => any;\n\n/** @hidden */\nfunction someArray( arr : any[], fun : Iteratee ) : any {\n    let result;\n\n    for( let i = 0; i < arr.length; i++ ){\n        if( result = fun( arr[ i ], i ) ){\n            return result;\n        }\n    }\n}\n\n/** @hidden */\nfunction someObject( obj : {}, fun : Iteratee ) : any {\n    let result;\n\n    for( let key in obj ){\n        if( obj.hasOwnProperty( key ) ){\n            if( result = fun( obj[ key ], key ) ){\n                return result;\n            }\n        }\n    }\n}\n\n/** Similar to underscore `_.some` */\nexport function some( obj, fun : Iteratee ) : any {\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\n        return someArray( obj, fun );\n    }\n    else{\n        return someObject( obj, fun );\n    }\n}\n\n/** Similar to underscore `_.every` */\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\n    return !some( obj, x => !predicate( x ) );\n}\n\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\n    let desc : PropertyDescriptor;\n\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\n    }\n\n    return desc;\n}\n\n/** Similar to underscore `_.omit` */\nexport function omit( source : {}, ...rest : string[] ) : {}\nexport function omit( source ) : {} {\n    const dest = {}, discard = {};\n\n    for( let i = 1; i < arguments.length; i ++ ){\n        discard[ arguments[ i ] ] = true;\n    }\n\n    for( var name in source ) {\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\n * When `fun` returns `undefined`, skip this value. \n */\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            var value = fun( source[ name ], name );\n            value === void 0 || ( dest[ name ] = < A >value );\n        }\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastAssign< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        dest[ name ] = source[ name ];\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        if( dest[ name ] === void 0 ){\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.extend` and `Object.assign` */\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\nexport function assign< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && assign( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.defaults` */\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\nexport function defaults< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && defaults( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n// Polyfill for IE10. Should fix problems with babel and statics inheritance.\ndeclare global {\n    interface ObjectConstructor {\n        setPrototypeOf( target : Object, proto : Object );\n    }\n}\n\nObject.setPrototypeOf || ( Object.setPrototypeOf = defaults ); \n\n/** Similar to underscore `_.keys` */\nexport function keys( o : any ) : string[]{\n    return o ? Object.keys( o ) : [];\n}\n\n/** Similar to underscore `_.once` */\nexport function once( func : Function ) : Function {\n    var memo, first = true;\n    return function() {\n        if ( first ) {\n            first = false;\n            memo = func.apply(this, arguments);\n            func = null;\n        }\n        return memo;\n    };\n}\n\n/** @hidden */\nconst ArrayProto = Array.prototype,\n      DateProto = Date.prototype,\n      ObjectProto = Object.prototype;\n\n/**\n * Determine whenever two values are not equal, deeply traversing \n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\n * values are compared with strict comparison.\n */\nexport function notEqual( a : any, b : any) : boolean {\n    if( a === b ) return false;\n\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\n        const protoA = Object.getPrototypeOf( a );\n\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\n\n        switch( protoA ){\n            case DateProto   : return +a !== +b;\n            case ArrayProto  : return arraysNotEqual( a, b );\n            case ObjectProto :\n            case null:\n                return objectsNotEqual( a, b );\n        }\n    }\n\n    return true;\n}\n\n/** @hidden */\nfunction objectsNotEqual( a, b ) {\n    const keysA = Object.keys( a );\n\n    if( keysA.length !== Object.keys( b ).length ) return true;\n\n    for( let i = 0; i < keysA.length; i++ ) {\n        const key = keysA[ i ];\n\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** @hidden */\nfunction arraysNotEqual( a, b ) {\n    if( a.length !== b.length ) return true;\n\n    for( let i = 0; i < a.length; i++ ) {\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\n    }\n\n    return false;\n}\n\n/**\n * Create an object without Object prototype members except hasOwnProperty.\n * @param obj - optional parameter to populate the hash map from.\n */\nconst HashProto = Object.create( null );\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\n\nexport function hashMap( obj? ){\n    const hash = Object.create( HashProto );\n    return obj ? assign( hash, obj ) : hash;\n}","/*****************************************************************\n * Mixins engine and @define metaprogramming class extensions\n *\n * Vlad Balin & Volicon, (c) 2016-2017\n */\nimport { log, assign, omit, hashMap, getPropertyDescriptor, getBaseClass, defaults, transform } from './tools'\nimport { __extends } from 'tslib'\n\nexport interface Subclass< T > extends MixableConstructor {\n    new ( ...args ) : T\n    prototype : T\n}\n\nexport interface MixableConstructor extends Function{\n    __super__? : object;\n    mixins? : MixinsState;\n    onExtend? : ( BaseClass : Function ) => void;\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\n}\n\nexport interface MixableDefinition {\n    mixins? : Mixin[]\n}\n\n/**\n * Base class, holding metaprogramming class extensions.\n * Supports mixins and Class.define metaprogramming method.\n */\nexport class Mixable {\n    static onExtend : ( BaseClass : Function ) => void;\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \n    static __super__ : object\n    static mixins : MixinsState;\n\n    /** \n     *  Must be called after inheritance and before 'define'.\n     */\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\n        const BaseClass : MixableConstructor = getBaseClass( this );\n\n        // Assign statics.\n        staticProps && assign( this, staticProps );\n\n        // Extract and apply mixins from the definition.\n        const { mixins, ...defineMixin } = protoProps;\n        mixins && this.mixins.merge( mixins );\n\n        // Unshift definition to the the prototype.\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\n\n        // Unshift definition from statics to the prototype.\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\n\n        // Call onDefine hook, if it's present.\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\n        \n        // Apply merge rules to inherited members. No mixins can be added after this point.\n        this.mixins.mergeInheritedMembers( BaseClass );\n\n        return this;\n    }\n\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\n        let TheSubclass : Subclass< T >;\n\n        // 1. Create the subclass (ES5 compatibility shim).\n        // If constructor function is given...\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\n            TheSubclass = spec.constructor as any;\n            __extends( TheSubclass, this );\n        }\n        // Otherwise, create the subclall in usual way.\n        else{\n            TheSubclass = class Subclass extends this {} as any;\n        }\n\n        predefine( TheSubclass );\n        spec && TheSubclass.define( spec, statics );\n\n        return TheSubclass;\n    }\n}\n\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\n * Forwards the call to the [[Mixable.predefine]];\n */\nexport function predefine( Constructor : MixableConstructor ) : void {\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\n\n    // Legacy systems support\n    Constructor.__super__ = BaseClass.prototype;\n    \n    // Initialize mixins structures...\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\n\n    // Make sure Ctor.mixins are ready before the callback...\n    MixinsState.get( Constructor );\n\n    // Call extend hook.\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\n}\n\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\n *  Forwards the call to [[Mixable.define]].\n */\nexport function define( ClassOrDefinition : Function ) : void;\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\nexport function define( ClassOrDefinition : object | MixableConstructor ){\n    // @define class\n    if( typeof ClassOrDefinition === 'function' ){\n        predefine( ClassOrDefinition );\n        ClassOrDefinition.define();\n    }\n    // @define({ prop : val, ... }) class\n    else{\n        return function( Ctor : MixableConstructor ){\n            predefine( Ctor );\n            Ctor.define( ClassOrDefinition );\n        }\n    }\n}\n\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\n    return ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\n    }\n}\n\nexport function definitionDecorator( definitionKey, value ){\n    return ( proto : object, name : string ) => {\n        MixinsState\n            .get( proto.constructor )\n            .mergeObject( proto, {\n                [ definitionKey ] : {\n                    [ name ] : value\n                }\n            });\n    }\n}\n\nexport class MixinsState {\n    mergeRules : MixinMergeRules;\n    definitionRules : MixinMergeRules;\n    definitions : object = {};\n    appliedMixins : Mixin[];\n\n    // Return mixins state for the class. Initialize if it's not exist.\n    static get( Class ) : MixinsState {\n        const { mixins } = Class;\n    \n        return mixins && Class === mixins.Class ? mixins :\n             Class.mixins = new MixinsState( Class );\n    }\n\n    constructor( public Class : MixableConstructor ){\n        const { mixins } = getBaseClass( Class );\n\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\n    }\n\n    getStaticDefinitions( BaseClass : Function ){\n        const definitions = hashMap(),\n            { Class } = this;\n\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\n            if( BaseClass[ name ] !== Class[ name ]){\n                return Class[ name ];\n            }\n        });\n    }\n\n    merge( mixins : Mixin[] ){\n        const proto      = this.Class.prototype,\n            { mergeRules } = this;\n\n        // Copy applied mixins array as it's going to be updated.\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\n\n        // Apply mixins in sequence...\n        for( let mixin of mixins ) {\n            // Mixins array should be flattened.\n            if( Array.isArray( mixin ) ) {\n                this.merge( mixin );\n            }\n            // Don't apply mixins twice.\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\n                appliedMixins.push( mixin );\n\n                // For constructors, merge _both_ static and prototype members.\n                if( typeof mixin === 'function' ){\n                    if( getBaseClass( mixin ) !== Object ){\n                        //TODO log error\n                        console.log( 'Mixin error' );\n                    }\n\n                    // Merge static members\n                    this.mergeObject( this.Class, mixin );\n\n                    // merge definitionRules and mergeRules\n                    const sourceMixins = ( mixin as any ).mixins;\n                    if( sourceMixins ){\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\n                    }\n\n                    // Prototypes are merged according with rules.\n                    this.mergeObject( proto, mixin.prototype );\n                }\n                // Handle plain object mixins.\n                else {\n                    this.mergeObject( proto, mixin );\n                }\n            }\n        }\n    }\n\n    populate( ...ctors : Function[] ){\n        for( let Ctor of ctors ) {\n            MixinsState.get( Ctor ).merge([ this.Class ]);\n        }\n    }\n\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\n        forEachOwnProp( source, name => {\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\n            let rule : MixinMergeRule;\n\n            if( rule = this.definitionRules[ name ] ){\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\n            }\n\n            if( !rule || rule === mixinRules.protoValue  ){\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\n            }\n        });\n    }\n\n    mergeInheritedMembers( BaseClass : Function ){\n        const { mergeRules, Class } = this;\n\n        if( mergeRules ){\n            const proto = Class.prototype,\n                baseProto = BaseClass.prototype;\n\n            for( let name in mergeRules ) {\n                const rule = mergeRules[ name ];\n\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\n                }\n            }\n        }\n    }\n}\n\nconst dontMix = {\n    function : hashMap({\n        length : true,\n        prototype : true,\n        caller : true,\n        arguments : true,\n        name : true,\n        __super__ : true\n    }),\n    \n    object : hashMap({\n        constructor : true\n    })    \n}\n\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\n    const ignore = dontMix[ typeof object ];\n\n    for( let name of Object.getOwnPropertyNames( object ) ) {\n        ignore[ name ] || fun( name );\n    }\n}\n\nexport interface MixinMergeRules {\n    [ name : string ] : MixinMergeRule\n}\n\nexport type MixinMergeRule = ( a : any, b : any ) => any\nexport type Mixin = { [ key : string ] : any } | Function\n\n// @mixins( A, B, ... ) decorator.\nexport interface MixinRulesDecorator {\n    ( rules : MixinMergeRules ) : ClassDecorator\n    value( a : object, b : object) : object;\n    protoValue( a : object, b : object) : object;\n    merge( a : object, b : object ) : object;\n    pipe( a: Function, b : Function ) : Function;\n    defaults( a: Function, b : Function ) : Function;\n    classFirst( a: Function, b : Function ) : Function;\n    classLast( a: Function, b : Function ) : Function;\n    every( a: Function, b : Function ) : Function;\n    some( a: Function, b : Function ) : Function;\n}\n\nexport const mixins = ( ...list : Mixin[] ) => (\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\n);\n\n// @mixinRules({ name : rule, ... }) decorator.\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\n    ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\n    }\n) ) as MixinRulesDecorator;\n\n// Pre-defined mixin merge rules\n\nmixinRules.value = ( a, b ) => a;\n\nmixinRules.protoValue = ( a, b ) => a;\n\n// Recursively merge members\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\n\n    // Execute methods in pipe, with the class method executed last.\nmixinRules.pipe = ( a, b ) => (\n    function( x : any ) : any {\n        return a.call( this, b.call( this, x ) );\n    }\n);\n\n    // Assume methods return an object, and merge results with defaults (class method executed first)\nmixinRules.defaults = ( a : Function, b : Function ) => (\n    function() : object {\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\n    }\n);\n\n// Execute methods in sequence staring with the class method.\nmixinRules.classFirst = ( a : Function, b : Function ) => (\n    function() : void {\n        a.apply( this, arguments );\n        b.apply( this, arguments );\n    }\n);\n\n    // Execute methods in sequence ending with the class method.\nmixinRules.classLast = ( a : Function, b : Function ) => (\n    function() : void {\n        b.apply( this, arguments );\n        a.apply( this, arguments );\n    }\n)\n\n    // Execute methods in sequence returning the first falsy result.\nmixinRules.every = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) && b.apply( this, arguments );\n    }\n);\n    // Execute methods in sequence returning the first truthy result.\nmixinRules.some = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) || b.apply( this, arguments );\n    }\n);\n\n/**\n * Helpers\n */\n\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\n// Destination prop is defined, thus the merge rules must be applied.\n    if( dest.hasOwnProperty( name ) ){\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\n\n        if( destProp.configurable && 'value' in destProp ){\n            dest[ name ] = unshift ?\n                resolveRule( sourceProp.value, destProp.value, rule ) :\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\n        }\n    }\n    // If destination is empty, just copy the prop over.\n    else{\n        Object.defineProperty( dest, name, sourceProp );\n    }\n}\n\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\n    // When destination is empty, take the source.\n    if( dest === void 0 ) return source;\n\n    // In these cases we take non-empty destination:\n    if( !rule || source === void 0 ) return dest;\n\n    // In other cases we must merge values.\n    return rule( dest, source );\n}","import { once as _once } from './tools'\n\n/*******************\n * Prebuilt events map, used for optimized bulk event subscriptions.\n *\n * const events = new EventMap({\n *      'change' : true, // Resend this event from self as it is.\n *      'change:attr' : 'localTargetFunction',\n *      'executedInTargetContext' : function(){ ... }\n *      'executedInNativeContext' : '^props.handler'\n * })\n */\n/** @hidden */\nexport interface EventsDefinition {\n    [ events : string ] : Function | string | boolean\n}\n\n/** @hidden */\nexport class EventMap {\n    handlers : EventDescriptor[] = [];\n\n    constructor( map? : EventsDefinition | EventMap ){\n        if( map ){\n            if( map instanceof EventMap ){\n                this.handlers = map.handlers.slice();\n            }\n            else{\n                map && this.addEventsMap( map );\n            }\n        }\n    }\n\n    merge( map : EventMap ){\n        this.handlers = this.handlers.concat( map.handlers );\n    }\n\n    addEventsMap( map : EventsDefinition ){\n        for( let names in map ){\n            this.addEvent( names, map[ names ] )\n        }\n    }\n\n    bubbleEvents( names : string ){\n        for( let name of names.split( eventSplitter ) ){\n            this.addEvent( name, getBubblingHandler( name ) );\n        }\n    }\n\n    addEvent( names : string, callback : Function | string | boolean ){\n        const { handlers } = this;\n\n        for( let name of names.split( eventSplitter ) ){\n            handlers.push( new EventDescriptor( name, callback ) );\n        }\n    }\n\n    subscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            on( source, event.name, event.callback, target );\n        }\n    }\n\n    unsubscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            off( source, event.name, event.callback, target );\n        }\n    }\n}\n\n/** @hidden */\nexport class EventDescriptor {\n    callback : Function\n\n    constructor(\n        public name : string,\n        callback : Function | string | boolean\n    ){\n        if( callback === true ){\n            this.callback = getBubblingHandler( name );\n        }\n        else if( typeof callback === 'string' ){\n            this.callback =\n                function localCallback(){\n                    const handler = this[ callback ];\n                    handler && handler.apply( this, arguments );\n                };\n        }\n        else{\n            this.callback = <Function>callback;\n        }\n    }\n}\n\n/** @hidden */\nconst _bubblingHandlers = {};\n\n/** @hidden */\nfunction getBubblingHandler( event : string ){\n    return _bubblingHandlers[ event ] || (\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\n            else trigger2( this, event, a, b );\n        }\n    );\n}\n\n/** @hidden */\nexport interface HandlersByEvent {\n    [ name : string ] : EventHandler\n}\n\n/** @hidden */\nexport class EventHandler {\n    constructor( public callback : Callback, public context : any, public next = null ){}\n}\n\n/** @hidden */\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\n    const head = _events[ name ];\n\n    let filteredHead, prev;\n\n    for( let ev = head; ev; ev = ev.next ){\n        // Element must be kept\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\n            ( context && context !== ev.context ) ){\n            \n            prev = ev;\n            filteredHead || ( filteredHead = ev );\n        }\n        // Element must be skipped\n        else{\n            if( prev ) prev.next = ev.next;\n        }\n    }\n\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\n}\n\n/** @hidden */\nfunction listSend2( head : EventHandler, a, b ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\n}\n\n/** @hidden */\nfunction listSend3( head : EventHandler, a, b, c ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\n}\n\n/** @hidden */\nfunction listSend4( head : EventHandler, a, b, c, d ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\n}\n\n/** @hidden */\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\n}\n\n/** @hidden */\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\n}\n\n/** @hidden */\nexport interface Callback extends Function {\n    _callback? : Function\n}\n\n/** @hidden */\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const _events = source._events || ( source._events = Object.create( null ) );\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\n    }\n}\n\n/** @hidden */\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const once : Callback = _once( function(){\n            off( source, name, once );\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n        on( source, name, once, context );\n    }\n}\n\n/** @hidden */\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\n    const { _events } = source;\n    if( _events ){\n        if( callback || context ) {\n            if( name ){\n                listOff( _events, name, callback, context );\n            }\n            else{\n                for( let name in _events ){\n                    listOff( _events, name, callback, context );\n                }\n            }\n        }\n        else if( name ){\n            _events[ name ] = void 0;\n        }\n        else{\n            source._events = void 0;\n        }\n    }\n}\n\n/** @hidden */\nexport interface EventSource {\n    _events : HandlersByEvent\n}\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\n    if( eventSplitter.test( events ) ){\n        const names = events.split( eventSplitter );\n        for( let name of names ) api( source, name, callback, context );\n    }\n    else api( source, events, callback, context );\n}\n\n/** @hidden */\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\n\n/*********************************\n * Event-triggering API\n */\n\n/** @hidden */\nexport function trigger2( self : EventSource, name : string, a, b ) : void {\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend2( queue, a, b );\n        listSend3( all, name, a, b );\n    }\n};\n\n/** @hidden */\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend3( queue, a, b, c );\n        listSend4( all, name, a, b, c );\n    }\n};\n\n/** @hidden */\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend5( queue, a, b, c, d, e );\n        listSend6( all, name, a, b, c, d, e );\n    }\n};","import { define, mixins, Mixable, Mixin, MixableConstructor, MixinsState, mixinRules, definitions, MixinMergeRules } from './mixins'\nimport { omit, transform } from './tools'\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource'\nimport * as _eventsApi from './eventsource'\n\nconst { EventHandler, strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nlet _idCount = 0;\n\n/** @hidden */\nfunction uniqueId() : string {\n    return 'l' + _idCount++;\n}\n\nexport { EventMap, EventsDefinition }\n\nexport interface MessengerDefinition {\n    _localEvents? : EventMap\n    localEvents? : EventsDefinition\n    properties? : PropertyMap\n    [ name : string ] : any\n}\n\nexport interface PropertyMap {\n    [ name : string ] : Property\n}\n\nexport type Property = PropertyDescriptor | ( () => any )\n\n/** @hidden */\nexport interface MessengersByCid {\n    [ cid : string ] : Messenger\n}\n\n/** @hidden */\nexport type CallbacksByEvents = { [ events : string ] : Function }\n\n/*************************\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\n * This class itself can serve as both mixin and base class.\n */\n\n@define\n@definitions({\n    properties : mixinRules.merge,\n    localEvents : mixinRules.merge\n})\nexport abstract class Messenger implements Mixable, EventSource {\n    // Define extendable mixin static properties.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static onExtend : ( BaseClass : Function ) => void;\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\n        // Handle localEvents definition\n        if( localEvents || _localEvents ){\n            const eventsMap = new EventMap( this.prototype._localEvents );\n\n            localEvents && eventsMap.addEventsMap( localEvents );\n            _localEvents && eventsMap.merge( _localEvents );\n            \n            this.prototype._localEvents = eventsMap;\n        }\n\n        // Handle properties definitions...\n        if( properties ){\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\n        }\n    }\n\n    /** @hidden */ \n    _events : HandlersByEvent = void 0;\n\n    /** @hidden */ \n    _listeningTo : MessengersByCid = void 0\n\n    /** Unique client-only id. */\n    cid : string\n\n    /** @hidden Prototype-only property to manage automatic local events subscription */ \n    _localEvents : EventMap\n\n    /** @hidden */ \n    constructor(){\n        this.cid = uniqueId();\n        this.initialize.apply( this, arguments );\n\n        // TODO: local events subscribe?\n    }\n\n    /** Method is called at the end of the constructor */\n    initialize() : void {}\n    \n    on( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    once( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    off( events? : string | CallbacksByEvents, callback?, context? ) : this {\n        if( !events ) off( this, void 0, callback, context );\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\n        else trigger2( this, name, a, b );\n        return this;\n    }\n\n    listenTo( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    listenToOnce( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    stopListening( a_source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) : this {\n        const { _listeningTo } = this;\n        if( _listeningTo ){\n            const removeAll = !( a || b ),\n                  second = !b && typeof a === 'object' ? this : b;\n\n            if( a_source ){\n                const source = _listeningTo[ a_source.cid ];\n                if( source ){\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\n                    source.off( a, second, this );\n                }\n            }\n            else if( a_source == null ){\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\n\n                if( removeAll ) ( this._listeningTo = void 0 );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Destructor. Stops messenger from listening to all objects,\n     * and stop others from listening to the messenger. \n     */\n    _disposed : boolean\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        this.stopListening();\n        this.off();\n\n        this._disposed = true;\n    }\n}\n\n/**\n * Backbone 1.2 API conformant Events mixin.\n */\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\n\n/**\n * Messenger Private Helpers \n */\n\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\n    if( x ){\n        return typeof x === 'function' ? { get : < () => any >x } : <PropertyDescriptor> x;\n    }\n}\n\n/** @hidden */\nfunction addReference( listener : Messenger, source : Messenger ){\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\n            cid = source.cid || ( source.cid = uniqueId() );\n\n      listeningTo[ cid ] = source;\n}","/**\n * Some sketches for reference resolution.\n *\n * \n * a : Model.from( '~collection' )\n * \n * We need two functions. One for get, and one for compile. \n */\nexport interface Traversable {\n    getStore() : Traversable\n    getOwner() : Traversable\n    get( key : string ) : any \n}\n\nconst referenceMask =  /\\^|([^.]+)/g;\n\n// Compile reference to function\nexport type ResolveReference = ( root : Traversable ) => any;  \n\nexport class CompiledReference {\n    resolve : ResolveReference\n    tail : string\n    local : boolean\n\n    constructor( reference : string, splitTail : boolean = false ){\n        const path = reference\n                        .match( referenceMask )\n                        .map( key => {\n                            if( key === '^' ) return 'getOwner()';\n\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\n                            \n                            return key;\n                        } );\n               \n        this.tail = splitTail && path.pop();\n        this.local = !path.length;\n\n        path.unshift( 'self' );\n        \n        this.resolve = <any> new Function( 'self', `return ${ path.join('.') };` );\n    }\n}\n\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\n    const path = reference.match( referenceMask ),\n          skip = path.length - 1;\n    \n    let self = root;\n\n    for( var i = 0; i < skip; i++ ){\n        const key = path[ i ];\n        switch( key ){\n            case '~' : self = self.getStore(); break;\n            case '^' : self = self.getOwner(); break;\n            default  : self = self.get( key );\n        }\n\n        // Do nothing if object on the path doesn't exist.\n        if( !self ) return;\n    }\n\n    return action( self, path[ skip ] );\n}","export interface IONode {\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise< any >\n}\n\nexport interface IOPromise<T> extends Promise<T> {\n    abort? : () => void\n}\n\nexport interface IOEndpoint {\n    list( options : object, collection? ) : IOPromise<any>\n    create( json : any, options : object, record? ) : IOPromise<any>\n    update( id : string | number, json :any, options : object, record? ) : IOPromise<any>\n    read( id : string | number, options : object, record? ) : IOPromise<any>\n    destroy( id : string | number, options : object, record? ) : IOPromise<any>\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\n    unsubscribe( events : IOEvents, collection? ) : void\n}\n\nexport interface IOEvents {\n    updated? : ( json : any ) => void\n    removed? : ( json : any ) => void\n}\n\nexport function getOwnerEndpoint( self ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n\n/**\n * Create abortable promise.\n * Adds `promise.abort()` function which rejects the promise by default\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\n * which can be used to add custom abort handling.\n */\ndeclare var Promise: PromiseConstructorLike;\n\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\n    let resolve, reject, onAbort;\n\n    function abort( fn ){\n        onAbort = fn;\n    }\n\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\n        reject = a_reject;\n        resolve = a_resolve;\n        initialize( resolve, reject, abort );\n    }) as IOPromise<any>;\n\n    promise.abort = () => {\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\n    }\n\n    return promise;\n}\n\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\n\nexport function startIO( self : IONode, promise : IOPromise<any>, options : object, thenDo : ( json : any ) => any ) : IOPromise<any> {\n    // Stop pending I/O first...\n    abortIO( self );\n    \n    self._ioPromise = promise\n        .then( resp => {\n            self._ioPromise = null;\n    \n            const result = thenDo ? thenDo( resp ) : resp;\n                \n            triggerAndBubble( self, 'sync', self, resp, options );\n                \n            return result;\n        } )  \n        .catch( err => {\n            self._ioPromise = null;\n\n            console.error( err );\n            \n            triggerAndBubble( self, 'error', self, err, options );\n            \n            throw err;\n        } ) as IOPromise<any>;\n\n    self._ioPromise.abort = promise.abort;\n\n    return self._ioPromise;\n}\n\nexport function abortIO( self : IONode ){\n    if( self._ioPromise && self._ioPromise.abort ){\n        self._ioPromise.abort();\n        self._ioPromise = null;\n    }\n}\n\nexport function triggerAndBubble( eventSource, ...args ){\n    eventSource.trigger.apply( eventSource, args );\n    const { collection } = eventSource;\n    collection && collection.trigger.apply( collection, args ); \n}","import { Messenger, CallbacksByEvents, MessengersByCid, MixinsState, MixinMergeRules, MessengerDefinition, tools, mixins, mixinRules, definitions, eventsApi, define, Subclass } from './object-plus'\nimport { ValidationError, Validatable, ChildrenErrors } from './validation'\nimport { Traversable, resolveReference } from './traversable'\nimport { IOEndpoint, IOPromise, IONode, abortIO } from './io-tools'\n\nconst { assign } = tools,\n      { trigger2, trigger3, on, off } = eventsApi;\n/***\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\n * 2. transaction.commit() - send and process all change events, and close transaction.\n */\n\n/** @private */\nexport interface TransactionalDefinition extends MessengerDefinition {\n    endpoint? : IOEndpoint\n}\n\nexport enum ItemsBehavior {\n    share       = 0b0001,\n    listen      = 0b0010,\n    persistent  = 0b0100\n}\n\n// Transactional object interface\n@define\n@definitions({\n    endpoint : mixinRules.value\n})\n@mixins( Messenger )\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\n    // Here goes 'Mixable' mixin.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\n\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\n        Messenger.onDefine.call( this, definitions, BaseClass );\n    };\n\n    static onExtend( BaseClass : typeof Transactional ) : void {\n        // Make sure we don't inherit class factories.\n        if( BaseClass.create === this.create ) {\n            this.create = Transactional.create;\n        }\n    }\n\n    // Define extendable mixin static properties.\n    static create( a : any, b? : any ) : Transactional {\n        return new (this as any)( a, b );\n    }\n\n    /** Generic class factory. May be overridden for abstract classes. Not inherited. */\n    on : ( events : string | CallbacksByEvents, callback, context? ) => this\n    once : ( events : string | CallbacksByEvents, callback, context? ) => this\n    off : ( events? : string | CallbacksByEvents, callback?, context? ) => this\n    trigger      : (name : string, a?, b?, c?, d?, e? ) => this\n\n    stopListening : ( source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) => this\n    listenTo : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    listenToOnce : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    \n    _disposed : boolean;\n\n    // State accessor. \n    readonly __inner_state__ : any;\n\n    // Shared modifier (used by collections of shared models)\n    _shared? : number; \n    \n    dispose() : void {\n        if( this._disposed ) return;\n        \n        abortIO( this );\n        this._owner = void 0;\n        this._ownerKey = void 0;\n        this.off();\n        this.stopListening();\n        this._disposed = true;\n    }\n\n    // Must be called at the end of the constructor in the subclass.\n    initialize() : void {}\n\n    /** @private */\n    _events : eventsApi.HandlersByEvent = void 0;\n\n    /** @private */\n    _listeningTo : MessengersByCid\n\n    /** @private */\n    _localEvents : eventsApi.EventMap\n\n    cid : string\n    cidPrefix : string\n\n    static shared : any;\n\n    // Unique version token replaced on change\n    /** @private */\n    _changeToken : {} = {}\n\n    // true while inside of the transaction\n    /** @private */\n    _transaction : boolean = false;\n\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\n    /** @private */\n    _isDirty  : TransactionOptions = null;\n\n    // Backreference set by owner (Record, Collection, or other object)\n    /** @private */\n    _owner : Owner = void 0;\n\n    // Key supplied by owner. Used by record to identify attribute key.\n    // Only collections doesn't set the key, which is used to distinguish collections.\n    /** @private */  \n    _ownerKey : string = void 0;\n\n    // Name of the change event\n    /** @private */\n    _changeEventName : string\n\n    /**\n     * Subsribe for the changes.\n     */\n    onChanges( handler : Function, target? : Messenger ){\n        on( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Unsubscribe from changes.\n     */\n    offChanges( handler? : Function, target? : Messenger ){\n        off( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Listen to changes event. \n     */\n    listenToChanges( target : Transactional, handler ){\n        this.listenTo( target, target._changeEventName, handler );\n    }\n\n    constructor( cid : string | number ){\n        this.cid = this.cidPrefix + cid;\n    }\n\n    // Deeply clone ownership subtree\n    abstract clone( options? : CloneOptions ) : this\n    \n    // Execute given function in the scope of ad-hoc transaction.\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = transactionApi.begin( this );\n        const update = fun.call( this, this );\n        update && this.set( update );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Loop through the members in the scope of transaction.\n    // Transactional version of each()\n    updateEach( iteratee : ( val : any, key : string | number ) => void, options? : TransactionOptions ){\n        const isRoot = transactionApi.begin( this );\n        this.each( iteratee );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( values : any, options? : TransactionOptions ) : this {\n        if( values ){ \n            const transaction = this._createTransaction( values, options );\n            transaction && transaction.commit();\n        } \n\n        return this;\n    }\n\n    // Assign transactional object \"by value\", copying aggregated items.\n    assignFrom( source : Transactional | Object ) : this {\n        return this.set( ( <any>source ).__inner_state__ || source, { merge : true } );\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.\n    // Returns null if there are no any changes.\n    /** @private */  \n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\n    \n    // Parse function applied when 'parse' option is set for transaction.\n    parse( data : any, options? : TransactionOptions ) : any { return data }\n\n    // Convert object to the serializable JSON structure\n    abstract toJSON() : {}\n\n    /*******************\n     * Traversals and member access\n     */\n    \n    // Get object member by its key.\n    abstract get( key : string ) : any\n\n    // Get object member by symbolic reference.\n    deepGet( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\n    }\n\n    //_isCollection : boolean\n\n    // Return owner skipping collections.\n    getOwner() : Owner {\n        return this._owner;\n    }\n\n    // Store used when owner chain store lookup failed. Static value in the prototype. \n    /** @private */\n    _defaultStore : Transactional\n\n    // Locate the closest store. Store object stops traversal by overriding this method. \n    getStore() : Transactional {\n        const { _owner } = this;\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\n    }\n\n\n    /***************************************************\n     * Iteration API\n     */\n\n    // Loop through the members. Must be efficiently implemented in container class.\n    abstract each( iteratee : ( val : any, key : string | number ) => void, context? : any )\n\n    // Map members to an array\n    map<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : T[]{\n        const arr : T[] = [],\n              fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = fun( val, key );\n            if( result !== void 0 ) arr.push( result );\n        } );\n\n        return arr;\n    }\n\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise<any>\n\n    fetch( options? : object ) : IOPromise<any> { throw new Error( \"Not implemented\" ); }\n\n    getEndpoint() : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    }\n\n    // Map members to an object\n    mapObject<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : { [ key : string ] : T }{\n        const obj : { [ key : string ] : T } = {},\n            fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = iteratee( val, key );\n            if( result !== void 0 ) obj[ key ] = result;\n        } );\n\n        return obj;\n    }\n    \n    /*********************************\n     * Validation API\n     */\n\n    // Lazily evaluated validation error\n    /** @private */\n    _validationError : ValidationError = void 0\n\n    // Validate ownership tree and return valudation error \n    get validationError() : ValidationError {\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\n        return error.length ? error : null; \n    }\n\n    // Validate nested members. Returns errors count.\n    /** @private */\n    abstract _validateNested( errors : ChildrenErrors ) : number\n\n    // Object-level validator. Returns validation error.\n    validate( obj? : Transactional ) : any {}\n\n    // Return validation error (or undefined) for nested object with the given key. \n    getValidationError( key : string ) : any {\n        var error = this.validationError;\n        return ( key ? error && error.nested[ key ] : error ) || null;\n    }\n\n    // Get validation error for the given symbolic reference.\n    deepValidationError( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\n    }\n\n    // Iterate through all validation errors across the ownership tree.\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\n        const { validationError } = this;\n        validationError && validationError.eachError( iteratee, this );\n    }\n\n    // Check whenever member with a given key is valid. \n    isValid( key : string ) : boolean {\n        return !this.getValidationError( key );\n    }\n\n    valueOf() : Object { return this.cid; }\n    toString(){ return this.cid; }\n\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\n    getClassName() : string {\n        const { name } = <any>this.constructor;\n        if( name !== 'Subclass' ) return name;\n    }\n\n    // Logging interface for run time errors and warnings.\n    abstract _log( level : string, text : string, value : any ) : void;\n}\n\nexport interface CloneOptions {\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\n    pinStore? : boolean\n}\n\n// Owner must accept children update events. It's an only way children communicates with an owner.\n/** @private */\nexport interface Owner extends Traversable, Messenger {\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\n    getOwner() : Owner\n    getStore() : Transactional\n}\n\n// Transaction object used for two-phase commit protocol.\n// Must be implemented by subclasses.\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\n/** @private */ \nexport interface Transaction {\n    // Object transaction is being made on.\n    object : Transactional\n\n    // Send out change events, process update triggers, and close transaction.\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\n    commit( initiator? : Transactional )\n}\n\n// Options for distributed transaction  \nexport interface TransactionOptions {\n    // Invoke parsing \n    parse? : boolean\n\n    // Suppress change notifications and update triggers\n    silent? : boolean\n\n    // Update existing transactional members in place, or skip the update (ignored by models)\n    merge? : boolean // =true\n\n    // Should collections remove elements in set (ignored by models)  \n    remove? : boolean // =true\n\n    // Always replace enclosed objects with new instances\n    reset? : boolean // = false\n\n    // Do not dispose aggregated members\n    unset? : boolean\n\n    validate? : boolean\n}\n\n/**\n * Low-level transactions API. Must be used like this:\n * const isRoot = begin( record );\n * ...\n * isRoot && commit( record, options );\n * \n * When committing nested transaction, the flag must be set to true. \n * commit( object, options, isNested ) \n */\n\nexport const transactionApi = {\n    // Start transaction. Return true if it's the root one.\n    /** @private */\n    begin( object : Transactional ) : boolean {\n        return object._transaction ? false : ( object._transaction = true );  \n    },\n\n    // Mark object having changes inside of the current transaction.\n    // Returns true whenever there notifications are required.\n    /** @private */\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\n        // If silent option is in effect, don't set isDirty flag.\n        const dirty = !options.silent;\n        if( dirty ) object._isDirty = options;\n        \n        // Reset version token.\n        object._changeToken = {};\n\n        // Object is changed, so validation must happen again. Clear the cache.\n        object._validationError = void 0;\n\n        return dirty;\n    },\n\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\n    // Must be executed for the root transaction only.\n    /** @private */\n    commit( object : Transactional, initiator? : Transactional ){\n        let originalOptions = object._isDirty;\n\n        if( originalOptions ){\n            // Send the sequence of change events, handling chained handlers.\n            while( object._isDirty ){\n                const options = object._isDirty;\n                object._isDirty = null; \n                trigger3( object, object._changeEventName, object, options, initiator );\n            }\n            \n            // Mark transaction as closed.\n            object._transaction = false;\n\n            // Notify owner on changes out of transaction scope.  \n            const { _owner } = object;  \n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\n                _owner._onChildrenChange( object, originalOptions );\n            }\n        }\n        else{\n            // No changes. Silently close transaction.\n            object._isDirty = null;\n            object._transaction = false;\n        }\n    },\n\n    /************************************\n     * Ownership management\n     */\n\n    // Add reference to the record.\n    /** @private */\n    aquire( owner : Owner, child : Transactional, key? : string ) : boolean {\n        if( !child._owner ){\n            child._owner = owner;\n            child._ownerKey = key;\n            return true;\n        }\n\n        return child._owner === owner;\n    },\n\n    // Remove reference to the record.\n    /** @private */\n    free( owner : Owner, child : Transactional ) : void {\n        if( owner === child._owner ){\n            child._owner = void 0;\n            child._ownerKey = void 0;\n        }\n    }\n}\n\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self as any;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner as any;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n","import { Transactional, Transaction, TransactionOptions, Owner, transactionApi } from \"../../transactions\"\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\n\nimport { eventsApi } from '../../object-plus'\nconst { trigger3 } = eventsApi;\n\nexport interface ConstructorsMixin {\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n}\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\n\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\n    // Attribute descriptors.\n    _attributes : AttributesDescriptors\n\n    // Attribute values.\n    attributes : AttributesValues\n\n    // Previous attribute values.\n    _previousAttributes : AttributesValues\n\n    // Changed attributes cache. \n    _changedAttributes : AttributesValues\n}\n\nexport interface AttributesValues {\n    [ name : string ] : any\n}\n\nexport interface AttributesDescriptors {\n    [ name : string ] : AttributeUpdatePipeline\n}\n\nexport interface AttributeUpdatePipeline{\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\n}\n\n // Optimized single attribute transactional update. To be called from attributes setters\n // options.silent === false, parse === false. \nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\n    // Open the transaction.\n    const isRoot  = begin( record ),\n          options = {};\n\n    // Update attribute.      \n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\n        // Notify listeners on changes.\n        markAsDirty( record, options );\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\n    }\n\n    // Close the transaction.\n    isRoot && commit( record );\n}\n\nfunction begin( record : AttributesContainer ){\n    if( _begin( record ) ){\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\n        record._changedAttributes = null;\n        return true;\n    }\n    \n    return false;\n}\n\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\n    if( record._changedAttributes ){\n        record._changedAttributes = null;\n    }\n\n    return _markAsDirty( record, options );\n}\n\n/**\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\n * of attributes. It might create the major speedup.\n * \n * Create the dedicated pipeline for owned and shared attributes as well.\n * \n * Three elements of the pipeline:\n * - from constructor\n * - from assignment\n * - from `set`\n */\n\nexport const UpdateRecordMixin = {\n// Need to override it here, since begin/end transaction brackets are overriden. \n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = begin( this );\n        fun.call( this, this );\n        isRoot && commit( this );\n    },\n            \n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\n        const { _ownerKey } = child,\n              attribute = this._attributes[ _ownerKey ];\n\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\n    },\n\n    // Simulate attribute change \n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\n        // Touch an attribute in bounds of transaction\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\n        }\n        \n        isRoot && commit( this );\n    },\n\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\n        const isRoot = begin( this ),\n                changes : string[] = [],\n                nested : RecordTransaction[]= [],\n                { _attributes } = this,\n                values = options.parse ? this.parse( a_values, options ) : a_values;\n\n        let unknown;\n\n        if( shouldBeAnObject( this, values ) ){\n            for( let name in values ){\n                const spec = _attributes[ name ];\n\n                if( spec ){\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\n                        changes.push( name );\n                    }\n                }\n                else{\n                    unknown || ( unknown = [] );\n                    unknown.push( `'${ name }'` );\n                }\n            }\n\n            if( unknown ){\n                // this._log( 'warn', `Undefined attributes ${ unknown.join(', ')} are ignored!`, values );\n            }\n        }\n        \n        if( changes.length && markAsDirty( this, options ) ){\n            return new RecordTransaction( this, isRoot, nested, changes );\n        }\n        \n        // No changes, but there might be silent attributes with open transactions.\n        for( let pendingTransaction of nested ){\n            pendingTransaction.commit( this );\n        }\n\n        isRoot && commit( this );\n    }\n};\n\n// One of the main performance tricks of Type-R.\n// Create loop unrolled constructors for internal attribute hash,\n// so the hidden class JIT optimization will be engaged and they will become static structs.\n// It dramatically improves record performance.\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\n    const attrs = Object.keys( attrDefs );\n\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\n        ${ attrs.map( attr =>`\n            this.${ attr } = values.${ attr };\n        `).join( '' ) }\n    `) as any;\n\n    AttributesCopy.prototype = Object.prototype;\n\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\n        var _attrs = record._attributes;\n\n        ${ attrs.map( attr =>`\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\n        `).join( '' ) }\n    `) as any;\n\n    Attributes.prototype = Object.prototype;\n\n    return { Attributes, AttributesCopy };\n}\n\nexport function shouldBeAnObject( record : AttributesContainer, values : object ){\n    if( values && values.constructor === Object ) return true;\n\n    record._log( 'warn', 'update with non-object is ignored!', { values } );\n    return false;\n}\n\n// Transaction class. Implements two-phase transactions on object's tree. \n// Transaction must be created if there are actual changes and when markIsDirty returns true. \nexport class RecordTransaction implements Transaction {\n    // open transaction\n    constructor( public object : AttributesContainer,\n                 public isRoot : boolean,\n                 public nested : Transaction[],\n                 public changes : string[] ){}\n\n    // commit transaction\n    commit( initiator? : AttributesContainer ) : void {\n        const { nested, object, changes } = this;\n\n        // Commit all pending nested transactions...\n        for( let transaction of nested ){ \n            transaction.commit( object );\n        }\n\n        // Notify listeners on attribute changes...\n        // Transaction is never created when silent option is set, so just send events out.\n        const { attributes, _isDirty } = object;\n        for( let key of changes ){\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}","import { setAttribute, AttributesContainer, AttributeUpdatePipeline, RecordTransaction } from './updates'\nimport { tools } from '../../object-plus'\nimport { Owner, Transactional, TransactionOptions } from '../../transactions'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { notEqual, assign} = tools;\n\ndeclare global {\n    interface Function {\n        _attribute : typeof AnyType\n    }\n}\n\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\n\nexport interface AttributeOptions {\n    _attribute? : typeof AnyType\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\n    isRequired? : boolean\n    changeEvents? : boolean\n\n    endpoint? : IOEndpoint\n\n    type? : Function\n    value? : any\n    hasCustomDefault? : boolean\n\n    parse? : Parse\n    toJSON? : AttributeToJSON\n   \n    getHooks? : GetHook[]\n    transforms? : Transform[]\n    changeHandlers? : ChangeHandler[]\n\n    _onChange? : ChangeAttrHandler\n}\n\nexport type Parse = ( value : any, key : string ) => any;\nexport type GetHook = ( value : any, key : string ) => any;\nexport type AttributeToJSON = ( value : any, key : string ) => any\nexport type AttributeParse = ( value : any, key : string ) => any\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\n\n// TODO: interface differs from options, do something obout it\nconst emptyOptions : TransactionOptions = {};\n\n/**\n * Typeless attribute. Is the base class for all other attributes.\n */\nexport class AnyType implements AttributeUpdatePipeline {\n    // Factory method to create attribute from options \n    static create( options : AttributeOptions, name : string ) : AnyType {\n        const type = options.type,\n              AttributeCtor = options._attribute || ( type ? type._attribute : AnyType );\n\n        return new AttributeCtor( name, options );\n    }\n    /**\n     * Update pipeline functions\n     * =========================\n     *\n     * Stage 0. canBeUpdated( value )\n     * - presence of this function implies attribute's ability to update in place.\n     */\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\n\n    /**\n     * Stage 1. Transform stage\n     */\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    // convert attribute type to `this.type`.\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    /**\n     * Stage 2. Check if attr value is changed\n     */\n    isChanged( a : any, b : any ) : boolean {\n        return notEqual( a, b );\n    }\n\n    /**\n     * Stage 3. Handle attribute change\n     */\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\n\n    /**\n     * End update pipeline definitions.\n     */\n\n    // create empty object passing backbone options to constructor...\n    create() { return void 0; }\n\n    // generic clone function for typeless attributes\n    // Must be overriden in sublass\n    clone( value : any, record : AttributesContainer ) {\n        return value;\n    }\n\n    dispose( record : AttributesContainer, value : any ) : void {\n        this.handleChange( void 0, value, record, emptyOptions );\n    }\n\n    validate( record : AttributesContainer, value : any, key : string ){}\n\n    toJSON( value, key ) {\n        return value && value.toJSON ? value.toJSON() : value;\n    }\n\n    createPropertyDescriptor() : PropertyDescriptor | void {\n        const { name, getHook } = this;\n\n        if( name !== 'id' ){\n            return {\n                // call to optimized set function for single argument.\n                set( value ){\n                    setAttribute( this, name, value );\n                },\n\n                // attach get hook to the getter function, if it present\n                get : (\n                    getHook ?\n                        function() {\n                            return getHook.call( this, this.attributes[ name ], name );\n                        } :\n                        function() { return this.attributes[ name ]; }\n                )\n            }\n        }\n    }\n\n    value : any\n\n    // Used as global default value for the given metatype\n    static defaultValue : any;\n\n    type : Function\n\n    initialize( name : string, options : TransactionOptions ){}\n\n    options : AttributeOptions\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        const v = value === void 0 ? this.defaultValue() : value,\n            x = this.transform( v, void 0, record, options );\n            \n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n        const { name } = this,\n            { attributes } = record,\n              prev = attributes[ name ];\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ name ] = next;\n\n        if( this.isChanged( next, prev ) ) {\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n            return true;\n        }\n\n        return false;\n    }\n\n    propagateChanges : boolean\n\n    _log( level : tools.LogLevel, text : string, value, record : AttributesContainer ){\n        tools.log( level, `[Attribute Update Error] ${ record.getClassName() }.${ this.name }: ` + text, {\n            'Record' : record,\n            'Attribute definition' : this,\n            'Prev. value' : record.attributes[ this.name ],\n            'New value' : value\n        });\n    }\n\n    defaultValue(){\n        return this.value;\n    }\n\n    parse : Parse\n\n    constructor( public name : string, a_options : AttributeOptions ) {        \n        // Save original options...\n        this.options = a_options;\n\n        // Clone options.\n        const options : AttributeOptions = assign( { getHooks : [], transforms : [], changeHandlers : [] }, a_options );\n        options.getHooks = options.getHooks.slice();\n        options.transforms = options.transforms.slice();\n        options.changeHandlers = options.changeHandlers.slice();\n\n        const {\n                  value, type, parse, toJSON, changeEvents,\n                  validate, getHooks, transforms, changeHandlers\n              } = options;\n\n        // Initialize default value...\n        this.value = value;\n        this.type  = type;\n\n        // TODO: An opportunity to optimize for attribute subtype.\n        if( !options.hasCustomDefault && type ){\n            this.defaultValue = this.create;\n        }\n        else if( tools.isValidJSON( value ) ){ \n            // JSON literals must be deep copied.\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\n        }\n        else{\n            this.defaultValue = this.defaultValue;\n        }\n\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\n        this.propagateChanges = changeEvents !== false;\n\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\n\n        this.validate = validate || this.validate;\n        \n        if( options.isRequired ){\n            this.validate = wrapIsRequired( this.validate );\n        }\n\n        /**\n         * Assemble pipelines...\n         */\n\n        // `convert` is default transform, which is always present...\n        transforms.unshift( this.convert );\n\n        // Attribute-level parse transform must always go first...\n        this.parse = parse || this.parse;\n\n        // Get hook from the attribute will be used first...\n        if( this.get ) getHooks.unshift( this.get );\n\n        // let subclasses configure the pipeline...\n        this.initialize.call( this, options );\n\n        // let attribute spec configure the pipeline...\n        if( getHooks.length ){\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\n\n            const { validate } = this;\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\n                return validate.call( this, record, getHook.call( record, value, key ), key );\n            }\n        }\n        \n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\n        \n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\n    }\n\n    getHook : ( value, key : string ) => any = null\n    get : ( value, key : string ) => any\n}\n\n\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\n    return function( value, name ) {\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\n    }\n}\n\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\n    return function( next, prev, record, options ) {\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\n    }\n}\n\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\n    return function( next, prev, record, options ) {\n        prevHandler.call( this, next, prev, record, options );\n        nextHandler.call( this, next, prev, record, options );\n    }\n}\n\nfunction wrapIsRequired( validate ){\n    return function( record : AttributesContainer, value : any, key : string ){\n        return value ? validate.call( this, record, value, key ) : 'Required';\n    }\n}","/**\n * Type spec engine. Declare attributes using chainable syntax,\n * and returns object with spec.\n */\nimport { Transactional } from '../../transactions'\nimport { ChangeAttrHandler, AttributeOptions, Parse } from './any'\nimport {  AttributesContainer } from './updates'\nimport { EventMap, EventsDefinition, definitionDecorator, tools } from '../../object-plus'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { assign } = tools;\n\nexport interface AttributeCheck {\n    ( value : any, key : string ) : boolean\n    error? : any\n}\n\nexport class ChainableAttributeSpec {\n    options : AttributeOptions;\n\n    constructor( options : AttributeOptions ) {\n        // Shallow copy options, fill it with defaults.\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\n        if( options ) assign( this.options, options );\n    }\n\n    check( check : AttributeCheck, error : any ) : ChainableAttributeSpec {\n        function validate( model, value, name ){\n            if( !check.call( model, value, name ) ){\n                const msg = error || check.error || name + ' is not valid';\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\n            }\n        }\n\n        const prev = this.options.validate;\n\n        return this.metadata({\n            validate : prev ? (\n                            function( model, value, name ){\n                                return prev( model, value, name ) || validate( model, value, name );\n                            }\n                       ) : validate\n        });\n    }\n\n    get asProp(){\n        return definitionDecorator( 'attributes', this );\n    }\n\n    get isRequired() : ChainableAttributeSpec {\n        return this.metadata({ isRequired : true }); \n    }\n\n    endpoint( endpoint : IOEndpoint ){\n        return this.metadata({ endpoint });\n    }\n\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : ChainableAttributeSpec {\n        return this.metadata({ _onChange : ref });\n    }\n\n    // Attribute-specific parse transform\n    parse( fun : Parse ) : ChainableAttributeSpec {\n        return this.metadata({ parse : fun });\n    }\n\n    toJSON( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            toJSON : typeof fun === 'function' ? fun : ( fun ? x => x && x.toJSON() : emptyFunction ) \n        });\n    }\n\n    // Attribute get hook.\n    get( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            getHooks : this.options.getHooks.concat( fun )\n        });\n    }\n\n    // Attribute set hook.\n    set( fun ) : ChainableAttributeSpec {\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\n            if( this.isChanged( next, prev ) ) {\n                const changed = fun.call( record, next, this.name );\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\n            }\n\n            return prev;\n        }\n\n        return this.metadata({\n            transforms : this.options.transforms.concat( handleSetHook )\n        });\n    }\n\n    changeEvents( events : boolean ) : ChainableAttributeSpec {\n        return this.metadata({ changeEvents : events });\n    }\n\n    // Subsribe to events from an attribute.\n    events( map : EventsDefinition ) : ChainableAttributeSpec {\n        const eventMap = new EventMap( map );\n\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\n\n            next && next.trigger && eventMap.subscribe( record, next );\n        }\n\n        return this.metadata({\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\n        });\n    }\n\n    // Creates a copy of the spec.\n    get has() : ChainableAttributeSpec {\n        return this;\n    }\n\n    metadata( options : AttributeOptions ) : ChainableAttributeSpec {\n        const cloned = new ChainableAttributeSpec( this.options );\n        assign( cloned.options, options );\n        return cloned;\n    }\n\n    value( x ) : ChainableAttributeSpec {\n        return this.metadata({ value : x, hasCustomDefault : true });\n    }\n}\n\nfunction emptyFunction(){}\n\ndeclare global {\n    interface Function{\n        value : ( x : any ) => ChainableAttributeSpec;\n        isRequired : ChainableAttributeSpec;\n        asProp : PropertyDecorator\n        has : ChainableAttributeSpec;\n    }\n}\n\nFunction.prototype.value = function( x ) {\n    return new ChainableAttributeSpec( { type : this, value : x, hasCustomDefault : true } );\n};\n\nObject.defineProperty( Function.prototype, 'isRequired', {\n    get() { return this._isRequired || this.has.isRequired; },\n    set( x ){ this._isRequired = x; }\n});\n\nObject.defineProperty( Function.prototype, 'asProp', {\n    get() { return this.has.asProp; },\n});\n\nObject.defineProperty( Function.prototype, 'has', {\n    get() {\n        // workaround for sinon.js and other libraries overriding 'has'\n        return this._has || new ChainableAttributeSpec( {\n            type : this,\n            value : this._attribute.defaultValue,\n            hasCustomDefault : this._attribute.defaultValue !== void 0\n        } );\n    },\n\n    set( value ) { this._has = value; }\n} );\n\nexport function toAttributeOptions( spec : any ) : AttributeOptions {\n    let attrSpec : ChainableAttributeSpec;\n\n    if( typeof spec === 'function' ) {\n        attrSpec = spec.has;\n    }\n    else if( spec && spec instanceof ChainableAttributeSpec ) {\n        attrSpec = spec;\n    }\n    else{\n        // Infer type from value.\n        const type = inferType( spec );\n\n        // Transactional types inferred from values must have shared type. \n        if( type && type.prototype instanceof Transactional ){\n            attrSpec = (<any>type).shared.value( spec );\n        }\n        // All others will be created in regular way.\n        else{\n            attrSpec = new ChainableAttributeSpec({ type : type, value : spec, hasCustomDefault : true });\n        }\n    }\n \n    return attrSpec.options;\n}\n\nfunction inferType( value : {} ) : Function {\n    switch( typeof value ) {\n        case 'number' :\n            return Number;\n        case 'string' :\n            return String;\n        case 'boolean' :\n            return Boolean;\n        case 'undefined' :\n            return void 0;\n        case 'object' :\n            return value ? <any> value.constructor : void 0;\n    }\n}\n","/**\n * Date attribute type.\n * \n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\n * and optimized update pipeline.\n */\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\nimport { ChainableAttributeSpec } from './attrDef'\n\nconst DateProto = Date.prototype;\n\n// Date Attribute\n/** @private */\nexport class DateType extends AnyType {\n    create(){\n        return new Date();\n    }\n    \n    convert( next : any, a, record ){\n        if( next == null || next instanceof Date ) return next;\n\n        const date = new Date( next ),\n              timestamp = date.getTime();\n\n        if( timestamp !== timestamp ){\n            this._log( 'warn', 'assigned with Invalid Date', next, record );\n        }\n\n        return date;\n    }\n\n    validate( model, value, name ) {\n        if( value != null ){\n            const timestamp = value.getTime(); \n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\n        }\n    }\n\n    toJSON( value ) { return value && value.toISOString(); }\n\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        // Date don't have handleChanges step.\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        // Date don't have handleChanges step.\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    clone( value ) { return value && new Date( value.getTime() ); }\n    dispose(){}\n}\n\nDate._attribute = DateType;\n\nconst msDatePattern  = /\\/Date\\(([0-9]+)\\)\\//;\n\nexport class MSDateType extends DateType {\n    convert( next ) {\n        if( typeof next === 'string' ){\n            const msDate = msDatePattern.exec( next );\n            if( msDate ){\n                return new Date( Number( msDate[ 1 ] ) );\n            }\n        }\n\n        return DateType.prototype.convert.apply( this, arguments );\n    }\n\n    toJSON( value ) { return value && `/Date(${ value.getTime() })/`; }\n}\n\nexport class TimestampType extends DateType {\n    toJSON( value ) { return value && value.getTime(); }\n}\n\ndeclare global {\n    interface DateConstructor {\n        microsoft : ChainableAttributeSpec\n        timestamp :  ChainableAttributeSpec\n    }\n}\n\nObject.defineProperties( Date, {\n    microsoft : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : MSDateType\n            })\n        }\n    },\n\n    timestamp : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : TimestampType\n            })\n        }\n    }\n});\n\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\nfunction supportsDate( date ){\n    return !isNaN( ( new Date( date ) ).getTime() );\n}\n\nif( !supportsDate('2011-11-29T15:52:30.5') ||\n    !supportsDate('2011-11-29T15:52:30.52') ||\n    !supportsDate('2011-11-29T15:52:18.867') ||\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\n\n    DateType.prototype.convert = function( value ){\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\n    }\n}\n\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nfunction safeParseDate( date : string ) : number {\n    var timestamp, struct : any[], minutesOffset = 0;\n\n    if( ( struct = isoDatePattern.exec( date )) ) {\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\n            struct[ k ] = +struct[ k ] || 0;\n        }\n\n        // allow undefined days and months\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\n        struct[ 3 ] = +struct[ 3 ] || 1;\n\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\n\n            if( struct[ 9 ] === '+' ) {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp =\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\n                    struct[ 7 ] );\n    }\n    else {\n        timestamp = Date.parse( date );\n    }\n\n    return timestamp;\n}","/**\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\n * \n * Adds type assertions, default validation, and optimized update pipeline.\n */\n\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\n\n/**\n * Custom class must be immutable class which implements toJSON() method\n * with a constructor taking json.\n */\nclass ImmutableClassType extends AnyType {\n    type : new ( value? : any ) => {}\n\n    create(){\n        return new this.type();\n    }\n\n    convert( next : any ) : any {\n        return next == null || next instanceof this.type ? next : new this.type( next );\n    }\n\n    toJSON( value ){\n        return value && value.toJSON ? value.toJSON() : value;\n    }\n\n    clone( value ) {\n        return new this.type( this.toJSON( value ) );\n    }\n\n    isChanged( a, b ){\n        return a !== b;\n    }\n}\n\nFunction.prototype._attribute = ImmutableClassType;\n\n/**\n * Optimized attribute of primitive type.\n * \n * Primitives has specialized simplified pipeline.\n */\nexport class PrimitiveType extends AnyType {\n    type : NumberConstructor | StringConstructor | BooleanConstructor\n\n    dispose(){}\n    create() { return this.type(); }\n\n    toJSON( value ) { return value; }\n\n    convert( next ) { return next == null ? next : this.type( next ); }\n\n    isChanged( a, b ) { return a !== b; }\n\n    clone( value ) { return value; }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    initialize(){\n        if( !this.options.hasCustomDefault ){\n            this.value = this.type();\n        }\n    }\n}\n\nBoolean._attribute = String._attribute = PrimitiveType;\n\n// Number type with special validation algothim.\n/** @private */ \nexport class NumericType extends PrimitiveType {\n    type : NumberConstructor\n\n    create(){\n        return 0;\n    }\n\n    convert( next, prev?, record? ) {\n        const num = next == null ? next : this.type( next );\n\n        if( num !== num ){\n            this._log( 'warn', 'assigned with Invalid Number', next, record );\n        }\n        \n        return num;\n    }\n\n    validate( model, value, name ) {\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\n        if( value != null && !isFinite( value ) ) {\n            return name + ' is not valid number';\n        }\n    }\n}\n\nNumber._attribute = NumericType;\n\n/**\n * Add Number.integer attrubute type\n */\ndeclare global {\n    interface NumberConstructor {\n        integer : Function\n    }\n\n    interface Window {\n        Integer : Function;\n    }\n}\n\nfunction Integer( x ){\n    return x ? Math.round( x ) : 0;\n}\nInteger._attribute = NumericType;\nNumber.integer = Integer;\n\n\nif( typeof window !== 'undefined' ){\n    window.Integer = Number.integer;\n}\n\n/**\n * Compatibility wrapper for Array type.\n * @private\n */ \nexport class ArrayType extends AnyType {\n    toJSON( value ) { return value; }\n    dispose(){}\n    create(){ return []; }\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Array...\n        if( next == null || Array.isArray( next ) ) return next;\n\n        this._log( 'warn', 'assignment of non-array to Array attribute is ignored', next, record );\n\n        return [];\n    }\n\n    clone( value ){\n        return value && value.slice();\n    }\n}\n\nArray._attribute = ArrayType;\n\nexport class ObjectType extends AnyType {\n    create(){ return {}; }\n\n    convert( next, prev, record ) {\n        if( next == null || typeof next === 'object' ) return next;\n                \n        this._log( 'warn', 'assignment of non-object to Object attribute is ignored', next, record );\n        return {};\n    }\n}\n\nObject._attribute = ObjectType;\n\nexport function doNothing(){}\n\nexport class FunctionType extends AnyType {\n    // Functions are not serialized.\n    toJSON( value ) { return void 0; }\n    create(){ return doNothing; }\n    dispose(){}\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Function...\n        if( next == null || typeof next === 'function' ) return next;\n\n        this._log( 'warn', 'assigned with non-function', next, record );\n\n        return doNothing;\n    }\n\n    // Functions are not cloned.\n    clone( value ){ return value; }\n}\n\nFunction._attribute = FunctionType;","import { tools as _, eventsApi } from '../../object-plus'\n\nexport * from './any'\nexport * from './owned'\nexport * from './date'\nexport * from './basic'\nexport * from './shared'\nexport * from './updates'\nexport * from './attrDef'\n\nimport { AnyType } from './any'\nimport { ConstructorsMixin, constructorsMixin } from './updates'\nimport { toAttributeOptions, ChainableAttributeSpec } from './attrDef'\nimport { CompiledReference } from '../../traversable'\nimport { IOEndpoint } from '../../io-tools'\n\nexport interface RecordAttributesMixin extends ConstructorsMixin {\n    // Attributes descriptors\n    _attributes : AttributeDescriptors\n    _attributesArray : AnyType[]\n    \n    // Attribute's property descriptors\n    properties : PropertyDescriptorMap\n\n    // Attributes serialization\n    _toJSON() : any\n\n    // Event map for record's local events.\n    _localEvents? : eventsApi.EventMap,\n\n    _endpoints : { [ name : string ] : IOEndpoint }\n}\n\nexport interface AttributeDescriptors {\n    [ name : string ] : AnyType\n}\n\n// Create record mixin from the given record's attributes definition\nexport default function( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : RecordAttributesMixin {\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\n\n    const ConstructorsMixin = constructorsMixin( allAttributes );\n\n    return {\n        ...ConstructorsMixin,\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\n        _toJSON : createToJSON( allAttributes ),\n        ...parseMixin( allAttributes ),\n        ...localEventsMixin( myAttributes ),\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\n    }            \n}\n\n// Create attribute from the type spec.\nexport function createAttribute( spec : any, name : string ) : AnyType {\n    return AnyType.create( toAttributeOptions( spec ), name );\n}\n\nfunction parseMixin( attributes : AttributeDescriptors ){\n    const attrsWithParse = Object.keys( attributes ).filter( name => attributes[ name ].parse );\n\n    return attrsWithParse.length ? {\n        _parse : new Function( 'json', `\n            var _attrs = this._attributes;\n\n            ${ attrsWithParse.map( name => `                \n                json.${ name } === void 0 || ( json.${ name } = _attrs.${ name }.parse.call( this, json.${ name }, \"${ name }\" ) );\n            ` ).join('')}\n\n            return json;\n        ` )\n    } : {};\n}\n\nfunction createToJSON( attributes : AttributeDescriptors ) : () => void {\n    return new Function(`\n        var json = {},\n            v = this.attributes,\n            a = this._attributes;\n\n        ${ Object.keys( attributes ).map( key => {\n            if( attributes[ key ].toJSON ){\n                return `json.${key} = a.${key}.toJSON.call( this, v.${ key }, '${key}' );`;\n            }\n        } ).join( '\\n' ) }\n\n        return json;\n    `) as any;\n}\n\nexport function createSharedTypeSpec( Constructor : Function, Attribute : typeof AnyType ){\n    if( !Constructor.hasOwnProperty( 'shared' ) ){\n        Object.defineProperty( Constructor, 'shared', {\n            get(){\n                return new ChainableAttributeSpec({\n                    value : null,\n                    type : Constructor,\n                    _attribute : Attribute\n                });\n            }\n        });\n    }\n}\n\ninterface LocalEventsMixin {\n    _localEvents? : eventsApi.EventMap\n}\n\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\n    let _localEvents : eventsApi.EventMap;\n\n    for( var key in attrSpecs ){\n        const attribute = attrSpecs[ key ],\n            { _onChange } = attribute.options; \n\n        if( _onChange ){\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\n\n            _localEvents.addEvent( 'change:' + key,\n                typeof _onChange === 'string' ?\n                    createWatcherFromRef( _onChange, key ) : \n                    wrapWatcher( _onChange, key ) );\n        }\n    }\n\n    return _localEvents ? { _localEvents } : {};\n}\n\nfunction wrapWatcher( watcher, key ){\n    return function( record, value ){\n        watcher.call( record, value, key );\n    } \n}\n\nfunction createWatcherFromRef( ref : string, key : string ){\n    const { local, resolve, tail } = new CompiledReference( ref, true );\n    return local ?\n        function( record, value ){\n            record[ tail ]( value, key );\n        } :\n        function( record, value ){\n            resolve( record )[ tail ]( value, key );\n        }\n}","/**\n * Select appropriate helpers function for particular value type.\n */\nexport interface IterableLink {\n    value : any\n    at( key : number | string ) : any\n}\n\nexport type Iterator = ( link : any, key : string | number ) => any;\n\nexport interface Helper {\n    map( link : IterableLink, iterator : Iterator ) : any[]\n    clone( obj : any ) : any,\n    remove( obj : any, key : string | number ) : any\n}\n\nconst ArrayProto = Array.prototype,\n      ObjectProto = Object.prototype;\n\nexport function helpers( value ) : Helper {\n    if( value && typeof value === 'object' ){\n        switch( Object.getPrototypeOf( value ) ){\n            case ArrayProto  : return arrayHelpers;\n            case ObjectProto : return objectHelpers;\n        }\n    }\n\n    return dummyHelpers;\n}\n\n// Do nothing for types other than Array and plain Object.\nconst dummyHelpers : Helper = {\n    clone( value ){ return value; },\n    map( link : IterableLink, fun ){ return []; },\n    remove( value ){ return value; }\n};\n\n// `map` and `clone` for plain JS objects\nexport const objectHelpers : Helper = {\n    // Map through the link to object\n    map( link : IterableLink, iterator : Iterator ) : any[] {\n        let mapped = [];\n\n        for( let key in link.value ){\n            const element = iterator( link.at( key ), key );\n            element === void 0 || ( mapped.push( element ) );\n        }\n\n        return mapped;\n    },\n\n    remove( object : {}, key : string ) : {} {\n        delete object[ key ];\n        return object;\n    },\n\n     // Shallow clone plain JS object\n    clone( object : {} ) : {} {\n        let cloned = {};\n\n        for( let key in object ){\n            cloned[ key ] = object[ key ];\n        }\n\n        return cloned;\n    }\n};\n\n// `map` and `clone` helpers for arrays.\nexport const arrayHelpers : Helper = {\n    // Shallow clone array\n    clone( array : any[] ) : any[] {\n        return array.slice();\n    },\n\n    remove( array : any[], i : number ) : any[] {\n        array.splice( i, 1 );\n        return array;\n    },\n\n    // Map through the link to array\n    map( link : IterableLink, iterator : Iterator ) : any[] {\n        const length = link.value.length,\n              mapped = Array( length );\n\n        for( var i = 0, j = 0; i < length; i++ ){\n            const y = iterator( link.at( i ), i );\n            y === void 0 || ( mapped[ j++ ] = y );\n        }\n\n        mapped.length === j || ( mapped.length = j );\n\n        return mapped;\n    }\n};","import { Link } from '../link'\n\nexport interface LinksCache {\n    [ key : string ] : RecordLink\n}\n\nexport interface LinkedRecord {\n    _links : LinksCache\n    _changeToken : {}\n\n    AttributesCopy : { new ( source : object ) : LinksCache }\n\n    deepGet( path : string ) : any\n    deepSet( path : string, value : any, options : object ) : this\n    deepValidationError( path : string ) : any\n    getValidationError( path : string ) : any\n}\n\nexport const RecordLinksMixin = {\n    // Link to the record's attribute by its key.\n    linkAt( key : string ) : RecordLink {\n        return cacheLink( getLinksCache( this ), this, key );\n    },\n\n    // Link to the attribute of the record's tree by symbolic path.\n    linkPath( path : string, options? : {} ) : RecordDeepLink {\n        return new RecordDeepLink( this, path, options )\n    },\n\n    // Link all (or listed) attributes and return links cache.\n    linkAll() : LinksCache {\n        const links = getLinksCache( this );\n\n        if( arguments.length ){\n            for( let i = 0; i < arguments.length; i++ ){\n                cacheLink( links, this, arguments[ i ] );\n            }\n        }\n        else{\n            const { attributes } = this;\n\n            for( let key in attributes ){\n                attributes[ key ] === void 0 || cacheLink( links, this, key );\n            }\n        }\n\n        return links;\n    }\n};\n\nfunction getLinksCache( record : LinkedRecord ) : LinksCache {\n    return record._links || ( record._links = new record.AttributesCopy( {} ) );\n}\n\nfunction cacheLink( links : LinksCache, record : LinkedRecord, key : string ) : RecordLink {\n    var cached = links[ key ],\n        value = record[ key ];\n\n    return cached && cached.value === value ? cached\n                : links[ key ] = new RecordLink( record, key, value );\n}\n\n\n/**\n * Link to Type-R's record attribute.\n * Strict evaluation of value, lazy evaluation of validation error.\n * Links are cached in the records\n */\nexport class RecordLink extends Link< any > {\n    constructor( public record : LinkedRecord, public attr, value ){\n        super( value );\n    }\n\n    set( x ){\n        this.record[ this.attr ] = x;\n    }\n\n    _error? : any\n\n    get error(){\n        return this._error === void 0 ?\n                    this.record.getValidationError( this.attr ) :\n                    this._error;\n    }\n\n    set error( x ){\n        this._error = x;\n    }\n}\n\nexport class RecordDeepLink extends Link< any > {\n    constructor( public record : LinkedRecord, public path : string, public options : object ){\n        super( record.deepGet( path ) );\n    }\n\n    _error? : any\n\n    get error(){\n        if( this._error === void 0 ){\n            this._error = this.record.deepValidationError( this.path ) || null;\n        }\n\n        return this._error;\n    }\n\n    set error( x ){\n        this._error = x;\n    }\n\n    get _changeToken(){\n        return this.record._changeToken;\n    }\n\n    set( x ){\n        this.record.deepSet( this.path, x, this.options );\n    }\n}","/**\n * Record core implementing transactional updates.\n * The root of all definitions. \n */\n\nimport { tools, eventsApi, Mixable, definitions, mixins,  mixinRules, define } from '../object-plus'\n\nimport { CloneOptions, Transactional, TransactionalDefinition, Transaction, TransactionOptions, Owner } from '../transactions'\nimport { ChildrenErrors } from '../validation'\n\nimport { Collection } from '../collection'\n\nimport { AnyType, AggregatedType, setAttribute, UpdateRecordMixin, \n    AttributesValues, AttributesContainer,\n    ConstructorsMixin, AttributesConstructor, AttributesCopyConstructor } from './attributes'\n\nimport { IORecord, IORecordMixin } from './io-mixin'\nimport { IOPromise, IOEndpoint } from '../io-tools'\n\nimport { LinkedRecord, RecordLink, RecordLinksMixin, LinksCache } from './links'\n\nconst { assign, isEmpty, log } = tools;\n\n/*******************************************************\n * Record core implementation\n */\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\n// Client unique id counter\nlet _cidCounter : number = 0;\n\n/***************************************************************\n * Record Definition as accepted by Record.define( definition )\n */\nexport interface RecordDefinition extends TransactionalDefinition {\n    idAttribute? : string\n    attributes? : AttributesValues\n    collection? : object\n    Collection? : typeof Transactional\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'm',\n\n    // Name of the change event\n    _changeEventName : 'change',\n\n    // Default id attribute name\n    idAttribute : 'id'\n})\n@mixins( IORecordMixin, RecordLinksMixin )\n@definitions({\n    defaults : mixinRules.merge,\n    attributes : mixinRules.merge,\n    collection : mixinRules.merge,\n    Collection : mixinRules.value,\n    idAttribute : mixinRules.protoValue\n})\nexport class Record extends Transactional implements IORecord, LinkedRecord, AttributesContainer {\n    // Hack\n    static onDefine( definition, BaseClass ){}\n\n    static Collection : typeof Collection;\n    static DefaultCollection : typeof Collection;\n\n    static from : ( collectionReference : any ) => any;\n    \n    static defaults( attrs : AttributesValues ) : typeof Record {\n        return <any>this.extend({ attributes : attrs });\n    }\n    \n    static attributes : AttributesValues\n\n    /**\n     * Links methods\n     */\n    _links :  LinksCache = void 0;\n\n    linkAt : ( key : string ) => RecordLink\n    linkPath : ( key : string, options? : object ) => RecordLink\n    linkAll : ( ...keys : string [] ) => LinksCache\n\n    /********************\n     * IO Methods\n     */\n     _endpoints : { [ name : string ] : IOEndpoint }\n\n     // Save record\n     save : ( options? : object ) => IOPromise<any>\n\n     // Destroy record\n     destroy : ( options? : object ) => IOPromise<any>\n\n    /***********************************\n     * Core Members\n     */\n    // Previous attributes\n    _previousAttributes : {}\n\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \n\n    // Current attributes    \n    attributes : AttributesValues\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.attributes; }\n\n    // Lazily evaluated changed attributes hash\n    _changedAttributes : AttributesValues\n\n    get changed(){\n        let changed = this._changedAttributes;\n\n        if( !changed ){\n            const prev = this._previousAttributes;\n            changed = {};\n\n            const { _attributes, attributes } = this;\n\n            for( let attr of this._attributesArray ){\n                const key = attr.name,\n                    value = attributes[ key ];\n\n                if( attr.isChanged( value, prev[ key ] ) ){\n                    changed[ key ] = value;\n                }\n            }\n\n            this._changedAttributes = changed;\n        }\n\n        return changed;    \n    }\n\n    changedAttributes( diff? : {} ) : boolean | {} {\n        if( !diff ) return this.hasChanged() ? assign( {}, this.changed ) : false;\n\n        var val, changed : {} | boolean = false,\n            old          = this._transaction ? this._previousAttributes : this.attributes,\n            attrSpecs    = this._attributes;\n\n        for( var attr in diff ){\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\n            (changed || (changed = {}))[ attr ] = val;\n        }\n\n        return changed;        \n    }\n\n    hasChanged( key? : string ) : boolean {\n        const { _previousAttributes } = this;\n        if( !_previousAttributes ) return false;\n\n        return key ?\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\n                !isEmpty( this.changed );\n    }\n\n    previous( key : string ) : any {\n        if( key ){\n            const { _previousAttributes } = this;\n            if( _previousAttributes ) return _previousAttributes[ key ];\n        }\n        \n        return null;\n    }\n\n    isNew() : boolean {\n        return this.id == null;\n    }\n\n    has( key : string ) : boolean {\n        return this[ key ] != void 0;\n    }\n\n    // Return attribute value, setting an attribute to undefined.\n    // TODO: If attribute was aggregated, don't dispose it.\n    unset( key : string, options? ) : any {\n        const value = this[ key ];\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\n        return value;\n    }\n\n    // Undocumented. Move to NestedTypes?\n    clear( options? ) : this {\n        const nullify = options && options.nullify;\n\n        this.transaction( () =>{\n            this.forEachAttr( this.attributes, ( value, key ) => this[ key ] = nullify ? null : void 0 );\n        }, options );\n\n        return this;\n    }\n\n    // Returns Record owner skipping collections. TODO: Move out\n    getOwner() : Owner {\n        const owner : any = this._owner;\n\n        // If there are no key, owner must be transactional object, and it's the collection.\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\n        return this._ownerKey ? owner : owner && owner._owner;\n    }\n\n    /***********************************\n     * Identity managements\n     */\n\n    // Id attribute name ('id' by default)\n    idAttribute : string;\n\n    // Fixed 'id' property pointing to id attribute\n    get id() : string | number { return this.attributes[ this.idAttribute ]; }\n    set id( x : string | number ){ setAttribute( this, this.idAttribute, x ); }\n\n    /***********************************\n     * Dynamically compiled stuff\n     */\n\n    // Attributes specifications \n    _attributes : { [ key : string ] : AnyType }\n    _attributesArray : AnyType[]\n\n    // Attributes object copy constructor\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n\n    // forEach function for traversing through attributes, with protective default implementation\n    // Overriden by dynamically compiled loop unrolled function in define.ts\n    forEachAttr( attrs : {}, iteratee : ( value : any, key? : string, spec? : AnyType ) => void ) : void {\n        const { _attributes } = this;\n        let unknown : string[];\n\n        for( let name in attrs ){\n            const spec = _attributes[ name ];\n\n            if( spec ){\n                iteratee( attrs[ name ], name, spec );\n            }\n            else{\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            this._log( 'warn', `attributes ${ unknown.join(', ')} are not defined`,{\n                attributes : attrs\n            } );\n        }\n    }\n\n    each( iteratee : ( value? : any, key? : string ) => void, context? : any ){\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\n            { attributes } = this;\n\n        for( const key in this.attributes ){\n            const value = attributes[ key ];\n            if( value !== void 0 ) fun( value, key );\n        }\n    }\n\n    // Get array of attribute keys (Record) or record ids (Collection) \n    keys() : string[] {\n        const keys : string[] = [];\n\n        this.each( ( value, key ) => value === void 0 || keys.push( key ) );\n\n        return keys;\n    }\n\n    // Get array of attribute values (Record) or records (Collection)\n    values() : any[] {\n        return this.map( value => value );\n    }\n\n    // Attributes-level serialization\n    _toJSON(){ return {}; }\n\n    // Attributes-level parse\n    _parse( data ){ return data; }\n\n    // Create record default values, optionally augmenting given values.\n    defaults( values = {} ){\n        const defaults = {},\n            { _attributesArray } = this;\n\n        for( let attr of _attributesArray ){\n            const key = attr.name,\n            value = values[ key ];\n\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\n        }\n\n        return defaults;\n    }\n\n    /***************************************************\n     * Record construction\n     */\n    // Create record, optionally setting an owner\n    constructor( a_values? : {}, a_options? : ConstructorOptions ){\n        super( _cidCounter++ );\n        this.attributes = {};\n        \n        const options = a_options || {},\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\n\n        if( log.level > 1 ) typeCheck( this, values );\n\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\n\n        this.initialize( a_values, a_options );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    // Initialization callback, to be overriden by the subclasses \n    initialize( values?, options? ){}\n\n    // Deeply clone record, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n\n        return copy;\n    }\n\n    // Deprecated, every clone is the deep one now.\n    deepClone() : this { return this.clone() };\n\n    // Validate attributes.\n    _validateNested( errors : ChildrenErrors ) : number {\n        var length    = 0;\n\n        this.forEachAttr( this.attributes, ( value, name, attribute ) => {\n            const error = attribute.validate( this, value, name );\n\n            if( error ){\n                errors[ name ] = error;\n                length++;\n            }\n        } );\n\n        return length;\n    }\n\n    // Get attribute by key\n    get( key : string ) : any {\n        return this[ key ];\n    }\n\n    /**\n     * Serialization control\n     */\n\n    // Default record-level serializer, to be overriden by subclasses \n    toJSON() : Object {\n        const json = {};\n\n        this.forEachAttr( this.attributes, ( value, key : string, { toJSON } ) =>{\n            // If attribute serialization is not disabled, and its value is not undefined...\n            if( value !== void 0 ){\n                // ...serialize it according to its spec.\n                const asJson = toJSON.call( this, value, key );\n\n                // ...skipping undefined values. Such an attributes are excluded.\n                if( asJson !== void 0 ) json[ key ] = asJson; \n            }\n        });\n\n        return json;\n    }\n    \n    // Default record-level parser, to be overriden by the subclasses.\n    parse( data, options? : TransactionOptions ){\n        // Call dynamically compiled loop-unrolled attribute-level parse function.\n        return this._parse( data );\n    }\n\n    /**\n     * Transactional control\n     */\n\n    deepSet( name : string, value : any, options? ){\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\n        this.transaction( () => {\n            const path  = name.split( '.' ),\n                l     = path.length - 1,\n                attr  = path[ l ];\n\n            let model = this;\n\n            // Locate the model, traversing the path.\n            for( let i = 0; i < l; i++ ){\n                const key = path[ i ];\n\n                // There might be collections in path, so use `get`.\n                let next    = model.get ? model.get( key ) : model[ key ];\n\n                // Create models, if they are not exist.\n                if( !next ){\n                    const attrSpecs = model._attributes;\n                    if( attrSpecs ){\n                        // If current object is model, create default attribute\n                        var newModel = attrSpecs[ key ].create();\n\n                        // If created object is model, nullify attributes when requested\n                        if( options && options.nullify && newModel._attributes ){\n                            newModel.clear( options );\n                        }\n\n                        model[ key ] = next = newModel;\n                    }\n                    // Silently fail in other case.\n                    else return;\n                }\n                \n                model = next;\n            }\n\n            // Set model attribute.\n            if( model.set ){\n                model.set({ [ attr ] : value }, options );\n            }\n            else{\n                model[ attr ] = value;\n            }\n        });\n\n        return this;\n    }\n            \n    // Returns owner without the key (usually it's collection)\n    get collection() : any {\n        return this._ownerKey ? null : this._owner;\n    }\n\n    // Dispose object and all childrens\n    dispose(){\n        if( this._disposed ) return;\n        \n        this.forEachAttr( this.attributes, ( value, key, attribute ) => {\n            attribute.dispose( this, value );\n        });\n\n        super.dispose();\n    }\n\n    _log( level : tools.LogLevel, text : string, props : object ) : void {\n        tools.log( level, '[Record] ' + text, {\n            'Record' : this,\n            'Attributes definition:' : this._attributes,\n            ...props\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Record';\n    }\n\n    // Dummies to \n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\n    // Simulate attribute change \n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\n};\n\nassign( Record.prototype, UpdateRecordMixin );\n\n/***********************************************\n * Helper functions\n */\n\nclass BaseRecordAttributes {\n    id : string | number\n\n    constructor( record : Record, x : AttributesValues, options : TransactionOptions ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.Attributes = BaseRecordAttributes;\n\nclass BaseRecordAttributesCopy {\n    id : string | number\n\n    constructor( x : AttributesValues ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.AttributesCopy = BaseRecordAttributesCopy;\n\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\nRecord.prototype._attributes = { id : IdAttribute };\nRecord.prototype._attributesArray = [ IdAttribute ];\nRecord._attribute = AggregatedType;\n\nimport { shouldBeAnObject } from './attributes'\n\nfunction typeCheck( record : Record, values : object ){\n    if( shouldBeAnObject( record, values ) ){\n        const { _attributes } = record;\n        let unknown : string[];\n\n        for( let name in values ){\n            if( !_attributes[ name ] ){\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            record._log( 'warn', `undefined attributes ${ unknown.join(', ')} are ignored.`, { values } );\n        }\n    }\n}","import { Record, RecordDefinition } from './record'\nimport { Mixable, tools, predefine, define, MixinsState } from '../object-plus'\nimport compile from './attributes'\nimport { Transactional } from '../transactions'\n\nimport { createSharedTypeSpec, AggregatedType, MSDateType, TimestampType, NumericType, SharedType } from './attributes'\n\nexport * from './attributes'\nexport { Record }\n\nconst { assign, defaults, omit, getBaseClass } = tools;\n\nRecord.onExtend = function( this : typeof Record, BaseClass : typeof Record ){\n    Transactional.onExtend.call( this, BaseClass );\n\n    // Create the default collection\n    const Class = this;\n\n    @predefine class DefaultCollection extends BaseClass.Collection<any> {\n        static model = Class;\n    }\n\n    this.DefaultCollection = DefaultCollection;\n\n    // If there are no collection defined in statics, use the default collection.\n    // It will appear in onDefine's definition, overriding all other settings.\n    if( Class.Collection === BaseClass.Collection ){\n        this.Collection = DefaultCollection;\n    }\n\n    // Create Class.shared modifier\n    createSharedTypeSpec( this, SharedType );\n}\n\nRecord.onDefine = function( definition : RecordDefinition, BaseClass : typeof Record ){\n    const baseProto : Record = BaseClass.prototype;\n\n    // Compile attributes spec, creating definition mixin.\n    const { properties, _localEvents, ...dynamicMixin } = compile( this.attributes = getAttributes( definition ), baseProto._attributes );\n    assign( this.prototype, dynamicMixin );\n    \n    definition.properties = defaults( definition.properties || {}, properties );\n    definition._localEvents = _localEvents;\n    \n    Transactional.onDefine.call( this, definition, BaseClass );\n\n    // Finalize the definition of the default collection.\n    this.DefaultCollection.define( definition.collection || {} );\n\n    // assign collection from the definition.\n    this.Collection = definition.Collection;\n    this.Collection.prototype.model = this;\n\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;    \n}\n\nRecord._attribute = AggregatedType;\ncreateSharedTypeSpec( Record, SharedType );\n\nfunction getAttributes({ defaults, attributes, idAttribute } : RecordDefinition ) {\n    const definition = attributes || defaults || {};\n    \n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\n    if( idAttribute && !( idAttribute in definition ) ){\n        definition[ idAttribute ] = void 0;\n    }\n\n    return definition;\n}\n\ndeclare var Reflect;\n\nexport function attr( proto, attrName? ) : any {\n    if( attrName ){\n        // Called without the spec. Extract the type.\n        if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\n            Reflect\n                .getMetadata( \"design:type\", proto, attrName )\n                .asProp( proto, attrName );\n        }\n        else{\n            proto._log( 'error', 'Add import \"reflect-metadata\"; as the first line of your app.' );\n        }\n    }\n    else{\n        return proto.asProp;\n    }\n}\n\nexport function prop( spec ) : any {\n    return spec.asProp;\n}","import { Record } from '../record'\nimport { Owner, Transaction, ItemsBehavior,\n        TransactionOptions, Transactional, transactionApi } from '../transactions'\n\nimport { eventsApi, tools } from '../object-plus'\n\nconst { EventMap, trigger2, trigger3, on, off } = eventsApi,\n      { commit, markAsDirty } = transactionApi,\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\n\n/** @private */\nexport interface CollectionCore extends Transactional, Owner {\n    _byId : IdIndex\n    models : Record[]\n    model : typeof Record\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\n    _comparator : Comparator\n    get( objOrId : string | Record | Object ) : Record    \n    _itemEvents? : eventsApi.EventMap\n    _shared : number\n    _aggregationError : Record[]\n\n    _log( level : string, text : string, value : any ) : void\n}\n\n// Collection's manipulation methods elements\nexport type Elements = ( Object | Record )[];\n\nexport interface CollectionOptions extends TransactionOptions {\n    sort? : boolean\n}\n\nexport type Comparator = ( a : Record, b : Record ) => number;  \n\n/** @private */\nexport function dispose( collection : CollectionCore ) : Record[]{\n    const models = collection.models;\n\n    collection.models = [];\n    collection._byId  = {};\n\n    freeAll( collection, models );\n    return models;\n}\n\n/** @private */\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Record, options : CollectionOptions ){\n    const { model } = collection;\n    \n    let record : Record;\n\n    if( collection._shared ){\n        record = attrs instanceof model ? attrs : <Record>model.create( attrs, options );\n\n        if( collection._shared & ItemsBehavior.listen ){\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\n        }\n    }\n    else{\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Record>model.create( attrs, options );\n\n        if( !_aquire( collection, record ) ){\n            const errors = collection._aggregationError || ( collection._aggregationError = [] );\n            errors.push( record );\n        }\n    }    \n\n    // Subscribe for events...\n    const { _itemEvents } = collection;\n    _itemEvents && _itemEvents.subscribe( collection, record );\n\n    return record;\n}\n\n/** @private */\nexport function free( owner : CollectionCore, child : Record, unset? : boolean ) : void {\n    if( owner._shared ){\n        if( owner._shared & ItemsBehavior.listen ){\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\n        }\n    }\n    else{\n        _free( owner, child );\n        unset || child.dispose();\n    }\n\n    const { _itemEvents } = owner;\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\n}\n\n/** @private */\nexport function freeAll( collection : CollectionCore, children : Record[] ) : Record[] {\n    for( let child of children ){\n        free( collection, child );\n    }\n\n    return children;\n}\n\n/**\n * Silently sort collection, if its required. Returns true if sort happened.\n * @private\n */   \nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\n    let { _comparator } = collection;\n    if( _comparator && options.sort !== false ){\n        collection.models.sort( _comparator );\n        return true;\n    }\n\n    return false;\n}\n\n/**********************************\n * Collection Index\n * @private \n */\nexport interface IdIndex {\n    [ id : string ] : Record\n}\n\n/** @private Add record */ \nexport function addIndex( index : IdIndex, model : Record ) : void {\n    index[ model.cid ] = model;\n    var id             = model.id;\n    \n    if( id != null ){\n        index[ id ] = model;\n    }\n}\n\n/** @private Remove record */ \nexport function removeIndex( index : IdIndex, model : Record ) : void {\n    delete index[ model.cid ];\n    var id = model.id;\n    if( id != null ){\n        delete index[ id ];\n    }\n}\n\nexport function updateIndex( index : IdIndex, model : Record ){\n    delete index[ model.previous( model.idAttribute ) ];\n\n    const { id } = model;\n    id == null || ( index[ id ] = model );\n}\n\n/***\n * In Collections, transactions appears only when\n * add remove or change events might be emitted.\n * reset doesn't require transaction.\n * \n * Transaction holds information regarding events, and knows how to emit them.\n * \n * Two major optimization cases.\n * 1) Population of an empty collection\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\n */\n\n\n// Transaction class. Implements two-phase transactions on object's tree.\n/** @private */ \nexport class CollectionTransaction implements Transaction {\n    // open transaction\n    constructor(    public object : CollectionCore,\n                    public isRoot : boolean,\n                    public added : Record[],\n                    public removed : Record[],\n                    public nested : Transaction[],\n                    public sorted : boolean ){}\n\n    // commit transaction\n    commit( initiator? : Transactional ){\n        const { nested, object } = this,\n              { _isDirty } = object;\n\n        // Commit all nested transactions...\n        for( let transaction of nested ){\n            transaction.commit( object );\n        }\n\n        if( object._aggregationError ){\n            logAggregationError( object );\n        }\n\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \n        for( let transaction of nested ){\n            trigger2( object, 'change', transaction.object, _isDirty );\n        }\n\n        // Notify listeners on attribute changes...\n        const { added, removed } = this;\n\n        // Trigger `add` events for both model and collection.\n        for( let record of added ){\n            trigger3( record, 'add', record, object, _isDirty );\n            trigger3( object, 'add', record, object, _isDirty );\n        }\n\n        // Trigger `remove` events for both model and collection.\n        for( let record of removed ){\n            trigger3( record, 'remove', record, object, _isDirty );\n            trigger3( object, 'remove', record, object, _isDirty );\n        }\n\n        if( this.sorted ){\n            trigger2( object, 'sort', object, _isDirty );\n        }\n\n        if( added.length || removed.length ){\n            trigger2( object, 'update', object, _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}\n\nexport function logAggregationError( collection : CollectionCore ){\n    collection._log( 'error', 'added records already have an owner', collection._aggregationError );\n    collection._aggregationError = void 0;\n}","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, sortElements, convertAndAquire, free, CollectionOptions, addIndex, updateIndex, CollectionCore } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\nexport interface AddOptions extends CollectionOptions {\n    at? : number \n}\n\n/** @private */\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\n    const isRoot = begin( collection ),\n          nested : Transaction[]= [];\n\n    var added = appendElements( collection, items, nested, options, merge );\n\n    if( added.length || nested.length ){\n        let needSort = sortOrMoveElements( collection, added, options );\n        if( markAsDirty( collection, options ) ){\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\n/** @private */ \nfunction sortOrMoveElements( collection : CollectionCore, added : Record[], options : AddOptions ) : boolean {\n    let at = options.at;\n\n    // if `at` option is given, it overrides sorting option...\n    if( at != null ){\n        // Take an original collection's length. \n        const length = collection.models.length - added.length;\n\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\n        at = Number( at );\n        if( at < 0 ) at += length + 1;\n        if( at < 0 ) at = 0;\n        if( at > length ) at = length;\n\n        // Move added elements to desired position. In place.\n        moveElements( collection.models, at, added );\n        return false;\n    }\n\n    return sortElements( collection, options );\n}\n\n/** @private */\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\n        source[ j ] = source[ i ];\n    }\n\n    for( i = 0, j = at; i < added.length; i++, j++ ){\n        source[ j ] = added[ i ];\n    }\n}\n\n// append data to model and index\n/** @private */\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\n    var { _byId, models } = collection,\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\n        parse       = a_options.parse,\n        idAttribute = collection.model.prototype.idAttribute,\n        prevLength = models.length;\n\n    for( const item of a_items ){\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\n\n        if( model ){\n            if( merge && item !== model ){\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, a_options );\n                transaction && nested.push( transaction );\n\n                if( model.hasChanged( idAttribute ) ){\n                    updateIndex( _byId, model );\n                }\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, a_options );\n            models.push( model );\n            addIndex( _byId, model );\n        }\n    }\n\n    return models.slice( prevLength );\n}\n","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, IdIndex, convertAndAquire, free, sortElements, CollectionOptions, addIndex, CollectionCore, Elements, freeAll } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\n/** @private */\nconst silentOptions = { silent : true };\n\n/** @private */\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\n    const isRoot = begin( collection );\n\n    const added = _reallocateEmpty( collection, items, options );\n\n    if( added.length ){\n        const needSort = sortElements( collection, options );\n\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\n            // 'added' is the reference to this.models. Need to copy it.\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n/** @private */\nexport function setTransaction( collection, items, options ){\n    const isRoot = begin( collection ),\n          nested = [];\n\n    var previous = collection.models,\n        added    = _reallocate( collection, items, nested, options );\n\n    const reusedCount = collection.models.length - added.length,\n          removed = reusedCount < previous.length ? (\n                        reusedCount ? _garbageCollect( collection, previous ) :\n                                        freeAll( collection, previous )\n                    ) : [];                    \n    \n    const addedOrChanged = nested.length || added.length,\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\n\n    if( addedOrChanged || removed.length || sorted ){\n        if( markAsDirty( collection, options ) ){ \n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    isRoot && commit( collection );\n};\n\n// Remove references to all previous elements, which are not present in collection.\n// Returns an array with removed elements.\n/** @private */\nfunction _garbageCollect( collection : CollectionCore, previous : Record[] ) : Record[]{\n    const { _byId }  = collection,\n          removed = [];\n\n    // Filter out removed models and remove them from the index...\n    for( let record of previous ){\n        if( !_byId[ record.cid ] ){\n            removed.push( record );\n            free( collection, record );\n        }\n    }\n\n    return removed;\n}\n\n// reallocate model and index\n/** @private */\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\n    var models      = Array( source.length ),\n        _byId : IdIndex = {},\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\n        _prevById   = collection._byId,\n        prevModels  = collection.models, \n        idAttribute = collection.model.prototype.idAttribute,\n        toAdd       = [],\n        orderKept   = true;\n\n    // for each item in source set...\n    for( var i = 0, j = 0; i < source.length; i++ ){\n        var item  = source[ i ],\n            model : Record = null;\n\n        if( item ){\n            var id  = item[ idAttribute ],\n                cid = item.cid;\n\n            if( _byId[ id ] || _byId[ cid ] ) continue;\n\n            model = _prevById[ id ] || _prevById[ cid ];\n        }\n\n        if( model ){\n            if( merge && item !== model ){\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\n\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, options );\n                transaction && nested.push( transaction );\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, options );\n            toAdd.push( model );\n        }\n\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    collection.models   = models;\n    collection._byId    = _byId;\n\n    if( !orderKept ) options.sorted = true;\n\n    return toAdd;\n}\n\n/** @private */\nfunction _reallocateEmpty( self, source, options ){\n    var len         = source ? source.length : 0,\n        models      = Array( len ),\n        _byId : IdIndex = {},\n        idAttribute = self.model.prototype.idAttribute;\n\n    for( var i = 0, j = 0; i < len; i++ ){\n        var src = source[ i ];\n\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\n            continue;\n        }\n\n        var model = convertAndAquire( self, src, options );\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    self._byId    = _byId;\n\n    return self.models = models;\n}","/*************\n * Remove items from collections.\n * \n * Cannot be a part of two-phase transaction on object tree.\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\n *\n * Implemented with low-level API. \n * Most frequent operation - single element remove. Thus, it have the fast-path.\n */\n\nimport { Record } from '../record'\nimport { free, CollectionCore, CollectionTransaction, removeIndex } from './commons'\nimport { eventsApi } from '../object-plus'\nimport { TransactionOptions, transactionApi } from '../transactions' \n\nconst { trigger2, trigger3 } = eventsApi,\n    { markAsDirty, begin, commit } = transactionApi;\n\n/** @private */\nexport function removeOne( collection : CollectionCore, el : Record | {} | string, options : TransactionOptions ) : Record {\n    var model : Record = collection.get( el );\n\n    if( model ){\n        const isRoot = begin( collection ),\n              models = collection.models;\n\n        // Remove model form the collection. \n        models.splice( models.indexOf( model ), 1 );\n        removeIndex( collection._byId, model );\n        \n        // Mark transaction as dirty. \n        const notify = markAsDirty( collection, options );\n\n        // Send out events.\n        if( notify ){\n            trigger3( model, 'remove', model, collection, options );\n            trigger3( collection, 'remove', model, collection, options );\n        } \n\n        free( collection, model, options.unset );\n\n        notify && trigger2( collection, 'update', collection, options );\n\n        // Commit transaction.\n        isRoot && commit( collection );\n\n        return model;\n    }\n};\n\n/** Optimized for removing many elements\n * 1. Remove elements from the index, checking for duplicates\n * 2. Create new models array matching index\n * 3. Send notifications and remove references\n */\n\n/** @private */\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\n    if( removed.length ){\n        const isRoot = begin( collection );\n\n        _reallocate( collection, removed.length );\n\n        if( markAsDirty( collection, options ) ){\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\n            transaction.commit();\n        }\n        else{\n            // Commit transaction.\n            isRoot && commit( collection );\n        }\n    }\n\n    return removed;\n};\n\n// remove models from the index...\n/** @private */\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\n    var removed = Array( toRemove.length ),\n        _byId   = collection._byId;\n\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\n        var model = collection.get( toRemove[ i ] );\n        if( model ){\n            removed[ j++ ] = model;\n            removeIndex( _byId, model );\n            free( collection, model, unset );\n        }\n    }\n\n    removed.length = j;\n\n    return removed;\n}\n\n// Allocate new models array removing models not present in the index.\n/** @private */\nfunction _reallocate( collection, removed ){\n    var prev   = collection.models,\n        models = collection.models = Array( prev.length - removed ),\n        _byId = collection._byId;\n\n    for( var i = 0, j = 0; i < prev.length; i++ ){\n        var model = prev[ i ];\n\n        if( _byId[ model.cid ] ){\n            models[ j++ ] = model;\n        }\n    }\n\n    models.length = j;\n}","import { define, tools, eventsApi, EventMap, definitions, mixinRules, EventsDefinition, Mixable } from '../object-plus'\nimport { ItemsBehavior, transactionApi, Transactional, CloneOptions, Transaction, TransactionOptions, TransactionalDefinition, Owner } from '../transactions'\nimport { Record, SharedType, AggregatedType, createSharedTypeSpec } from '../record'\n\nimport { IdIndex, free, sortElements, dispose, Elements, CollectionCore, addIndex, removeIndex, updateIndex, Comparator, CollectionTransaction } from './commons'\nimport { addTransaction, AddOptions } from './add'\nimport { setTransaction, emptySetTransaction } from './set'\nimport { removeOne, removeMany } from './remove'\nimport { IOPromise, startIO } from '../io-tools'\nimport { Link } from '../link'\n\nconst { trigger2, on, off } = eventsApi,\n    { begin, commit, markAsDirty } = transactionApi,\n    { omit, log, assign, defaults, assignToClassProto } = tools;\n\nlet _count = 0;\n\nexport type GenericComparator = string | ( ( x : Record ) => number ) | ( ( a : Record, b : Record ) => number ); \n\nexport interface CollectionOptions extends TransactionOptions {\n    comparator? : GenericComparator\n    model? : typeof Record\n}\n\nexport type Predicate<R> = ( val : R, key : number ) => boolean | object;\n\nexport interface CollectionDefinition extends TransactionalDefinition {\n    model? : typeof Record,\n    itemEvents? : EventsDefinition\n    _itemEvents? : EventMap\n}\n\nconst slice = Array.prototype.slice;\n\nclass CollectionRefsType extends SharedType {\n    static defaultValue = [];\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'c',\n    model : Record,\n    _changeEventName : 'changes',\n    _aggregationError : null\n})\n@definitions({\n    comparator : mixinRules.value,\n    model : mixinRules.protoValue,\n    itemEvents : mixinRules.merge\n})\nexport class Collection< R extends Record = Record> extends Transactional implements CollectionCore {\n    _shared : number\n    _aggregationError : Record[]\n\n    static Subset : typeof Collection\n    static Refs : typeof Collection\n    static _SubsetOf : typeof Collection\n    \n    createSubset( models : ElementsArg, options ){\n        const SubsetOf = (<any>this.constructor).subsetOf( this ).options.type,\n            subset   = new SubsetOf( models, options );\n            \n        subset.resolve( this );\n        return subset;\n    }\n\n    static onExtend( BaseClass : typeof Transactional ){\n        // Cached subset collection must not be inherited.\n        const Ctor = this;\n        this._SubsetOf = null;\n\n        function RefsCollection( a, b, listen? ){\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\n        }\n\n        Mixable.mixins.populate( RefsCollection );\n        \n        RefsCollection.prototype = this.prototype;\n        RefsCollection._attribute = CollectionRefsType;\n\n        this.Refs = this.Subset = <any>RefsCollection;\n\n        Transactional.onExtend.call( this, BaseClass );\n        createSharedTypeSpec( this, SharedType );\n    }\n    \n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\n        if( definition.itemEvents ){\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\n            eventsMap.addEventsMap( definition.itemEvents );\n            this.prototype._itemEvents = eventsMap;\n        }\n\n        if( definition.comparator ) this.prototype.comparator = definition.comparator;\n\n        Transactional.onDefine.call( this, definition );\n    }\n\n    static subsetOf : ( collectionReference : any ) => any;\n    \n    _itemEvents : EventMap\n\n    /***********************************\n     * Core Members\n     */\n    // Array of the records\n    models : R[]\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.models; }\n\n    // Index by id and cid\n    _byId : { [ id : string ] : R }\n\n    set comparator( x : GenericComparator ){\n        let compare;\n\n        switch( typeof x ){\n            case 'string' :\n                this._comparator = ( a, b ) => {\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\n                    if( aa === bb ) return 0;\n                    return aa < bb ? -1 : + 1;\n                } \n                break;\n            case 'function' :\n                if( x.length === 1 ){\n                    this._comparator = ( a, b ) => {\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\n                        if( aa === bb ) return 0;\n                        return aa < bb ? -1 : + 1;\n                    }\n                }\n                else{\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\n                }\n                break;\n                \n            default :\n                this._comparator = null;\n        }\n    }\n    \n    // TODO: Improve typing\n    getStore() : Transactional {\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\n    }\n\n    _store : Transactional\n\n    // Boolean link to the record's presence in the collection\n    linkContains( record : Record ) : CollectionLink {\n        return new CollectionLink( this, record );\n    }\n\n    // Link to collection's property\n    linkAt( prop : string ) : Link<any> {\n        return Link.value( this[ prop ], x => this[ prop ] = x );\n    }\n\n    get comparator(){ return this._comparator; }\n    _comparator : ( a : R, b : R ) => number\n\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\n        // Ignore updates from nested transactions.\n        if( initiator === this ) return;\n\n        const { idAttribute } = this;\n\n        if( record.hasChanged( idAttribute ) ){\n            updateIndex( this._byId, record );\n        }\n\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            // Forward change event from the record.\n            trigger2( this, 'change', record, options )\n        }\n\n        isRoot && commit( this );\n    }\n\n    get( objOrId : string | R | Object ) : R {\n        if( objOrId == null ) return;\n\n        if( typeof objOrId === 'object' ){\n            const id = objOrId[ this.idAttribute ];\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ (<Record>objOrId).cid ];\n        }\n        else{\n            return this._byId[ objOrId ];\n        }        \n    }\n\n    each( iteratee : ( val : R, key : number ) => void, context? : any ){\n        const fun = bindContext( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            fun( models[ i ], i ); \n        }\n    }\n\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( !fun( models[ i ], i ) ) return false;\n        }\n\n        return true;\n    }\n\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        return this.map( ( x, i ) => fun( x, i ) ? x : void 0 );\n    }\n\n    find( iteratee : Predicate<R>, context? : any ) : R {\n        const fun = toPredicateFunction( iteratee, context ),\n        { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( fun( models[ i ], i ) ) return models[ i ];\n        }\n\n        return null;\n    }\n\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\n        return Boolean( this.find( iteratee, context ) );\n    }\n\n    map< T >( iteratee : ( val : R, key : number ) => T, context? : any ) : T[]{\n        const fun = bindContext( iteratee, context ),\n            { models } = this,\n            mapped = Array( models.length );\n\n        let j = 0;\n\n        for( let i = 0; i < models.length; i++ ){\n            const x = fun( models[ i ], i );\n            x === void 0 || ( mapped[ j++ ] = x ); \n        }\n\n        mapped.length = j;\n\n        return mapped;\n    }\n\n    _validateNested( errors : {} ) : number {\n        // Don't validate if not aggregated.\n        if( this._shared ) return 0;\n\n        let count = 0;\n\n        this.each( record => {\n            const error = record.validationError;\n            if( error ){\n                errors[ record.cid ] = error;\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    model : typeof Record\n\n    // idAttribute extracted from the model type.\n    idAttribute : string\n\n    constructor( records? : ( Record | {} )[], options : CollectionOptions = {}, shared? : number ){\n        super( _count++ );\n        this.models = [];\n        this._byId = {};\n        \n        this.comparator  = this.comparator;\n\n        if( options.comparator !== void 0 ){\n            this.comparator = options.comparator;\n            options.comparator = void 0;\n        }\n        \n        this.model       = this.model;\n        \n        if( options.model ){\n            this.model = options.model;\n            options.model = void 0;\n        }\n\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\n\n        this._shared = shared || 0;\n\n        if( records ){\n            const elements = toElements( this, records, options );\n            emptySetTransaction( this, elements, options, true );\n        }\n\n        this.initialize.apply( this, arguments );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    initialize(){}\n\n    get length() : number { return this.models.length; }\n    first() : R { return this.models[ 0 ]; }\n    last() : R { return this.models[ this.models.length - 1 ]; }\n    at( a_index : number ) : R {\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \n        return this.models[ index ];\n    }\n\n    // Deeply clone collection, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n        \n        return copy;\n    }\n\n    toJSON() : Object[] {\n        return this.models.map( model => model.toJSON() );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( elements : ElementsArg = [], options : TransactionOptions = {} ) : this {\n        if( (<any>options).add !== void 0 ){\n            this._log( 'warn', \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\n        }\n\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\n        if( options.reset ){\n            this.reset( elements, options )\n        }\n        else{\n            const transaction = this._createTransaction( elements, options );\n            transaction && transaction.commit();\n        } \n\n        return this;    \n    }\n\n        /**\n     * Enable or disable live updates.\n     * \n     * `true` enables full collection synchronization.\n     * `false` cancel live updates.\n     * `json => true | false` - filter updates\n     */\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<any> {\n        if( enabled ){\n            this.liveUpdates( false );\n\n            const filter = typeof enabled === 'function' ? enabled : () => true;\n\n            this._liveUpdates = {\n                updated : json => {\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\n                },\n\n                removed : id => this.remove( id )\n            };\n\n            return this.getEndpoint().subscribe( this._liveUpdates, this );\n        }\n        else{\n            if( this._liveUpdates ){\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\n                this._liveUpdates = null;\n            }\n        }\n    }\n\n    _liveUpdates : object\n\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<any> {\n        const options = { parse : true, ...a_options },\n            endpoint = this.getEndpoint();\n\n        return startIO(\n            this,\n            endpoint.list( options, this ),\n            options,\n\n            json => {\n                let result : any = this.set( json, { parse : true, ...options } as TransactionOptions );\n                \n                if( options.liveUpdates ){\n                    result = this.liveUpdates( options.liveUpdates );\n                }\n\n                return result;\n            }\n        );\n    }\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        const aggregated = !this._shared;\n\n        for( let record of this.models ){\n            free( this, record );\n\n            if( aggregated ) record.dispose();\n        }\n\n        this.liveUpdates( false );\n\n        super.dispose();\n    }\n\n    reset( a_elements? : ElementsArg, options : TransactionOptions = {} ) : R[] {\n        const isRoot = begin( this ),\n              previousModels = dispose( this );\n\n        // Make all changes required, but be silent.\n        if( a_elements ){            \n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\n        }\n\n        markAsDirty( this, options );\n\n        options.silent || trigger2( this, 'reset', this, defaults( { previousModels : previousModels }, options ) );\n\n        isRoot && commit( this );\n        return this.models;\n    }\n\n    // Add elements to collection.\n    add( a_elements : ElementsArg , options : AddOptions = {} ){\n        const elements = toElements( this, a_elements, options ),\n              transaction = this.models.length ?\n                    addTransaction( this, elements, options ) :\n                    emptySetTransaction( this, elements, options );\n\n        if( transaction ){\n            transaction.commit();\n            return transaction.added;\n        }\n    }\n\n    // Remove elements. \n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\n        if( recordsOrIds ){\n            return Array.isArray( recordsOrIds ) ?\n                        removeMany( this, recordsOrIds, options ) as R[]:\n                        removeOne( this, recordsOrIds, options ) as R;\n        }\n\n        return [];\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.   \n    _createTransaction( a_elements : ElementsArg, options : TransactionOptions = {} ) : CollectionTransaction | void {\n        const elements = toElements( this, a_elements, options );\n\n        if( this.models.length ){\n            return options.remove === false ?\n                        addTransaction( this, elements, options, true ) :\n                        setTransaction( this, elements, options );\n        }\n        else{\n            return emptySetTransaction( this, elements, options );\n        }\n    }\n\n    static _attribute = AggregatedType;\n\n    /***********************************\n     * Collection manipulation methods\n     */\n\n    pluck( key : keyof R ) : any[] {\n        return this.models.map( model => model[ key ] );\n    }\n\n    sort( options : TransactionOptions = {} ) : this {\n        if( sortElements( this, options ) ){\n            const isRoot = begin( this );\n            \n            if( markAsDirty( this, options ) ){\n                trigger2( this, 'sort', this, options );\n            }\n\n            isRoot && commit( this );\n        }\n\n        return this;\n    }\n\n    // Add a model to the end of the collection.\n    push(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: this.length}, options));\n    }\n\n    // Remove a model from the end of the collection.\n    pop( options : CollectionOptions ) : R {\n      var model = this.at(this.length - 1);\n      this.remove(model, { unset : true, ...options });\n      return model;\n    }\n\n    // Remove and return given model.\n    // TODO: do not dispose the model for aggregated collection.\n    unset( modelOrId : R | string, options? ) : R {\n        const value = this.get( modelOrId );\n        this.remove( modelOrId, { unset : true, ...options } );\n        return value;\n    }\n\n    // Add a model to the beginning of the collection.\n    unshift(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: 0}, options));\n    }\n\n    // Remove a model from the beginning of the collection.\n    shift( options? : CollectionOptions ) : R {\n      var model = this.at(0);\n      this.remove( model, { unset : true, ...options } );\n      return model;\n    }\n\n    // Slice out a sub-array of models from the collection.\n    slice() : R[] {\n      return slice.apply(this.models, arguments);\n    }\n\n    indexOf( modelOrId : any ) : number {\n        const record = this.get( modelOrId );\n        return this.models.indexOf( record );\n    }\n\n    modelId( attrs : {} ) : any {\n        return attrs[ this.model.prototype.idAttribute ];\n    }\n\n    // Toggle model in collection.\n    toggle( model : R, a_next? : boolean ) : boolean {\n        var prev = Boolean( this.get( model ) ),\n            next = a_next === void 0 ? !prev : Boolean( a_next );\n\n        if( prev !== next ){\n            if( prev ){\n                this.remove( model );\n            }\n            else{\n                this.add( model );\n            }\n        }\n\n        return next;\n    }\n\n    _log( level : tools.LogLevel, text : string, value ) : void {\n        tools.log( level, `[Collection Update] ${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\n            Argument : value,\n            'Attributes spec' : this.model.prototype._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Collection';\n    }\n}\n\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\n\nexport type ElementsArg = Object | Record | Object[] | Record[];\n\n// TODO: make is safe for parse to return null (?)\nfunction toElements( collection : Collection, elements : ElementsArg, options : CollectionOptions ) : Elements {\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \n    return Array.isArray( parsed ) ? parsed : [ parsed ];\n}\n\ncreateSharedTypeSpec( Collection, SharedType );\n\nRecord.Collection = <any>Collection;\n\nfunction bindContext( fun : Function, context? : any ){\n    return context !== void 0 ? ( v, k ) => fun.call( context, v, k ) : fun;\n}\n\nfunction toPredicateFunction<R>( iteratee : Predicate<R>, context : any ){\n    if( typeof iteratee === 'object' ){\n        // Wrap object to the predicate...\n        return x => {\n            for( let key in iteratee as any ){\n                if( iteratee[ key ] !== x[ key ] )\n                    return false;\n            }\n\n            return true;\n        }\n    }\n    \n    return bindContext( iteratee, context );\n}\n\nexport class CollectionLink extends Link< boolean >{\n    constructor( public collection, public record ){\n        super( Boolean( collection._byId[ record.cid ] ) );\n    }\n\n    set( x ){\n        this.collection.toggle( this.record, x );\n    }\n}","import { Collection } from '../collection'\nimport { Record } from '../record'\nimport { CompiledReference } from '../traversable'\n\nexport type CollectionReference = ( () => Collection ) | Collection | string; \n\n/** @private */\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Record ) => Collection {\n    switch( typeof collectionRef ){\n        case 'function' :\n            return root => (<any>collectionRef).call( root );\n        case 'object'   :\n            return () => <Collection>collectionRef;\n        case 'string'   :\n            const { resolve } = new CompiledReference( <string>collectionRef );\n            return resolve;\n    }\n}","import { Collection, CollectionOptions } from '../collection'\nimport { tools, eventsApi, define } from '../object-plus'\nimport { Record, AggregatedType } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { ChainableAttributeSpec } from '../record'\nimport { Transactional, ItemsBehavior, TransactionOptions, transactionApi } from '../transactions'\n\nconst { fastDefaults } = tools;\n\ntype RecordsIds = ( string | number )[];\n\nCollection.subsetOf = function subsetOf( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const SubsetOf = this._SubsetOf || ( this._SubsetOf = defineSubsetCollection( this ) ),\n        getMasterCollection = parseReference( masterCollection ),\n        typeSpec = new ChainableAttributeSpec({\n            type : SubsetOf\n        });\n\n    return typeSpec.get(\n        function( refs ){\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\n            return refs;\n        }\n    );\n};\n\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\n\nfunction defineSubsetCollection( CollectionConstructor : typeof Collection ) {\n    @define class SubsetOfCollection extends CollectionConstructor {\n        refs : any[];\n        resolvedWith : Collection = null;\n\n        _attribute : AggregatedType\n\n        get __inner_state__(){ return this.refs || this.models; }\n\n        constructor( recordsOrIds?, options? ){\n            super( [], options, subsetOfBehavior );\n            this.refs = toArray( recordsOrIds );\n        }\n\n        // Remove should work fine as it already accepts ids. Add won't...\n        add( a_elements, options? ){\n            const { resolvedWith } = this,\n                    toAdd = toArray( a_elements );\n            \n            if( resolvedWith ){\n                // If the collection is resolved already, everything is simple.\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\n            }\n            else{\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                if( toAdd.length ){\n                    const isRoot = transactionApi.begin( this );\n\n                    // Save elements to resolve in future...\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\n\n                    transactionApi.markAsDirty( this, options );\n\n                    // And throw the 'changes' event.\n                    isRoot && transactionApi.commit( this );\n                }\n            }\n        }\n\n        reset( a_elements?, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options ) || [];\n        }\n\n        _createTransaction( a_elements, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options );\n        }\n\n        // Serialized as an array of model ids.\n        toJSON() : RecordsIds {\n            return this.refs ?\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\n                this.models.map( model => model.id );\n        }\n\n        // Subset is always valid.\n        _validateNested(){ return 0; }\n\n        // Must be shallow copied on clone.\n        clone( owner? ){\n            var Ctor = (<any>this).constructor,\n                copy = new Ctor( [], {\n                    model : this.model,\n                    comparator : this.comparator\n                });\n\n            if( this.resolvedWith ){\n                copy.resolvedWith = this.resolvedWith;\n                copy.reset( this.models, { silent : true } );\n            }\n            else{\n                copy.refs = this.refs.slice();\n            }\n\n            return copy;\n        }\n\n        // Clean up the custom parse method possibly defined in the base class.\n        parse( raw : any ) : Record[] {\n            return raw;\n        }\n\n        resolve( collection : Collection ) : this {\n            if( collection && collection.length ){\n                this.resolvedWith = collection;\n\n                if( this.refs ){\n                    this.reset( this.refs, { silent : true } );\n                    this.refs = null;\n                }\n            }\n\n            return this;\n        }\n\n        getModelIds() : RecordsIds { return this.toJSON(); }\n\n        toggle( modelOrId : any, val : boolean ) : boolean {\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\n        }\n\n        addAll() : Record[] {\n            if( this.resolvedWith ){\n                this.set( this.resolvedWith.models );\n                return this.models;\n            }\n\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\n        }\n\n        toggleAll() : Record[] {\n            return this.length ? this.reset() : this.addAll();\n        }\n    }\n\n    // Clean up all custom item events to prevent memory leaks.\n    SubsetOfCollection.prototype._itemEvents = void 0;\n\n    return SubsetOfCollection;\n}\n\nfunction resolveRefs( master, elements ){\n    const records = [];\n    \n    for( let el of elements ){\n        const record = master.get( el );\n        if( record ) records.push( record );\n    }\n\n    return records;\n}\n\nfunction delaySet( collection, elements, options ) : void {\n    if( tools.notEqual( collection.refs, elements ) ){\n        const isRoot = transactionApi.begin( collection );\n\n        // Save elements to resolve in future...\n        collection.refs = elements.slice();\n\n        transactionApi.markAsDirty( collection, options );\n        \n        // And throw the 'changes' event.\n        isRoot && transactionApi.commit( collection );\n    }\n}\n\nfunction toArray( elements ){\n    return elements ? ( \n        Array.isArray( elements ) ? elements : [ elements ]\n    ) : [];\n}","// (c) 2016 Vlad Balin and Volicon\n// MixtureJS may be freely distributed under the MIT license. \n\nimport * as tools from './tools'\nexport { tools }\nexport * from './mixins'\nexport * from './events'\nimport * as eventsApi from './eventsource'\nexport { eventsApi }\n\nimport { Mixable, MixableConstructor } from './mixins'\n\ndeclare global {\n    interface ObjectConstructor {\n        /** Polyfill for Object.assign */\n        assign< T >( dest : T, ...sources : Object[] ) : T\n\n        /** Global logging interface, for console debugging. */\n        log : tools.Log\n\n        /** ES5 Object.extend */\n        extend( protoProps : {}, staticProps : {} ) : MixableConstructor\n    }\n}\n\nObject.extend = ( protoProps, staticProps ) => Mixable.extend( protoProps, staticProps );\nObject.assign || ( Object.assign = tools.assign );\nObject.log = tools.log;","export interface ChildrenErrors {\n    [ key : string ] : ValidationError | any\n} \n\nexport interface Validatable {\n    _validateNested( errors : ChildrenErrors ) : number;\n    validate( self : any ) : any\n    get( key : string ) : any\n}\n\n// Validation error object.\nexport class ValidationError {\n    // Invalid nested object keys \n    nested : ChildrenErrors \n    length : number\n\n    // Local error\n    error : any\n\n    constructor( obj : Validatable ){\n        this.length = obj._validateNested( this.nested = {} );\n\n        if( this.error = obj.validate( obj ) ){\n            this.length++;\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void ) : void {\n        const { error, nested } = this;\n\n        if( error ) iteratee( error, null );\n\n        for( const key in nested ){\n            iteratee( nested[ key ], key );\n        }\n    }\n\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\n        this.each( ( value : any, key : string ) => {\n            if( value instanceof ValidationError ){\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\n            }\n            else{\n                iteratee( value, key, object );\n            }\n        });\n    }\n}","import { AnyType } from './any'\nimport { Owner, transactionApi, Transactional, ItemsBehavior, TransactionOptions } from '../../transactions'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ValidationError } from '../../validation'\n\nconst { free, aquire } = transactionApi;\n\nexport class AggregatedType extends AnyType {\n    type : typeof Transactional\n\n    clone( value : Transactional ) : Transactional {\n        return value ? value.clone() : value;\n    }\n\n    toJSON( x ){ return x && x.toJSON(); }\n\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null ){\n            if( next instanceof this.type ){\n                // In case if merge option explicitly specified, force merge.\n                if( options.merge ) return next.__inner_state__;\n            }\n            else{\n                return next;\n            }\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        // Invoke class factory to handle abstract classes\n        if( next == null ) return next;\n        \n        if( next instanceof this.type ){\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \n                this._log( 'error', 'aggregated collection attribute is assigned with shared collection', next, record );\n            }\n\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\n            // This is an only case we could be here when merge === true.\n            return options.merge ? next.clone() : next;\n        }\n\n        return <any>this.type.create( next, options );\n    }\n\n    dispose ( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\n        var error = value && value.validationError;\n        if( error ) return error;\n    }\n\n    create() : Transactional {\n        return (<any>this.type).create(); // this the subclass of Transactional here.\n    }\n\n    initialize( options ){\n        options.changeHandlers.unshift( this._handleChange );\n    }\n\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\n        if( prev ){\n            free( record, prev );\n            options.unset || prev.dispose();\n        } \n        \n        if( next && !aquire( record, next, this.name ) ){\n            this._log( 'error', 'aggregated attribute assigned with object already having an owner', next, record );\n        }\n    }\n}","import { AnyType } from './any'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ItemsBehavior, Owner, transactionApi, Transactional, TransactionOptions } from '../../transactions' \nimport { tools, eventsApi } from '../../object-plus'\n\nconst { on, off } = eventsApi,\n    { free, aquire } = transactionApi;\n\n/************************\n * Shared attribute definition.\n * - Not serialized.\n * - Listening to the changes.\n * - Doesn't take ownership when assigned with object of proper type.\n * - Takes ownership on objects which are converted.\n */\n\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\n\n/** @private */\nexport class SharedType extends AnyType {\n    type : typeof Transactional\n\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value, record ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\n        // References are not cloned.\n        if( !value || value._owner !== record ) return value;\n\n        // Implicitly created objects are cloned.\n        const clone = value.clone();\n        aquire( record, clone, this.name );\n        return clone;\n    }\n\n    // Do not serialize by default.\n    toJSON(){}\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null && !( next instanceof this.type ) ){\n            return next;\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        if( next == null || next instanceof this.type ) return next;\n\n        // Convert type using implicitly created rtransactional object.\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\n\n        // To prevent a leak, we need to take an ownership on it.\n        aquire( record, implicitObject, this.name );\n\n        return implicitObject;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n\n    // They are always created as null.\n    create() : Transactional {\n        return null;\n    }\n\n    // Listening to the change events\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\n        if( prev ){\n            // If there was an implicitly created object, remove an ownership.\n            if( prev._owner === record ){\n                free( record, prev );\n                options.unset || prev.dispose();\n            }\n            else{\n                off( prev, prev._changeEventName, this._onChange, record );\n            }\n        }  \n \n        if( next ){\n            // No need to take an ownership for an implicit object - already done in convert or clone.\n            if( next._owner !== record ){\n                on( next, next._changeEventName, this._onChange, record );\n            }\n        } \n    }\n\n    dispose( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \n\n    initialize( options ){\n        // Create change event handler which knows current attribute name. \n        const attribute = this;\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\n            this === initiator || this.forceAttributeChange( attribute.name, options );\n        } : ignore;\n\n        options.changeHandlers.unshift( this._handleChange );\n    }\n}\n\nfunction ignore(){}","import { getOwnerEndpoint, startIO, IOEndpoint, IOPromise, IONode } from '../io-tools'\n\nexport interface IORecord extends IONode {\n    getEndpoint() : IOEndpoint\n    save( options? : object ) : IOPromise<any>\n    fetch( options? : object ) : IOPromise<any>\n    destroy( options? ) : IOPromise<any>\n    toJSON() : any\n    isNew() : boolean\n    id : string | number\n    set( json : object, options : object )\n}\n\nexport const IORecordMixin = {\n    getEndpoint( this : IORecord ) : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    },\n\n    save( this : IORecord, options : object = {} ){\n        const endpoint = this.getEndpoint(),\n              json = this.toJSON();\n\n        return startIO(\n            this,\n            this.isNew() ?\n                endpoint.create( json, options, this ) :\n                endpoint.update( this.id, json, options, this ),\n            options,\n\n            update => {\n                this.set( update, { parse : true, ...options } );\n            }\n        );\n    },\n\n    fetch( options = {} ){\n        return startIO(\n            this,\n            this.getEndpoint().read( this.id, options, this ),\n            options,\n\n            json => this.set( json, { parse : true, ...options } )\n        );\n    },\n\n    destroy( options = {} ){  \n        return startIO(\n            this,\n            this.getEndpoint().destroy( this.id, options, this ),\n            options,\n\n            () => {\n                const { collection } = this;\n                if( collection ){\n                    collection.remove( this, options );\n                }\n                else{\n                    this.dispose();\n                }\n            }\n        )\n    }\n}","/**\n * Advanced React links for purely functional two-way data binding\n *\n * MIT License, (c) 2016 Vlad Balin, Volicon.\n */\nimport { helpers, arrayHelpers, objectHelpers } from './helpers'\n\nexport type Transform< T > = ( value : T, event? : {} ) => T\nexport type EventHandler = ( event : {} ) => void\n\nexport interface Validator< T >{\n    ( value : T ) : boolean\n    error? : any\n}\n\nexport type LinksCache< S, X extends keyof S> = {\n    [ K in X ] : Link< S[ K ] >\n}\n\n// Main Link class. All links must extend it.\nexport abstract class Link< T >{\n    // Create custom link to arbitrary value\n    static value< T >( value : T, set : ( x : T ) => void ) : Link< T >{\n        return new CustomLink( value, set );\n    }\n\n    // create \n    constructor( public value : T ){}\n\n    // Validation error. Usually is a string with error text, but can hold any type.\n    error : any\n\n    // DEPRECATED: Old error holder for backward compatibility with Volicon code base\n    get validationError() : any { return this.error }\n\n    // Link set functions\n    abstract set( x : T ) : void\n\n    onChange( handler : ( x : T ) => void ) : Link< T > {\n        return new CloneLink( this, (x : T ) => {\n            handler( x );\n            this.set( x );\n        });\n    }\n\n    // <input { ...link.props } />\n    get props(){\n        return typeof this.value === 'boolean' ? {\n            checked : this.value,\n            onChange : e => this.set( Boolean( e.target.checked ) as any )\n        }:{\n            value : this.value,\n            onChange : e => this.set( e.target.value )\n        };\n    }\n\n    // DEPRECATED: Old React method for backward compatibility\n    requestChange( x : T ) : void {\n        this.set( x );\n    }\n\n    // Immediately update the link value using given transform function.\n    update( transform : Transform< T >, e? : Object ) : void {\n        const next = transform( this.clone(), e );\n        next === void 0 || this.set( next );\n    }\n\n    // Create new link which applies transform function on set.\n    pipe( handler : Transform< T > ) : Link< T > {\n        return new CloneLink( this, x =>{\n            const next = handler( x, this.value );\n            next === void 0 || this.set( next );\n        } );\n    }\n\n    // Create UI event handler function which will update the link with a given transform function.\n    action( transform : Transform< T > ) : EventHandler {\n        return e => this.update( transform, e );\n    }\n\n    equals( truthyValue : T ) : Link<boolean> {\n        return new EqualsLink( this, truthyValue );\n    }\n\n    enabled( defaultValue? : T ) : Link<boolean> {\n        return new EnabledLink( this, defaultValue || \"\" );\n    }\n\n    // Array-only links methods\n    contains<E>( this : Link<E[]>, element : E ) : Link<boolean>{\n        return new ContainsLink( this, element );\n    }\n\n    push<E>( this : Link<E[]>, ...args : E[] ) : void;\n    push(){\n        const array = arrayHelpers.clone( this.value );\n        Array.prototype.push.apply( array, arguments );\n        this.set( array );\n    }\n\n    unshift<E>( this : Link<E[]>, ...args : E[] ) : void;\n    unshift() : void {\n        const array = arrayHelpers.clone( this.value );\n        Array.prototype.unshift.apply( array, arguments );\n        this.set( array );\n    }\n\n    splice( start : number, deleteCount? : number );\n    splice() : void {\n        const array = arrayHelpers.clone( this.value );\n        Array.prototype.splice.apply( array, arguments );\n        this.set( array );\n    }\n\n    // Array and objects universal collection methods\n    map<E, Z>( this : Link<E[]>, iterator : ( link : LinkAt<E, number>, idx : number ) => Z ) : Z[];\n    map<E, Z>( this : Link<{[ key : string ] : E }>, iterator : ( link : LinkAt<E, string>, idx : string ) => Z ) : Z[];\n    map( iterator ) {\n        return helpers( this.value ).map( this, iterator );\n    }\n\n    removeAt<E>( this : Link<E[]>, key : number ) : void;\n    removeAt<E>( this : Link<{ [ key : string ] : E }>, key : string ) : void;\n    removeAt( key ){\n        const { value } = this,\n            _ = helpers( value );\n\n        this.set( _.remove( _.clone( value ), key ) );\n    }\n\n    at< E >( this : Link< E[] >, key : number ) : LinkAt<E, number>;\n    at< K extends keyof T, E extends T[K]>( key : K ) : LinkAt<E, K>;\n    at( key ){\n        return new LinkAt( this, key );\n    }\n\n    clone() : T {\n        let { value } = this;\n        return helpers( value ).clone( value );\n    }\n\n    pick< K extends keyof T >( ...keys : K[]) : {[ P in K ]: Link<T[P]>}\n    pick() {\n        let links = {};\n\n        for( let i = 0; i < arguments.length; i++ ){\n            const key : string = arguments[ i ];\n            links[ key ] = new LinkAt( this, key );\n        }\n\n        return links;\n    }\n\n    /**\n     * Validate link with validness predicate and optional custom error object. Can be chained.\n     */\n    check( whenValid : Validator< T >, error? : any ) : this {\n        if( !this.error && !whenValid( this.value ) ){\n            this.error = error || whenValid.error || defaultError;\n        }\n\n        return this;\n    }\n}\n\nexport class CustomLink< T > extends Link< T > {\n    set( x ){}\n\n    constructor( value : T, set : ( x : T ) => void ){\n        super( value );\n        this.set = set;\n    }\n}\n\nexport class CloneLink< T > extends Link< T > {\n    set( x ){}\n\n    constructor( parent : Link< T >, set : ( x : T ) => void ){\n        super( parent.value );\n        this.set = set;\n\n        const { error } = parent;\n        if( error ) this.error = error;\n    }\n}\n\nexport class EqualsLink extends Link< boolean > {\n    constructor( public parent : Link< any >, public truthyValue ){\n        super( parent.value === truthyValue );\n    }\n\n    set( x : boolean ) : void {\n        this.parent.set( x ? this.truthyValue : null );\n    }\n}\n\nexport class EnabledLink extends Link< boolean > {\n    constructor( public parent : Link< any >, public defaultValue ){\n        super( parent.value != null );\n    }\n\n    set( x : boolean ){\n        this.parent.set( x ? this.defaultValue : null );\n    }\n}\n\nexport class ContainsLink extends Link< boolean > {\n    constructor( public parent : Link< any >, public element : any ){\n        super( parent.value.indexOf( element ) >= 0 );\n    }\n\n    set( x : boolean ){\n        var next = Boolean( x );\n\n        if( this.value !== next ){\n            var arr : any[] = this.parent.value,\n                nextValue = x ? arr.concat( this.element ) : arr.filter( el => el !== this.element );\n\n            this.parent.set( nextValue );\n        }\n    }\n}\n\nconst  defaultError = 'Invalid value';\n\n/**\n * Link to array or object element enclosed in parent link.\n * Performs purely functional update of the parent, shallow copying its value on `set`.\n */\nexport class LinkAt< E, K > extends Link< E > {\n    constructor( private parent : Link< any >, public key : K ){\n        super( parent.value[ key ] );\n    }\n\n    remove(){\n        this.parent.removeAt( <any>this.key );\n    }\n\n    // Set new element value to parent array or object, performing purely functional update.\n    set( x : E ) : void {\n        if( this.value !== x ){\n            this.parent.update( value => {\n                value[ this.key ] = x;\n                return value;\n            } );\n        }\n    };\n}","import { AnyType, AttributeOptions } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { Collection } from '../collection'\nimport { Record } from '../record'\n\nimport { ChainableAttributeSpec } from '../record'\n\n/********\n * Reference to model by id.\n * \n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\n * with a real model.\n * \n * No model changes are detected and counted as owner's change. That's intentional.\n */\n\n/** @private */\ntype RecordRefValue = Record | string;\n\n/** @private */\nclass RecordRefType extends AnyType {\n    // It is always serialized as an id, whenever it's resolved or not. \n    toJSON( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Wne \n    clone( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Model refs by id are equal when their ids are equal.\n    isChanged( a : RecordRefValue, b : RecordRefValue){\n        var aId = a && ( (<Record>a).id == null ? a : (<Record>a).id ),\n            bId = b && ( (<Record>b).id == null ? b : (<Record>b).id );\n\n        return aId !== bId;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n}\n\nRecord.from = function from( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const getMasterCollection = parseReference( masterCollection );\n\n    const typeSpec = new ChainableAttributeSpec({\n        value : null,\n        _attribute : RecordRefType\n    });\n    \n    return typeSpec\n        .get( function( objOrId : RecordRefValue, name : string ) : Record {\n            if( typeof objOrId === 'object' ) return objOrId;\n\n            // So, we're dealing with an id reference. Resolve it.\n            const collection = getMasterCollection( this );\n            let   record : Record = null;\n\n            // If master collection exists and is not empty...\n            if( collection && collection.length ){\n                // Silently update attribute with record from this collection.\n                record = collection.get( objOrId ) || null;\n                this.attributes[ name ] = record;\n\n                // Subscribe for events manually. delegateEvents won't be invoked.\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\n            }\n\n            return record;\n        });\n};","import { Record } from '../record'\nimport { Transactional } from '../transactions'\nimport { startIO, IOPromise } from '../io-tools'\n\nlet _store : Store = null;\n\nexport class Store extends Record {\n    getStore() : Store { return this; }\n \n    // delegate item lookup to owner, and to the global store if undefined\n    get( name : string ) : any {\n        // Lookup for resource in the current store. \n        let local = this[ name ];\n\n        // If something is found or it's the global store, return result.\n        if( local || this === this._defaultStore ) return local;\n\n        // Forward failed lookup to owner or global store.\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \n    }\n\n    static get global(){ return _store; }\n    static set global( store : Store ){\n        if( _store ){\n          _store.dispose();\n        }\n\n        Transactional.prototype._defaultStore = _store = store;\n    }\n}\n\nStore.global = new Store();","/**\n * Export everything \n */\nexport * from './object-plus'\nexport * from './collection'\nexport * from './relations'\nexport * from './record'\n\nexport * from './transactions'\n\nexport { IOEndpoint, IOPromise, createIOPromise } from './io-tools'\n\n// Exported module itself is the global event bus.\nimport { Events } from './object-plus/'\nexport const { on, off, trigger, once, listenTo, stopListening, listenToOnce } = <any>Events;\n\nimport { Collection } from './collection'\n\n// Define synonims for NestedTypes backward compatibility.\nimport { Record as Model } from './record' \nimport { define, Mixable as Class } from './object-plus/'\nexport { Model, Class };\n\nexport function attributes( attrDefs ) : typeof Model {\n    @define class DefaultRecord extends Model {\n        static attributes = attrDefs;\n    }\n\n    return DefaultRecord;\n}\n\nimport { ChainableAttributeSpec } from './record'\n\n/** Typeless attribute declaration with default value. */ \nexport function value( x : any ) : ChainableAttributeSpec {\n    return new ChainableAttributeSpec({ value : x });\n}\n\n/** Wrap model or collection method in transaction. */\nexport function transaction< F extends Function >( method : F ) : F {\n    return <any>function( ...args ){\n        let result;\n        \n        this.transaction( () => {\n            result = method.apply( this, args );\n        });\n        \n        return result;\n    }\n}"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","__rest","s","e","t","p","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","value","proto","getPrototypeOf","Array","every","isValidJSON","Class","obj","arr","fun","result","ArrayProto","someArray","someObject","predicate","some","x","source","dest","discard","name","other","assign","defaults","func","memo","first","apply","a","protoA","DateProto","arraysNotEqual","ObjectProto","objectsNotEqual","keysA","keys","notEqual","hash","HashProto","Constructor","BaseClass","getBaseClass","__super__","define","MixinsState","get","Mixable","populate","onExtend","ClassOrDefinition","Ctor","predefine","rules","mixins","definitionRules","hashMap","definitionKey","mergeObject","_a","_b","object","ignore","dontMix","getOwnPropertyNames","_i","name_2","sourceProp","rule","unshift","destProp","configurable","resolveRule","event","_bubblingHandlers","trigger5","trigger3","trigger2","_events","callback","context","filteredHead","prev","head","ev","next","_callback","f","EventHandler","once_1","_once","off","on","listOff","name_3","api","events","eventSplitter","test","names_1","split","self","queue","all","listSend2","listSend3","listSend4","listSend5","listSend6","_idCount","listener","_listeningTo","cid","uniqueId","root","reference","action","path","match","referenceMask","skip","getStore","getOwner","collection","getOwnerEndpoint","_owner","_endpoints","_ownerKey","promise","options","thenDo","abortIO","_ioPromise","then","resp","triggerAndBubble","catch","err","console","error","abort","eventSource","args","trigger","record","isRoot","begin","_attributes","doUpdate","markAsDirty","attributes","commit","_begin","_previousAttributes","AttributesCopy","_changedAttributes","_markAsDirty","attrDefs","attrs","Function","map","attr","join","Attributes","values","_log","prevHook","nextHook","prevTransform","nextTransform","prevHandler","nextHandler","validate","spec","attrSpec","has","ChainableAttributeSpec","type","inferType","Transactional","shared","hasCustomDefault","Number","String","Boolean","date","isNaN","Date","getTime","timestamp","struct","minutesOffset","isoDatePattern","exec","k","numericKeys","undefined","UTC","parse","Math","round","AnyType","toAttributeOptions","attrsWithParse","filter","_parse","toJSON","Attribute","_attribute","attrSpecs","_localEvents","_onChange","eventsApi.EventMap","addEvent","createWatcherFromRef","wrapWatcher","watcher","ref","local","resolve","tail","arrayHelpers","objectHelpers","dummyHelpers","_links","links","cached","RecordLink","shouldBeAnObject","unknown","push","idAttribute","definition","models","_byId","freeAll","model","_shared","ItemsBehavior","listen","_changeEventName","_onChildrenChange","merge","clone","_aquire","_aggregationError","_itemEvents","subscribe","owner","child","unset","_free","dispose","unsubscribe","children","children_1","free","_comparator","sort","index","id","previous","items","nested","added","appendElements","needSort","sortOrMoveElements","CollectionTransaction","logAggregationError","at","length_1","moveElements","sortElements","j","a_items","a_options","forceMerge","prevLength","a_items_1","item","transaction","_createTransaction","hasChanged","updateIndex","convertAndAquire","addIndex","slice","silent","_reallocateEmpty","silentOptions","_reallocate","reusedCount","removed","_garbageCollect","addedOrChanged","sorted","previous_1","_prevById","prevModels","toAdd","orderKept","len","src","el","splice","removeIndex","notify","toRemove","_removeFromIndex","elements","parsed","isArray","v","iteratee","bindContext","collectionRef","CollectionConstructor","recordsOrIds","_super","subsetOfBehavior","_this","refs","toArray","tslib_1.__extends","SubsetOfCollection","a_elements","resolvedWith","add","resolveRefs","transactionApi","concat","reset","delaySet","objOrId","copy","comparator","raw","modelOrId","val","toggle","set","Error","addAll","master","records","elements_1","tools.notEqual","setPrototypeOf","__proto__","__assign","n","levelToNumber","none","warn","info","log","debug","a_level","a_msg","a_props","msg","props","level","levelAsNumber","throw","logger","stop","process","env","NODE_ENV","name_1","names","prop","o","protoProps","staticProps","defineMixin","getStaticDefinitions","onDefine","definitions","mergeInheritedMembers","statics","TheSubclass","mergeRules","appliedMixins","transform","mixins_1","mixin","sourceMixins","ctors","ctors_1","forEachOwnProp","assignProperty","mixinRules","protoValue","baseProto","function","caller","list","pipe","classFirst","classLast","EventMap","handlers","addEventsMap","getBubblingHandler","EventDescriptor","event_1","event_2","handler","strings","once","initialize","Messenger","localEvents","properties","eventsMap","defineProperties","toPropertyDescriptor","addReference","a_source","removeAll","second","_disposed","stopListening","Events","omit","extend","tools.assign","tools.log","_validateNested","ValidationError","each","eachError","splitTail","substr","pop","cidPrefix","endpoint","_endpoint","Transactional_1","listenTo","update","__inner_state__","data","resolveReference","_defaultStore","_validationError","validationError","getValidationError","_transaction","dirty","_isDirty","_changeToken","initiator","originalOptions","aquire","UpdateRecordMixin","attribute","propagateChanges","forceAttributeChange","a_values","changes","RecordTransaction","nested_1","nested_2","changes_1","emptyOptions","getHooks","transforms","changeHandlers","changeEvents","defaultValue","tools.isValidJSON","JSON","stringify","isRequired","wrapIsRequired","convert","getHook_1","getHook","reduce","chainGetHooks","validate_1","chainTransforms","handleChange","chainChangeHandlers","setAttribute","isChanged","text","getClassName","Record","Attribute definition","Prev. value","New value","AggregatedType","canBeUpdated","nestedTransaction","persistent","_handleChange","check","metadata","definitionDecorator","emptyFunction","changed","eventMap","cloned","_isRequired","asProp","_has","DateType","toISOString","msDatePattern","MSDateType","msDate","TimestampType","microsoft","supportsDate","safeParseDate","ImmutableClassType","PrimitiveType","NumericType","num","isFinite","Integer","integer","window","ArrayType","ObjectType","FunctionType","doNothing","shareAndListen","share","SharedType","implicitObject","attributesDefinition","baseClassAttributes","myAttributes","_.transform","createAttribute","allAttributes","_.defaults","ConstructorsMixin","constructorsMixin","_attributesArray","createPropertyDescriptor","_toJSON","createToJSON","parseMixin","localEventsMixin","attrDef","IORecordMixin","getEndpoint","save","json","startIO","isNew","fetch","read","destroy","remove","link","iterator","mapped","element","array","y","Link","CustomLink","CloneLink","checked","onChange","truthyValue","EqualsLink","EnabledLink","ContainsLink","helpers","_","LinkAt","whenValid","defaultError","parent","nextValue","removeAt","RecordLinksMixin","linkAt","cacheLink","getLinksCache","linkPath","RecordDeepLink","linkAll","_error","deepGet","deepValidationError","deepSet","isEmpty","_cidCounter","typeCheck","diff","old","nullify","forEachAttr","_attributesArray_1","pinStore","errors","asJson","l","newModel","clear","Attributes definition:","Collection","BaseRecordAttributes","BaseRecordAttributesCopy","IdAttribute","DefaultCollection","createSharedTypeSpec","dynamicMixin","_c","added_1","_d","removed_1","_e","_count","CollectionRefsType","emptySetTransaction","toElements","subset","SubsetOf","subsetOf","_SubsetOf","RefsCollection","Refs","Subset","itemEvents","aa","bb","_store","CollectionLink","toPredicateFunction","find","count","a_index","enabled","liveUpdates","filter_1","_liveUpdates","updated","tslib_1.__assign","aggregated","previousModels","addTransaction","removeMany","removeOne","setTransaction","a_next","Argument","Attributes spec","RecordRefType","from","masterCollection","getMasterCollection","parseReference","defineSubsetCollection","Store","store","global","listenToOnce","DefaultRecord","Model","method","fn","onAbort","reject","Promise","a_resolve","a_reject","attrName","getMetadata"],"mappings":"yLAoBA,SAAgBA,EAAUC,EAAGC,GAEzB,SAASC,IAAOC,KAAKC,YAAcJ,EADnCK,GAAcL,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,IAAIJ,GAWnF,SAAgBO,EAAOC,EAAGC,GACtB,IAAIC,KACJ,IAAK,IAAIC,KAAKH,EAAOH,OAAOD,UAAUQ,eAAeC,KAAKL,EAAGG,IAAMF,EAAEK,QAAQH,GAAK,IAC9ED,EAAEC,GAAKH,EAAEG,IACb,GAAS,MAALH,GAAqD,mBAAjCH,OAAOU,sBAC3B,IAAK,IAAIC,EAAI,EAAGL,EAAIN,OAAOU,sBAAsBP,GAAIQ,EAAIL,EAAEM,OAAQD,IAASP,EAAEK,QAAQH,EAAEK,IAAM,IAC1FN,EAAEC,EAAEK,IAAMR,EAAEG,EAAEK,KACtB,OAAON,EAGX,SAAgBQ,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HxB,EAAvHyB,EAAIC,UAAUP,OAAQQ,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOjB,OAAOqB,yBAAyBN,EAAQC,GAAOC,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAAST,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIN,EAAIG,EAAWF,OAAS,EAAGD,GAAK,EAAGA,KAASlB,EAAIqB,EAAWH,MAAIS,GAAKF,EAAI,EAAIzB,EAAE2B,GAAKF,EAAI,EAAIzB,EAAEsB,EAAQC,EAAKI,GAAK3B,EAAEsB,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKpB,OAAOwB,eAAeT,EAAQC,EAAKI,GAAIA,ECuBhE,WAA6BK,GACzB,GAAc,OAAVA,EACA,OAAO,EAGX,cAAeA,GACf,IAAK,SACL,IAAK,SACL,IAAK,UACD,OAAO,EAEX,IAAK,SACD,IAAIC,EAAQ1B,OAAO2B,eAAgBF,GAEnC,GAAIC,IAAU1B,OAAOD,WAAa2B,IAAUE,MAAM7B,UAC9C,OAAO8B,EAAOJ,EAAOK,GAI7B,OAAO,EAOX,WAA8BC,GAC1B,OAAO/B,OAAO2B,eAAgBI,EAAMhC,WAAYF,YAWpD,WAAyBmC,GACrB,GAAIA,EACA,IAAK,IAAIhB,KAAOgB,EACZ,GAAIA,EAAIzB,eAAgBS,GACpB,OAAO,EAKnB,OAAO,EAMX,WAAoBiB,EAAaC,GAG7B,IAAK,IAFDC,EAEKxB,EAAI,EAAGA,EAAIsB,EAAIrB,OAAQD,IAC5B,GAAIwB,EAASD,EAAKD,EAAKtB,GAAKA,GACxB,OAAOwB,EAMnB,WAAqBH,EAAUE,GAC3B,IAAIC,EAEJ,IAAK,IAAInB,KAAOgB,EACZ,GAAIA,EAAIzB,eAAgBS,KAChBmB,EAASD,EAAKF,EAAKhB,GAAOA,IAC1B,OAAOmB,EAOvB,WAAsBH,EAAKE,GACvB,OAAIlC,OAAO2B,eAAgBK,KAAUI,GAC1BC,EAAWL,EAAKE,GAGhBI,EAAYN,EAAKE,GAKhC,WAAuBF,EAAWO,GAC9B,OAAQC,EAAMR,EAAK,SAAAS,GAAK,OAACF,EAAWE,KAgBxC,WAAsBC,GAGlB,IAAK,IAFCC,KAAWC,KAERjC,EAAI,EAAGA,EAAIQ,UAAUP,OAAQD,IAClCiC,EAASzB,UAAWR,KAAQ,EAGhC,IAAK,IAAIkC,KAAQH,GACRE,EAAQrC,eAAgBsC,IAAUH,EAAOnC,eAAgBsC,KAC1DF,EAAME,GAASH,EAAQG,IAI/B,OAAOF,EAMX,WAAmCA,EAAiCD,EAAmCR,GACnG,IAAK,IAAIW,KAAQH,EACb,GAAIA,EAAOnC,eAAgBsC,GAAS,CAChC,IAAIpB,EAAQS,EAAKQ,EAAQG,GAAQA,QACvB,IAAVpB,IAAsBkB,EAAME,GAAcpB,GAIlD,OAAOkB,EAyBX,WAA6BA,EAAUD,GACnC,IAAK,IAAIG,KAAQH,EACTA,EAAOnC,eAAgBsC,KACvBF,EAAME,GAASH,EAAQG,IAI/B,GAAI1B,UAAUP,OAAS,EACnB,IAAK,IAAID,EAAI,EAAGA,EAAIQ,UAAUP,OAAQD,IAAK,CACvC,IAAMmC,EAAQ3B,UAAWR,GACzBmC,GAASC,EAAQJ,EAAMG,GAI/B,OAAOH,EAKX,WAA+BA,EAAUD,GACrC,IAAK,IAAIG,KAAQH,EACTA,EAAOnC,eAAgBsC,KAAWF,EAAKpC,eAAgBsC,KACvDF,EAAME,GAASH,EAAQG,IAI/B,GAAI1B,UAAUP,OAAS,EACnB,IAAK,IAAID,EAAI,EAAGA,EAAIQ,UAAUP,OAAQD,IAAK,CACvC,IAAMmC,EAAQ3B,UAAWR,GACzBmC,GAASE,EAAUL,EAAMG,GAIjC,OAAOH,EAkBX,WAAsBM,GAClB,IAAIC,EAAMC,GAAQ,EAClB,OAAO,WAMH,OALKA,IACDA,GAAQ,EACRD,EAAOD,EAAKG,MAAMxD,KAAMuB,WACxB8B,EAAO,MAEJC,GAcf,WAA0BG,EAAS3D,GAC/B,GAAI2D,IAAM3D,EAAI,OAAO,EAErB,GAAI2D,GAAK3D,GAAiB,iBAAL2D,GAA6B,iBAAL3D,EAAgB,CACzD,IAAM4D,EAAStD,OAAO2B,eAAgB0B,GAEtC,GAAIC,IAAWtD,OAAO2B,eAAgBjC,GAAM,OAAO,EAEnD,OAAQ4D,GACJ,KAAKC,GAAc,OAAQF,IAAO3D,EAClC,KAAK0C,GAAc,OAAOoB,EAAgBH,EAAG3D,GAC7C,KAAK+D,GACL,KAAK,KACD,OAAOC,EAAiBL,EAAG3D,IAIvC,OAAO,EAIX,WAA0B2D,EAAG3D,GACzB,IAAMiE,EAAQ3D,OAAO4D,KAAMP,GAE3B,GAAIM,EAAM/C,SAAWZ,OAAO4D,KAAMlE,GAAIkB,OAAS,OAAO,EAEtD,IAAK,IAAID,EAAI,EAAGA,EAAIgD,EAAM/C,OAAQD,IAAM,CACpC,IAAMK,EAAM2C,EAAOhD,GAEnB,IAAKjB,EAAEa,eAAgBS,IAAS6C,EAAUR,EAAGrC,GAAOtB,EAAGsB,IACnD,OAAO,EAIf,OAAO,EAIX,WAAyBqC,EAAG3D,GACxB,GAAI2D,EAAEzC,SAAWlB,EAAEkB,OAAS,OAAO,EAEnC,IAAK,IAAID,EAAI,EAAGA,EAAI0C,EAAEzC,OAAQD,IAC1B,GAAIkD,EAAUR,EAAG1C,GAAKjB,EAAGiB,IAAQ,OAAO,EAG5C,OAAO,EAUX,WAAyBqB,GACrB,IAAM8B,EAAO9D,OAAOC,OAAQ8D,IAC5B,OAAO/B,EAAMe,EAAQe,EAAM9B,GAAQ8B,aC3QZE,GACvB,IAAMC,EAAiCC,EAAcF,GAGrDA,EAAYG,UAAYF,EAAUlE,UAGlCiE,EAAYI,QAAUC,GAAYC,IAAKC,IAAUC,SAAUR,GAG3DK,GAAYC,IAAKN,GAGjBA,EAAYS,UAAYT,EAAYS,SAAUR,GAQlD,WAAwBS,GAEpB,GAAiC,mBAAtBA,EAMP,OAAO,SAAUC,GACbC,EAAWD,GACXA,EAAKP,OAAQM,IAPjBE,EAAWF,GACXA,EAAkBN,SAW1B,WAA6BS,GACzB,OAAO,SAAE9C,GACL,IAAM+C,EAAST,GAAYC,IAAKvC,GAChC+C,EAAOC,gBAAkB/B,EAAUgC,IAAWH,EAAOC,EAAOC,kBAIpE,WAAqCE,EAAexD,GAChD,OAAO,SAAEC,EAAgBmB,GACrBwB,GACKC,IAAK5C,EAAM7B,aACXqF,YAAaxD,QACVyD,EAAEF,SACEG,EAAEvC,GAASpB,kBA2I/B,WAAyB4D,EAAiBnD,GAGtC,IAAiB,IAFXoD,EAASC,UAAgBF,OAEdF,EAAAnF,OAAOwF,oBAAqBH,GAA5BI,WAAAA,KAAZ,IAAIC,OACLJ,EAAQI,IAAUxD,EAAKwD,IA6F/B,WAAyB/C,EAAeE,EAAe8C,EAAiCC,EAAuBC,GAE3G,GAAIlD,EAAKpC,eAAgBsC,GAAQ,CAC7B,IAAMiD,EAAW9F,OAAOqB,yBAA0BsB,EAAME,GAEpDiD,EAASC,cAAgB,UAAWD,IACpCnD,EAAME,GAASgD,EACXG,EAAaL,EAAWlE,MAAOqE,EAASrE,MAAOmE,GAC/CI,EAAaF,EAASrE,MAAOkE,EAAWlE,MAAOmE,SAKvD5F,OAAOwB,eAAgBmB,EAAME,EAAM8C,GAI3C,WAAsBhD,EAAMD,EAAQkD,GAEhC,YAAa,IAATjD,EAAyBD,EAGxBkD,QAAmB,IAAXlD,EAGNkD,EAAMjD,EAAMD,GAHqBC,EC5S5C,WAA6BsD,GACzB,OAAOC,GAAmBD,KACtBC,GAAmBD,GAAU,SAAU5C,EAAI3D,EAAIwB,EAAIzB,EAAIW,QACzC,IAANX,QAAsB,IAANW,GAAe+F,EAAUvG,KAAMqG,EAAO5C,EAAG3D,EAAGwB,EAAGzB,EAAGW,QAC5D,IAANc,EAAekF,EAAUxG,KAAMqG,EAAO5C,EAAG3D,EAAGwB,GAC3CmF,EAAUzG,KAAMqG,EAAO5C,EAAG3D,gBAgBzB4G,EAA2BzD,EAAe0D,EAAqBC,GAK7E,IAAK,IAFDC,EAAcC,EAFZC,EAAOL,EAASzD,GAIb+D,EAAKD,EAAMC,EAAIA,EAAKA,EAAGC,KAEtBN,GAAYA,IAAaK,EAAGL,UAAYA,IAAaK,EAAGL,SAASO,WACjEN,GAAWA,IAAYI,EAAGJ,SAE5BE,EAAOE,EACPH,IAAkBA,EAAeG,IAI7BF,IAAOA,EAAKG,KAAOD,EAAGC,MAI9BF,IAASF,IAAeH,EAASzD,GAAS4D,GAIlD,WAAoBE,EAAqBtD,EAAG3D,GACxC,IAAK,IAAIkH,EAAKD,EAAMC,EAAIA,EAAKA,EAAGC,KAAOD,EAAGL,SAAS/F,KAAMoG,EAAGJ,QAASnD,EAAG3D,GAI5E,WAAoBiH,EAAqBtD,EAAG3D,EAAGwB,GAC3C,IAAK,IAAI0F,EAAKD,EAAMC,EAAIA,EAAKA,EAAGC,KAAOD,EAAGL,SAAS/F,KAAMoG,EAAGJ,QAASnD,EAAG3D,EAAGwB,GAI/E,WAAoByF,EAAqBtD,EAAG3D,EAAGwB,EAAGzB,GAC9C,IAAK,IAAImH,EAAKD,EAAMC,EAAIA,EAAKA,EAAGC,KAAOD,EAAGL,SAAS/F,KAAMoG,EAAGJ,QAASnD,EAAG3D,EAAGwB,EAAGzB,GAIlF,WAAoBkH,EAAqBtD,EAAG3D,EAAGwB,EAAGzB,EAAGW,GACjD,IAAK,IAAIwG,EAAKD,EAAMC,EAAIA,EAAKA,EAAGC,KAAOD,EAAGL,SAAS/F,KAAMoG,EAAGJ,QAASnD,EAAG3D,EAAGwB,EAAGzB,EAAGW,GAIrF,WAAoBuG,EAAqBtD,EAAG3D,EAAGwB,EAAGzB,EAAGW,EAAG2G,GACpD,IAAK,IAAIH,EAAKD,EAAMC,EAAIA,EAAKA,EAAGC,KAAOD,EAAGL,SAAS/F,KAAMoG,EAAGJ,QAASnD,EAAG3D,EAAGwB,EAAGzB,EAAGW,EAAG2G,GASxF,WAAoBrE,EAAsBG,EAAe0D,EAAqBC,GAC1E,GAAID,EAAU,CACV,IAAMD,EAAU5D,EAAO4D,UAAa5D,EAAO4D,QAAUtG,OAAOC,OAAQ,OACpEqG,EAASzD,GAAS,IAAImE,GAAcT,EAAUC,EAASF,EAASzD,KAKxE,WAAsBH,EAAsBG,EAAe0D,EAAqBC,GAC5E,GAAID,EAAU,CACV,IAAMU,EAAkBC,EAAO,WAC3BC,EAAKzE,EAAQG,EAAMoE,GACnBV,EAASnD,MAAMxD,KAAMuB,aAGzB8F,EAAKH,UAAYP,EACjBa,EAAI1E,EAAQG,EAAMoE,EAAMT,IAKhC,WAAqB9D,EAAsBG,EAAgB0D,EAAsBC,GACrE,IAAAF,YACR,GAAIA,EACA,GAAIC,GAAYC,EACZ,GAAI3D,EACAwE,EAASf,EAASzD,EAAM0D,EAAUC,QAGlC,IAAK,IAAIc,KAAQhB,EACbe,EAASf,EAASgB,EAAMf,EAAUC,QAIrC3D,EACLyD,EAASzD,QAAS,EAGlBH,EAAO4D,aAAU,EAc7B,WAAyBiB,EAAgB7E,EAAsB8E,EAAiBjB,EAAqBC,GACjG,GAAIiB,GAAcC,KAAMF,GAEpB,IAAiB,QAAAG,EADHH,EAAOI,MAAOH,IACXhC,WAAAA,IAAQ8B,EAAK7E,OAAc6D,EAAUC,QAErDe,EAAK7E,EAAQ8E,EAAQjB,EAAUC,GAWxC,WAA0BqB,EAAoBhF,EAAeQ,EAAG3D,GACpD,IAAA4G,YACR,GAAIA,EAAS,CACH,IAAAwB,EAAQxB,EAASzD,GACjBkF,QAENC,EAAWF,EAAOzE,EAAG3D,GACrBuI,EAAWF,EAAKlF,EAAMQ,EAAG3D,IAKjC,WAA0BmI,EAAoBhF,EAAeQ,EAAG3D,EAAGwB,GACvD,IAAAoF,YACR,GAAIA,EAAS,CACH,IAAAwB,EAAQxB,EAASzD,GACjBkF,QAENE,EAAWH,EAAOzE,EAAG3D,EAAGwB,GACxBgH,EAAWH,EAAKlF,EAAMQ,EAAG3D,EAAGwB,IAKpC,WAA0B2G,EAAoBhF,EAAeQ,EAAG3D,EAAGwB,EAAGzB,EAAGW,GAC7D,IAAAkG,YACR,GAAIA,EAAS,CACH,IAAAwB,EAAQxB,EAASzD,GACjBkF,QAENI,EAAWL,EAAOzE,EAAG3D,EAAGwB,EAAGzB,EAAGW,GAC9BgI,EAAWL,EAAKlF,EAAMQ,EAAG3D,EAAGwB,EAAGzB,EAAGW,IChQ1C,aACI,MAAO,IAAMiI,KAsLjB,WAA+B5F,GAC3B,GAAIA,EACA,MAAoB,mBAANA,GAAqB6B,IAAmB7B,GAA2BA,EAKzF,WAAuB6F,EAAsB5F,IACnB4F,EAASC,eAAiBD,EAASC,aAAevI,OAAOC,OAAQ,QACzEyC,EAAO8F,MAAS9F,EAAO8F,IAAMC,MAEpB/F,aCpKOgG,EAAoBC,EAAoBC,GAMtE,IAAK,IALCC,EAAOF,EAAUG,MAAOC,IACxBC,EAAOH,EAAKjI,OAAS,EAEvBiH,EAAOa,EAEF/H,EAAI,EAAGA,EAAIqI,EAAMrI,IAAK,CAC3B,IAAMK,EAAM6H,EAAMlI,GAClB,OAAQK,GACJ,IAAK,IAAM6G,EAAOA,EAAKoB,WAAY,MACnC,IAAK,IAAMpB,EAAOA,EAAKqB,WAAY,MACnC,QAAWrB,EAAOA,EAAKvD,IAAKtD,GAIhC,IAAK6G,EAAO,OAGhB,OAAOe,EAAQf,EAAMgB,EAAMG,eCtCGnB,GAEtB,IAAAsB,eACR,GAAIA,EACA,OAAOC,EAAkBD,GAI7B,GAAItB,EAAKwB,OAAQ,CACL,IAAAC,sBACR,OAAOA,GAAcA,EAAYzB,EAAK0B,YAkC9C,WAAyB1B,EAAe2B,EAA0BC,EAAkBC,GA0BhF,OAxBAC,EAAS9B,GAETA,EAAK+B,WAAaJ,EACbK,KAAM,SAAAC,GACHjC,EAAK+B,WAAa,KAElB,IAAMzH,EAASuH,EAASA,EAAQI,GAASA,EAIzC,OAFAC,EAAkBlC,EAAM,OAAQA,EAAMiC,EAAML,GAErCtH,IAEV6H,MAAO,SAAAC,GAOJ,MANApC,EAAK+B,WAAa,KAElBM,QAAQC,MAAOF,GAEfF,EAAkBlC,EAAM,QAASA,EAAMoC,EAAKR,GAEtCQ,IAGdpC,EAAK+B,WAAWQ,MAAQZ,EAAQY,MAEzBvC,EAAK+B,WAGhB,WAAyB/B,GACjBA,EAAK+B,YAAc/B,EAAK+B,WAAWQ,QACnCvC,EAAK+B,WAAWQ,QAChBvC,EAAK+B,WAAa,MAI1B,WAAkCS,OAAa,aAAA5E,mBAAAA,IAAA6E,oBAC3CD,EAAYE,QAAQnH,MAAOiH,EAAaC,GAChC,IAAAnB,eACRA,GAAcA,EAAWoB,QAAQnH,MAAO+F,EAAYmB,GCqWxD,WAA2BzC,GAEf,IAAAsB,eACR,GAAIA,EACA,OAAOC,EAAkBD,GAI7B,GAAItB,EAAKwB,OAAQ,CACL,IAAAC,sBACR,OAAOA,GAAcA,EAAYzB,EAAK0B,YC5a9C,WAA8BiB,EAA8B3H,EAAepB,GAEvE,IAAMgJ,EAAUC,EAAOF,GACjBf,KAGFe,EAAOG,YAAa9H,GAAO+H,SAAUnJ,EAAO+I,EAAQf,KAEpDoB,EAAaL,EAAQf,GACrBrD,GAAUoE,EAAQ,UAAY3H,EAAM2H,EAAQA,EAAOM,WAAYjI,GAAQ4G,IAI3EgB,GAAUM,GAAQP,GAGtB,WAAgBA,GACZ,QAAIQ,GAAQR,KACRA,EAAOS,oBAAsB,IAAIT,EAAOU,eAAgBV,EAAOM,YAC/DN,EAAOW,mBAAqB,MACrB,GAMf,WAAsBX,EAA8Bf,GAMhD,OAJIe,EAAOW,qBACPX,EAAOW,mBAAqB,MAGzBC,GAAcZ,EAAQf,GAyFjC,WAAmC4B,GAC/B,IAAMC,EAAQtL,OAAO4D,KAAMyH,GAErBH,EAA6C,IAAIK,SAAU,SAAU,aACpED,EAAME,IAAK,SAAAC,GAAO,MAAA,sBACTA,eAAmBA,kBAC5BC,KAAM,cAGbR,EAAenL,UAAYC,OAAOD,UAElC,IAAM4L,EAAqC,IAAIJ,SAAU,SAAU,SAAU,UAAW,yDAGjFD,EAAME,IAAK,SAAAC,GAAO,MAAA,sBACTA,eAAmBA,qBAAyBA,qCACrDC,KAAM,cAKb,OAFAC,EAAW5L,UAAYC,OAAOD,WAErB4L,aAAYT,kBAGzB,YAAkCV,EAA8BoB,GAC5D,SAAIA,GAAUA,EAAO/L,cAAgBG,UAErCwK,EAAOqB,KAAM,OAAQ,sCAAwCD,YACtD,eCoEaE,EAAoBC,GACxC,OAAO,SAAUtK,EAAOoB,GACpB,OAAOkJ,EAASvL,KAAMZ,KAAMkM,EAAStL,KAAMZ,KAAM6B,EAAOoB,GAAQA,IAIxE,YAA0BmJ,EAA2BC,GACjD,OAAO,SAAUpF,EAAMH,EAAM8D,EAAQf,GACjC,OAAOwC,EAAczL,KAAMZ,KAAMoM,EAAcxL,KAAMZ,KAAMiH,EAAMH,EAAM8D,EAAQf,GAAW/C,EAAM8D,EAAQf,IAIhH,YAA8ByC,EAA6BC,GACvD,OAAO,SAAUtF,EAAMH,EAAM8D,EAAQf,GACjCyC,EAAY1L,KAAMZ,KAAMiH,EAAMH,EAAM8D,EAAQf,GAC5C0C,EAAY3L,KAAMZ,KAAMiH,EAAMH,EAAM8D,EAAQf,IAIpD,YAAyB2C,GACrB,OAAO,SAAU5B,EAA8B/I,EAAaT,GACxD,OAAOS,EAAQ2K,EAAS5L,KAAMZ,KAAM4K,EAAQ/I,EAAOT,GAAQ,2BCrHnE,YAAoCqL,GAChC,IAAIC,EAEJ,GAAoB,mBAATD,EACPC,EAAWD,EAAKE,SAEf,GAAIF,GAAQA,aAAgBG,GAC7BF,EAAWD,MAEX,CAEA,IAAMI,EAAOC,GAAWL,GAIpBC,EADAG,GAAQA,EAAK1M,qBAAqB4M,GACjBF,EAAMG,OAAOnL,MAAO4K,GAI1B,IAAIG,IAAyBC,KAAOA,EAAMhL,MAAQ4K,EAAMQ,kBAAmB,IAI9F,OAAOP,EAAS7C,QAGpB,YAAoBhI,GAChB,cAAeA,GACX,IAAK,SACD,OAAOqL,OACX,IAAK,SACD,OAAOC,OACX,IAAK,UACD,OAAOC,QACX,IAAK,YACD,OACJ,IAAK,SACD,OAAOvL,EAAcA,EAAM5B,iBAAc,GC1FrD,YAAuBoN,GACnB,OAAQC,MAAO,IAAMC,KAAMF,GAASG,WAiBxC,YAAwBH,GACpB,IAAII,EAAWC,EAAgBC,EAAgB,EAE/C,GAAMD,EAASE,GAAeC,KAAMR,GAAU,CAE1C,IAAK,IAAWS,EAAP/M,EAAI,EAAQ+M,EAAIC,GAAahN,KAASA,EAC3C2M,EAAQI,IAAOJ,EAAQI,IAAO,EAIlCJ,EAAQ,KAAQA,EAAQ,IAAO,GAAK,EACpCA,EAAQ,IAAOA,EAAQ,IAAO,EAEV,MAAhBA,EAAQ,SAA+BM,IAAhBN,EAAQ,KAC/BC,EAA+B,GAAfD,EAAQ,IAAYA,EAAQ,IAExB,MAAhBA,EAAQ,KACRC,EAAgB,EAAIA,IAI5BF,EACIF,KAAKU,IAAKP,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,GAAMC,EAAeD,EAAQ,GAC3FA,EAAQ,SAGpBD,EAAYF,KAAKW,MAAOb,GAG5B,OAAOI,ECtCX,YAAkB5K,GACd,OAAOA,EAAIsL,KAAKC,MAAOvL,GAAM,EAgDjC,8BCnHA,YAAiC4J,EAAYxJ,GACzC,OAAOoL,GAAQhO,OAAQiO,GAAoB7B,GAAQxJ,GAGvD,YAAqBiI,GACjB,IAAMqD,EAAiBnO,OAAO4D,KAAMkH,GAAasD,OAAQ,SAAAvL,GAAQ,OAAAiI,EAAYjI,GAAOiL,QAEpF,OAAOK,EAAevN,QAClByN,OAAS,IAAI9C,SAAU,OAAQ,+DAGxB4C,EAAe3C,IAAK,SAAA3I,GAAQ,MAAA,0CACnBA,2BAA+BA,eAAmBA,6BAAiCA,QAAYA,2BACvG6I,KAAK,kDAOrB,YAAuBZ,GACnB,OAAO,IAAIS,SAAS,4GAKbvL,OAAO4D,KAAMkH,GAAaU,IAAK,SAAAxK,GAC9B,GAAI8J,EAAY9J,GAAMsN,OAClB,MAAO,QAAQtN,UAAWA,2BAA6BA,QAAUA,WAErE0K,KAAM,wCAMlB,YAAsC1H,EAAwBuK,GACrDvK,EAAYzD,eAAgB,WAC7BP,OAAOwB,eAAgBwC,EAAa,UAChCM,eACI,OAAO,IAAIkI,IACP/K,MAAQ,KACRgL,KAAOzI,EACPwK,WAAaD,OAWjC,YAA2BE,GACvB,IAAIC,EAEJ,IAAK,IAAI1N,KAAOyN,EAAW,CACjB,IACAE,EADYF,EAAWzN,qBAGzB2N,IACAD,IAAkBA,EAAe,IAAIE,IAErCF,EAAaG,SAAU,UAAY7N,EACV,iBAAd2N,EACHG,GAAsBH,EAAW3N,GACjC+N,GAAaJ,EAAW3N,KAIxC,OAAO0N,GAAiBA,mBAG5B,YAAsBM,EAAShO,GAC3B,OAAO,SAAUwJ,EAAQ/I,GACrBuN,EAAQxO,KAAMgK,EAAQ/I,EAAOT,IAIrC,YAA+BiO,EAAcjO,GACnC,IAAAmE,eAAE+J,UAAOC,YAASC,SACxB,OAAOF,EACH,SAAU1E,EAAQ/I,GACd+I,EAAQ4E,GAAQ3N,EAAOT,IAE3B,SAAUwJ,EAAQ/I,GACd0N,EAAS3E,GAAU4E,GAAQ3N,EAAOT,IC7H9C,YAAyBS,GACrB,GAAIA,GAA0B,iBAAVA,EAChB,OAAQzB,OAAO2B,eAAgBF,IAC3B,KAAKW,GAAc,OAAOiN,GAC1B,KAAK5L,GAAc,OAAO6L,GAIlC,OAAOC,GCuBX,YAAwB/E,GACpB,OAAOA,EAAOgF,SAAYhF,EAAOgF,OAAS,IAAIhF,EAAOU,oBAGzD,YAAoBuE,EAAoBjF,EAAuBxJ,GAC3D,IAAI0O,EAASD,EAAOzO,GAChBS,EAAQ+I,EAAQxJ,GAEpB,OAAO0O,GAAUA,EAAOjO,QAAUA,EAAQiO,EAC5BD,EAAOzO,GAAQ,IAAI2O,GAAYnF,EAAQxJ,EAAKS,GC4b9D,YAEoB+I,EAAiBoB,GACjC,GAAIgE,GAAkBpF,EAAQoB,GAAU,CAC5B,IAAAjB,gBACJkF,SAEJ,IAAK,IAAInK,KAAQkG,EACRjB,EAAajF,KACdmK,IAAaA,MACbA,EAAQC,KAAM,IAAKpK,QAIvBmK,GACArF,EAAOqB,KAAM,OAAQ,wBAAyBgE,EAAQnE,KAAK,uBAAwBE,YC3c/F,YAAuBzG,OAAEnC,aAAU8H,eAAYiF,gBACrCC,EAAalF,GAAc9H,MAOjC,OAJI+M,GAAkBA,KAAeC,IACjCA,EAAYD,QAAgB,GAGzBC,EChCX,YAAyB7G,GACrB,IAAM8G,EAAS9G,EAAW8G,OAM1B,OAJA9G,EAAW8G,UACX9G,EAAW+G,SAEXC,GAAShH,EAAY8G,GACdA,EAIX,YAAkC9G,EAA6BmC,EAAqB7B,GACxE,IAEJe,EAFI4F,UAIJjH,EAAWkH,SACX7F,EAASc,aAAiB8E,EAAQ9E,EAAgB8E,EAAMnQ,OAAQqL,EAAO7B,GAEnEN,EAAWkH,QAAUC,gBAAcC,QACnCnJ,GAAIoD,EAAQA,EAAOgG,iBAAkBrH,EAAWsH,kBAAmBtH,KAIvEqB,EAASc,aAAiB8E,EAAU3G,EAAQiH,MAAQpF,EAAMqF,QAAUrF,EAAkB8E,EAAMnQ,OAAQqL,EAAO7B,GAEtGmH,GAASzH,EAAYqB,KACPrB,EAAW0H,oBAAuB1H,EAAW0H,uBACrDf,KAAMtF,IAKb,IAAAsG,gBAGR,OAFAA,GAAeA,EAAYC,UAAW5H,EAAYqB,GAE3CA,EAIX,YAAsBwG,EAAwBC,EAAgBC,GACtDF,EAAMX,QACFW,EAAMX,QAAUC,gBAAcC,QAC9BpJ,GAAK8J,EAAOA,EAAMT,iBAAkBQ,EAAMP,kBAAmBO,IAIjEG,GAAOH,EAAOC,GACdC,GAASD,EAAMG,WAGX,IAAAN,gBACRA,GAAeA,EAAYO,YAAaL,EAAOC,GAInD,YAAyB9H,EAA6BmI,GAClD,IAAkB,QAAAC,IAAA9L,WAAAA,IACd+L,GAAMrI,QAGV,OAAOmI,EAOX,YAA8BnI,EAA6BM,GACjD,IAAAgI,gBACN,SAAIA,IAAgC,IAAjBhI,EAAQiI,QACvBvI,EAAW8G,OAAOyB,KAAMD,IACjB,GAef,YAA0BE,EAAiBvB,GACvCuB,EAAOvB,EAAM5H,KAAQ4H,EACrB,IAAIwB,EAAiBxB,EAAMwB,GAEjB,MAANA,IACAD,EAAOC,GAAOxB,GAKtB,YAA6BuB,EAAiBvB,UACnCuB,EAAOvB,EAAM5H,KACpB,IAAIoJ,EAAKxB,EAAMwB,GACL,MAANA,UACOD,EAAOC,GAItB,YAA6BD,EAAiBvB,UACnCuB,EAAOvB,EAAMyB,SAAUzB,EAAML,cAE5B,IAAA6B,OACF,MAANA,IAAgBD,EAAOC,GAAOxB,eA0EGjH,GACjCA,EAAW0C,KAAM,QAAS,sCAAuC1C,EAAW0H,mBAC5E1H,EAAW0H,uBAAoB,ECjNnC,YAAgC1H,EAA6B2I,EAAerI,EAAsBiH,GAC9F,IAAMjG,EAASC,GAAOvB,GAChB4I,KAEFC,EAAQC,GAAgB9I,EAAY2I,EAAOC,EAAQtI,EAASiH,GAEhE,GAAIsB,EAAMpR,QAAUmR,EAAOnR,OAAQ,CAC/B,IAAIsR,EAAWC,GAAoBhJ,EAAY6I,EAAOvI,GACtD,GAAIoB,GAAa1B,EAAYM,GACzB,OAAO,IAAI2I,GAAuBjJ,EAAYsB,EAAQuH,KAAWD,EAAQG,GAGzE/I,EAAW0H,mBAAoBwB,GAAqBlJ,GAI5DsB,GAAUM,GAAQ5B,GAKtB,YAA6BA,EAA6B6I,EAAkBvI,GACxE,IAAI6I,EAAK7I,EAAQ6I,GAGjB,GAAU,MAANA,EAAY,CAEZ,IAAMC,EAASpJ,EAAW8G,OAAOrP,OAASoR,EAAMpR,OAUhD,OAPA0R,EAAKxF,OAAQwF,IACJ,IAAIA,GAAMC,EAAS,GACxBD,EAAK,IAAIA,EAAK,GACdA,EAAKC,IAASD,EAAKC,GAGvBC,GAAcrJ,EAAW8G,OAAQqC,EAAIN,IAC9B,EAGX,OAAOS,GAActJ,EAAYM,GAIrC,YAAuB/G,EAAgB4P,EAAaN,GAChD,IAAK,IAAIU,EAAIhQ,EAAO9B,OAAS,EAAGD,EAAI+R,EAAIV,EAAMpR,OAAQD,GAAK2R,EAAI3R,IAAK+R,IAChEhQ,EAAQgQ,GAAMhQ,EAAQ/B,GAG1B,IAAKA,EAAI,EAAG+R,EAAIJ,EAAI3R,EAAIqR,EAAMpR,OAAQD,IAAK+R,IACvChQ,EAAQgQ,GAAMV,EAAOrR,GAM7B,YAAyBwI,EAA6BwJ,EAAiBZ,EAAwBa,EAAwBC,GAOnH,IAAmB,IANb3C,UAAOD,WACTS,GAAgBmC,GAAcD,EAAUlC,SAAYvH,EAAWkH,QAE/DN,GADc6C,EAAU9E,MACV3E,EAAWiH,MAAMrQ,UAAUgQ,aACzC+C,EAAa7C,EAAOrP,WAELmS,IAAAtN,WAAAA,KAAd,IAAMuN,OACH5C,EAAQ4C,EAAO9C,EAAO8C,EAAMjD,KAAmBG,EAAO8C,EAAKxK,KAAQ,KAEvE,GAAI4H,GACA,GAAIM,GAASsC,IAAS5C,EAAO,CACzB,IAAI9E,EAAQ0H,EAAKlI,YAAckI,EACzBC,EAAc7C,EAAM8C,mBAAoB5H,EAAOsH,GACrDK,GAAelB,EAAOjC,KAAMmD,GAExB7C,EAAM+C,WAAYpD,IAClBqD,GAAalD,EAAOE,SAK5BA,EAAQiD,GAAkBlK,EAAY6J,EAAMJ,GAC5C3C,EAAOH,KAAMM,GACbkD,GAAUpD,EAAOE,GAIzB,OAAOH,EAAOsD,MAAOT,GCrFzB,YAAqC3J,EAA6B2I,EAAkBrI,EAA6B+J,GAC7G,IAAM/I,EAASC,GAAOvB,GAEhB6I,EAAQyB,GAAkBtK,EAAY2I,EAAOrI,GAEnD,GAAIuI,EAAMpR,OAAQ,CACd,IAAMsR,EAAWO,GAActJ,EAAYM,GAE3C,GAAIoB,GAAa1B,EAAYqK,EAASE,GAAgBjK,GAElD,OAAO,IAAI2I,GAAuBjJ,EAAYsB,EAAQuH,EAAMuB,cAAiBrB,GAG7E/I,EAAW0H,mBAAoBwB,GAAqBlJ,GAI5DsB,GAAUM,GAAQ5B,GAItB,YAAgCA,EAAY2I,EAAOrI,GAC/C,IAAMgB,EAASC,GAAOvB,GAChB4I,KAEFF,EAAW1I,EAAW8G,OACtB+B,EAAW2B,GAAaxK,EAAY2I,EAAOC,EAAQtI,GAEjDmK,EAAczK,EAAW8G,OAAOrP,OAASoR,EAAMpR,OAC/CiT,EAAUD,EAAc/B,EAASjR,OACnBgT,EAAcE,GAAiB3K,EAAY0I,GAC3B1B,GAAShH,EAAY0I,MAGnDkC,EAAiBhC,EAAOnR,QAAUoR,EAAMpR,OAExCoT,EAAWvB,GAActJ,EAAYM,IAAasK,GAAoB/B,EAAMpR,QAAU6I,EAAQuK,OAEpG,GAAID,GAAkBF,EAAQjT,QAAUoT,EAAQ,CAC5C,GAAInJ,GAAa1B,EAAYM,GACzB,OAAO,IAAI2I,GAAuBjJ,EAAYsB,EAAQuH,EAAO6B,EAAS9B,EAAQiC,GAG9E7K,EAAW0H,mBAAoBwB,GAAqBlJ,GAG5DsB,GAAUM,GAAQ5B,GAMtB,YAA0BA,EAA6B0I,GAKnD,IAAmB,IAJX3B,UACF2D,SAGaI,IAAAxO,WAAAA,KAAd,IAAI+E,OACA0F,EAAO1F,EAAOhC,OACfqL,EAAQ/D,KAAMtF,GACdgH,GAAMrI,EAAYqB,IAI1B,OAAOqJ,EAKX,YAAsB1K,EAA6BzG,EAAgBqP,EAAwBtI,GAWvF,IAAK,IAVDwG,EAAcrO,MAAOc,EAAO9B,QAC5BsP,KACAQ,GAAiC,MAAjBjH,EAAQiH,OAAuBjH,EAAQiH,SAAYvH,EAAWkH,QAC9E6D,EAAc/K,EAAW+G,MACzBiE,EAAchL,EAAW8G,OACzBF,EAAc5G,EAAWiH,MAAMrQ,UAAUgQ,YACzCqE,KACAC,GAAc,EAGT1T,EAAI,EAAG+R,EAAI,EAAG/R,EAAI+B,EAAO9B,OAAQD,IAAK,CAC3C,IAAIqS,EAAQtQ,EAAQ/B,GAChByP,EAAiB,KAErB,GAAI4C,EAAM,CACN,IAAIpB,EAAMoB,EAAMjD,GACZvH,EAAMwK,EAAKxK,IAEf,GAAI0H,EAAO0B,IAAQ1B,EAAO1H,GAAQ,SAElC4H,EAAQ8D,EAAWtC,IAAQsC,EAAW1L,GAG1C,GAAI4H,GACA,GAAIM,GAASsC,IAAS5C,EAAO,CACrBiE,GAAaF,EAAYzB,KAAQtC,IAAQiE,GAAY,GAEzD,IAAI/I,EAAQ0H,EAAKlI,YAAckI,EACzBC,EAAc7C,EAAM8C,mBAAoB5H,EAAO7B,GACrDwJ,GAAelB,EAAOjC,KAAMmD,SAIhC7C,EAAQiD,GAAkBlK,EAAY6J,EAAMvJ,GAC5C2K,EAAMtE,KAAMM,GAGhBH,EAAQyC,KAAQtC,EAChBkD,GAAUpD,EAAOE,GASrB,OANAH,EAAOrP,OAAS8R,EAChBvJ,EAAW8G,OAAWA,EACtB9G,EAAW+G,MAAWA,EAEjBmE,IAAY5K,EAAQuK,QAAS,GAE3BI,EAIX,YAA2BvM,EAAMnF,EAAQ+G,GAMrC,IAAK,IALD6K,EAAc5R,EAASA,EAAO9B,OAAS,EACvCqP,EAAcrO,MAAO0S,GACrBpE,KACAH,EAAclI,EAAKuI,MAAMrQ,UAAUgQ,YAE9BpP,EAAI,EAAG+R,EAAI,EAAG/R,EAAI2T,EAAK3T,IAAK,CACjC,IAAI4T,EAAM7R,EAAQ/B,GAElB,IAAI4T,IAASrE,EAAOqE,EAAKxE,MAAmBG,EAAOqE,EAAI/L,KAAvD,CAIA,IAAI4H,EAAQiD,GAAkBxL,EAAM0M,EAAK9K,GACzCwG,EAAQyC,KAAQtC,EAChBkD,GAAUpD,EAAOE,IAMrB,OAHAH,EAAOrP,OAAS8R,EAChB7K,EAAKqI,MAAWA,EAETrI,EAAKoI,OAASA,ECrIzB,YAA2B9G,EAA6BqL,EAA2B/K,GAC/E,IAAI2G,EAAiBjH,EAAW7E,IAAKkQ,GAErC,GAAIpE,EAAO,CACP,IAAM3F,EAASC,GAAOvB,GAChB8G,EAAS9G,EAAW8G,OAG1BA,EAAOwE,OAAQxE,EAAOxP,QAAS2P,GAAS,GACxCsE,GAAavL,EAAW+G,MAAOE,GAG/B,IAAMuE,EAAS9J,GAAa1B,EAAYM,GAexC,OAZIkL,IACAvO,GAAUgK,EAAO,SAAUA,EAAOjH,EAAYM,GAC9CrD,GAAU+C,EAAY,SAAUiH,EAAOjH,EAAYM,IAGvD+H,GAAMrI,EAAYiH,EAAO3G,EAAQyH,OAEjCyD,GAAUtO,GAAU8C,EAAY,SAAUA,EAAYM,GAGtDgB,GAAUM,GAAQ5B,GAEXiH,GAWf,YAA4BjH,EAA6ByL,EAAkBnL,GACvE,IAAMoK,EAAUgB,GAAkB1L,EAAYyL,EAAUnL,EAAQyH,OAChE,GAAI2C,EAAQjT,OAAQ,CAChB,IAAM6J,EAASC,GAAOvB,GAEtBwK,GAAaxK,EAAY0K,EAAQjT,QAE7BiK,GAAa1B,EAAYM,GACL,IAAI2I,GAAuBjJ,EAAYsB,KAAYoJ,MAAa,GACxE9I,SAIZN,GAAUM,GAAQ5B,GAI1B,OAAO0K,EAKX,YAA2B1K,EAAYyL,EAAU1D,GAI7C,IAAK,IAHD2C,EAAUjS,MAAOgT,EAAShU,QAC1BsP,EAAU/G,EAAW+G,MAEhBvP,EAAI,EAAG+R,EAAI,EAAG/R,EAAIiU,EAAShU,OAAQD,IAAK,CAC7C,IAAIyP,EAAQjH,EAAW7E,IAAKsQ,EAAUjU,IAClCyP,IACAyD,EAASnB,KAAQtC,EACjBsE,GAAaxE,EAAOE,GACpBoB,GAAMrI,EAAYiH,EAAOc,IAMjC,OAFA2C,EAAQjT,OAAS8R,EAEVmB,EAKX,YAAsB1K,EAAY0K,GAK9B,IAAK,IAJDnN,EAASyC,EAAW8G,OACpBA,EAAS9G,EAAW8G,OAASrO,MAAO8E,EAAK9F,OAASiT,GAClD3D,EAAQ/G,EAAW+G,MAEdvP,EAAI,EAAG+R,EAAI,EAAG/R,EAAI+F,EAAK9F,OAAQD,IAAK,CACzC,IAAIyP,EAAQ1J,EAAM/F,GAEduP,EAAOE,EAAM5H,OACbyH,EAAQyC,KAAQtC,GAIxBH,EAAOrP,OAAS8R,cCqdCvJ,EAAyB2L,EAAwBrL,GAClE,IAAMsL,EAAStL,EAAQqE,MAAQ3E,EAAW2E,MAAOgH,EAAUrL,GAAYqL,EACvE,OAAOlT,MAAMoT,QAASD,GAAWA,GAAWA,GAOhD,YAAsB7S,EAAgBsE,GAClC,YAAmB,IAAZA,EAAqB,SAAEyO,EAAGvH,GAAO,OAAAxL,EAAI1B,KAAMgG,EAASyO,EAAGvH,IAAMxL,EAGxE,YAAiCgT,EAAyB1O,GACtD,MAAwB,iBAAb0O,EAEA,SAAAzS,GACH,IAAK,IAAIzB,KAAOkU,EACZ,GAAIA,EAAUlU,KAAUyB,EAAGzB,GACvB,OAAO,EAGf,OAAO,GAIRmU,GAAaD,EAAU1O,eCxlBF4O,GAC5B,cAAeA,GACX,IAAK,WACD,OAAO,SAAA1M,GAAQ,OAAM0M,EAAe5U,KAAMkI,IAC9C,IAAK,SACD,OAAO,WAAM,OAAY0M,GAC7B,IAAK,SAED,0BCaZ,YAAiCC,GACrB,kBAQJ,WAAaC,EAAe7L,GAA5B,MACI8L,eAAW9L,EAAS+L,iBAPxBC,eAA4B,KAQxBA,EAAKC,KAAOC,GAASL,KAmH7B,OA7HyCM,OAMrC5V,sBAAI6V,mCAAJ,WAAuB,OAAOjW,KAAK8V,MAAQ9V,KAAKqQ,wCAQhD4F,gBAAA,SAAKC,EAAYrM,GACL,IAAAsM,oBACA3B,EAAQuB,GAASG,GAEzB,GAAIC,EAEA,OAAOR,YAAMS,cAAKC,GAAaF,EAAc3B,GAAS3K,GAItD,GAAI2K,EAAMxT,OAAQ,CACd,IAAM6J,EAASyL,GAAexL,MAAO9K,MAGrCA,KAAK8V,KAAO9V,KAAK8V,KAAO9V,KAAK8V,KAAKS,OAAQ/B,GAAUA,EAAMb,QAE1D2C,GAAerL,YAAajL,KAAM6J,GAGlCgB,GAAUyL,GAAenL,OAAQnL,QAK7CiW,kBAAA,SAAOC,EAAarM,GACR,IAAAsM,oBACJjB,EAAWa,GAASG,GAExB,OAAOC,EAEHR,YAAMa,gBAAOH,GAAaF,EAAcjB,GAAYrL,GAEpD4M,GAAUzW,KAAMkV,EAAUrL,QAGlCoM,+BAAA,SAAoBC,EAAYrM,GACpB,IAAAsM,oBACJjB,EAAWa,GAASG,GAExB,OAAOC,EAEHR,YAAMrC,6BAAoB+C,GAAaF,EAAcjB,GAAYrL,GAEjE4M,GAAUzW,KAAMkV,EAAUrL,IAIlCoM,mBAAA,WACI,OAAOjW,KAAK8V,KACR9V,KAAK8V,KAAKlK,IAAK,SAAA8K,GAAW,OAAAA,EAAQ1E,IAAM0E,IACxC1W,KAAKqQ,OAAOzE,IAAK,SAAA4E,GAAS,OAAAA,EAAMwB,MAIxCiE,4BAAA,WAAmB,OAAO,GAG1BA,kBAAA,SAAO7E,GACH,IACIuF,EAAO,IAAI5R,EADE/E,KAAMC,iBAEfuQ,MAAQxQ,KAAKwQ,MACboG,WAAa5W,KAAK4W,aAW1B,OARI5W,KAAKmW,cACLQ,EAAKR,aAAenW,KAAKmW,aACzBQ,EAAKH,MAAOxW,KAAKqQ,QAAUuD,QAAS,KAGpC+C,EAAKb,KAAO9V,KAAK8V,KAAKnC,QAGnBgD,GAIXV,kBAAA,SAAOY,GACH,OAAOA,GAGXZ,oBAAA,SAAS1M,GAUL,OATIA,GAAcA,EAAWvI,SACzBhB,KAAKmW,aAAe5M,EAEhBvJ,KAAK8V,OACL9V,KAAKwW,MAAOxW,KAAK8V,MAAQlC,QAAS,IAClC5T,KAAK8V,KAAO,OAIb9V,MAGXiW,wBAAA,WAA6B,OAAOjW,KAAK0O,UAEzCuH,mBAAA,SAAQa,EAAiBC,GACrB,OAAOpB,YAAMqB,iBAAQhX,KAAKmW,aAAazR,IAAKoS,GAAaC,IAG7Dd,mBAAA,WACI,GAAIjW,KAAKmW,aAEL,OADAnW,KAAKiX,IAAKjX,KAAKmW,aAAa9F,QACrBrQ,KAAKqQ,OAGhB,MAAM,IAAI6G,MAAO,0EAGrBjB,sBAAA,WACI,OAAOjW,KAAKgB,OAAShB,KAAKwW,QAAUxW,KAAKmX,UA3HnClB,KAAbzR,GAAayR,IAA2BR,GAkIzC,OAFAQ,EAAmB9V,UAAU+Q,iBAAc,EAEpC+E,EAGX,YAAsBmB,EAAQlC,GAG1B,IAAe,IAFTmC,SAESC,IAAAzR,WAAAA,KAAV,IAAI+O,OACChK,EAASwM,EAAO1S,IAAKkQ,GACvBhK,GAASyM,EAAQnH,KAAMtF,GAG/B,OAAOyM,EAGX,YAAmB9N,EAAY2L,EAAUrL,GACrC,GAAI0N,EAAgBhO,EAAWuM,KAAMZ,GAAY,CAC7C,IAAMrK,EAASyL,GAAexL,MAAOvB,GAGrCA,EAAWuM,KAAOZ,EAASvB,QAE3B2C,GAAerL,YAAa1B,EAAYM,GAGxCgB,GAAUyL,GAAenL,OAAQ5B,IAIzC,YAAkB2L,GACd,OAAOA,EACHlT,MAAMoT,QAASF,GAAaA,GAAaA,MxB7KjD,IAAIhV,GAAgBE,OAAOoX,iBACpBC,wBAA2BzV,OAAS,SAAUnC,EAAGC,GAAKD,EAAE4X,UAAY3X,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIY,KAAKZ,EAAOA,EAAEa,eAAeD,KAAIb,EAAEa,GAAKZ,EAAEY,KAQ9DgX,GAAWtX,OAAO+C,QAAU,SAAkB1C,GACrD,IAAK,IAAIF,EAAGQ,EAAI,EAAG4W,EAAIpW,UAAUP,OAAQD,EAAI4W,EAAG5W,IAAK,CACjDR,EAAIgB,UAAUR,GACd,IAAK,IAAIL,KAAKH,EAAOH,OAAOD,UAAUQ,eAAeC,KAAKL,EAAGG,KAAID,EAAEC,GAAKH,EAAEG,IAE9E,OAAOD,GClBLmX,IACFC,KAAO,EAAGtN,MAAQ,EAAGuN,KAAO,EAAGC,KAAO,EAAGC,IAAM,EAAGC,MAAQ,GAUjDD,GAAiB,SAAUE,EAAoBC,EAAgBC,GACxE,IAA8CC,EAAKC,EAAOC,EAAtDC,EAAgBZ,GAAeM,GAYnC,QAVsB,IAAlBM,GAA6BJ,GAO7BC,EAAMF,EAAOI,EAAQL,EAASI,EAAQF,IANtCI,EAAgB,EAChBH,EAAMH,EACNI,EAAQH,EACRI,EAAQ,OAMRC,GAAiBR,GAAIO,MAAO,CAC5B,GAAIC,GAAiBR,GAAIS,QAAUT,GAAIU,OAAQ,CAC3C,IAAMnO,EAAQ,IAAI2M,MAAOmB,GAEzB,MADC9N,EAAc+N,MAAQA,EACjB/N,EAGNyN,GAAIU,OAAQH,EAAOF,EAAKC,GAEHN,GAAIW,OASrCX,GAAIO,MAA2B,oBAAZK,SAA2BA,QAAQC,KAAgC,eAAzBD,QAAQC,IAAIC,SAA4B,EAAI,EACzGd,GAAIS,MAAQ,EACZT,GAAIW,KAAO,EAEY,oBAAZrO,UACP0N,GAAIU,OAAS,SAAmBH,EAAkBhO,EAAgB+N,GAC9D,IAAM5N,GAASH,GACf,IAAK,IAAIwO,KAAQT,EACb5N,EAAKwF,KAAM,OAAO6I,MAAST,EAAOS,IAGtCzO,QAASiO,GAAQ/U,MAAO8G,QAASI,KA4MzCtK,OAAOoX,iBAAoBpX,OAAOoX,eAAiBpU,GAqBnD,IAAMZ,GAAaR,MAAM7B,UACnBwD,GAAY4J,KAAKpN,UACjB0D,GAAczD,OAAOD,UA2DrBgE,GAAY/D,OAAOC,OAAQ,MACjC8D,GAAUxD,eAAiBkD,GAAYlD,4FA5PvC,SAA0DwB,EAAOiO,OAAgB,aAAAvK,mBAAAA,IAAAmT,oBAC7E,IAAiB,QAAAjR,IAAAxC,WAAAA,KAAZ,IAAIO,OACCjE,EAAQuO,EAAYtK,QAChB,IAAVjE,IAAsBM,EAAMhC,UAAW2F,GAASjE,oDA2DxD,SAAuCO,EAAU6W,GAG7C,IAAK,IAFD5X,EAEKS,EAAQM,GAAMf,GAAQS,EAAOA,EAAQ1B,OAAO2B,eAAgBD,GACjET,EAAOjB,OAAOqB,yBAA0BK,EAAOmX,GAGnD,OAAO5X,iCAoCX,SAAiC0B,EAAUD,GACvC,IAAK,IAAIG,KAAQH,EACbC,EAAME,GAASH,EAAQG,GAG3B,OAAOF,gBAIX,SAAmCA,EAAUD,GACzC,IAAK,IAAIG,KAAQH,OACQ,IAAjBC,EAAME,KACNF,EAAME,GAASH,EAAQG,IAI/B,OAAOF,4BAmDX,SAAsBmW,GAClB,OAAOA,EAAI9Y,OAAO4D,KAAMkV,mDCpP5B,cAuDA,OA9CWvU,SAAP,SAAewU,EAAqCC,gBAArCD,MACX,IAAM9U,EAAiCC,EAActE,MAGrDoZ,GAAejW,EAAQnD,KAAMoZ,GAGrB,IAAAlU,WAAQmU,kBAehB,OAdAnU,GAAUlF,KAAKkF,OAAO4L,MAAO5L,GAG7BlF,KAAKkF,OAAOI,YAAatF,KAAKG,UAAWkZ,GAAa,GAGtDrZ,KAAKkF,OAAOI,YAAatF,KAAKG,UAAWH,KAAKkF,OAAOoU,qBAAsBjV,IAAa,GAGxFrE,KAAKuZ,UAAYvZ,KAAKuZ,SAAUvZ,KAAKkF,OAAOsU,YAAanV,GAGzDrE,KAAKkF,OAAOuU,sBAAuBpV,GAE5BrE,MAIJ2E,SAAP,SAAiC8H,EAAWiN,GACxC,IAAIC,EAiBJ,OAbIlN,GAAQA,EAAK9L,eAAgB,eAG7Bf,EADA+Z,EAAclN,EAAKxM,YACKD,MAIxB2Z,cAAc,4DAA6B,OAAN3D,UAAAhW,MAGzCgF,EAAW2U,GACXlN,GAAQkN,EAAYnV,OAAQiI,EAAMiN,GAE3BC,sBA4EX,WAAoBxX,GAAAnC,WAAAmC,EAXpBnC,oBAYY,IAAAkF,cAERlF,KAAK4Z,WAAe1U,GAAUA,EAAO0U,YAAgBxU,IACrDpF,KAAKmF,gBAAoBD,GAAUA,EAAOC,iBAAqBC,IAC/DpF,KAAK6Z,cAAkB3U,GAAUA,EAAO2U,kBAiGhD,OA7GWpV,MAAP,SAAYtC,GACA,IAAA+C,WAER,OAAOA,GAAU/C,IAAU+C,EAAO/C,MAAQ+C,EACrC/C,EAAM+C,OAAS,IAAIT,EAAatC,IAWzCsC,iCAAA,SAAsBJ,GACZ,IAAAmV,EAAcpU,IACdjD,aAEN,OAAO2X,EAAWN,EAAaxZ,KAAKmF,gBAAiB,SAAEa,EAAM/C,GACzD,GAAIoB,EAAWpB,KAAWd,EAAOc,GAC7B,OAAOd,EAAOc,MAK1BwB,kBAAA,SAAOS,GAQH,IAAkB,IAPZpD,EAAa9B,KAAKmC,MAAMhC,UAIxB0Z,EAAgB7Z,KAAK6Z,cAAgB7Z,KAAK6Z,cAAclG,YAG5CoG,IAAAlU,WAAAA,KAAb,IAAImU,OAEL,GAAIhY,MAAMoT,QAAS4E,GACfha,KAAK8Q,MAAOkJ,QAGX,GAAIH,EAAchZ,QAASmZ,GAAU,EAItC,GAHAH,EAAc3J,KAAM8J,GAGC,mBAAVA,EAAsB,CACzB1V,EAAc0V,KAAY5Z,QAE1BkK,QAAQ0N,IAAK,eAIjBhY,KAAKsF,YAAatF,KAAKmC,MAAO6X,GAG9B,IAAMC,EAAiBD,EAAe9U,OAClC+U,IACAja,KAAK4Z,WAAaxW,EAAUgC,IAAWpF,KAAK4Z,WAAYK,EAAaL,YACrE5Z,KAAKmF,gBAAkB/B,EAAUgC,IAAWpF,KAAKmF,gBAAiB8U,EAAa9U,iBAC/EnF,KAAK6Z,cAAgB7Z,KAAK6Z,cAActD,OAAQ0D,EAAaJ,gBAIjE7Z,KAAKsF,YAAaxD,EAAOkY,EAAM7Z,gBAI/BH,KAAKsF,YAAaxD,EAAOkY,KAMzCvV,qBAAA,eAAU,aAAAoB,mBAAAA,IAAAqU,kBACN,IAAiB,QAAAC,IAAA5U,WAAAA,IACbd,EAAYC,UAAYoM,OAAQ9Q,KAAKmC,SAI7CsC,wBAAA,SAAa1B,EAAeD,EAAiBmD,GAA7C,WACImU,EAAgBtX,EAAQ,SAAAG,GACpB,IACI+C,EADED,EAAa3F,OAAOqB,yBAA0BqB,EAAQG,IAGxD+C,EAAO6P,EAAK1Q,gBAAiBlC,KAC7BoX,EAAgBxE,EAAK2D,YAAavW,EAAM8C,EAAYC,EAAMC,GAGzDD,GAAQA,IAASsU,GAAWC,YAC7BF,EAAgBtX,EAAME,EAAM8C,EAAY8P,EAAK+D,WAAY3W,GAAQgD,MAK7ExB,kCAAA,SAAuBJ,GACb,IAAAkB,OAAEqU,eAAYzX,UAEpB,GAAIyX,EAAY,CACZ,IAAM9X,EAAQK,EAAMhC,UAChBqa,EAAYnW,EAAUlE,UAE1B,IAAK,IAAI4Y,KAAQa,EAAa,CAC1B,IAAM5T,EAAO4T,EAAYb,GAErBjX,EAAMnB,eAAgBoY,IAAUA,KAAQyB,IACxC1Y,EAAOiX,GAAS3S,EAAatE,EAAOiX,GAAQyB,EAAWzB,GAAQ/S,YAO7EL,IACF8U,SAAWrV,GACPpE,QAAS,EACTb,WAAY,EACZua,QAAS,EACTnZ,WAAY,EACZ0B,MAAO,EACPsB,WAAY,IAGhBkB,OAASL,GACLnF,aAAc,KAiCTiF,GAAS,eAAE,aAAAW,mBAAAA,IAAA8U,kBAAuB,gBACzCxY,GAAsB,OAAAsC,GAAYC,IAAKvC,GAAQ2O,MAAO6J,KAI/CL,YAAiBrV,GAA6B,gBACrD9C,GACE,IAAM+C,EAAST,GAAYC,IAAKvC,GAChC+C,EAAO0U,WAAaxW,EAAU6B,EAAOC,EAAO0U,cAMpDU,GAAWzY,MAAQ,SAAE4B,EAAG3D,GAAO,OAAA2D,GAE/B6W,GAAWC,WAAa,SAAE9W,EAAG3D,GAAO,OAAA2D,GAGpC6W,GAAWxJ,MAAQ,SAAErN,EAAG3D,GAAO,OAAAsD,KAAcK,EAAG3D,IAGhDwa,GAAWM,KAAO,SAAEnX,EAAG3D,GAAO,gBAChB+C,GACN,OAAOY,EAAE7C,KAAMZ,KAAMF,EAAEc,KAAMZ,KAAM6C,MAK3CyX,GAAWlX,SAAW,SAAEK,EAAc3D,GAAkB,kBAEhD,OAAOsD,EAAUK,EAAED,MAAOxD,KAAMuB,WAAazB,EAAE0D,MAAOxD,KAAMuB,cAKpE+Y,GAAWO,WAAa,SAAEpX,EAAc3D,GAAkB,kBAElD2D,EAAED,MAAOxD,KAAMuB,WACfzB,EAAE0D,MAAOxD,KAAMuB,aAKvB+Y,GAAWQ,UAAY,SAAErX,EAAc3D,GAAkB,kBAEjDA,EAAE0D,MAAOxD,KAAMuB,WACfkC,EAAED,MAAOxD,KAAMuB,aAKvB+Y,GAAWrY,MAAQ,SAAEwB,EAAc3D,GAAiB,kBAE5C,OAAO2D,EAAED,MAAOxD,KAAMuB,YAAezB,EAAE0D,MAAOxD,KAAMuB,aAI5D+Y,GAAW1X,KAAO,SAAEa,EAAc3D,GAAiB,kBAE3C,OAAO2D,EAAED,MAAOxD,KAAMuB,YAAezB,EAAE0D,MAAOxD,KAAMuB,aC7V5D,kBAGI,WAAaqK,GAFb5L,iBAGQ4L,IACIA,aAAemP,EACf/a,KAAKgb,SAAWpP,EAAIoP,SAASrH,QAG7B/H,GAAO5L,KAAKib,aAAcrP,IAwC1C,OAnCImP,kBAAA,SAAOnP,GACH5L,KAAKgb,SAAWhb,KAAKgb,SAASzE,OAAQ3K,EAAIoP,WAG9CD,yBAAA,SAAcnP,GACV,IAAK,IAAIoN,KAASpN,EACd5L,KAAKiP,SAAU+J,EAAOpN,EAAKoN,KAInC+B,yBAAA,SAAc/B,GACV,IAAiB,QAAAzT,EAAAyT,EAAMhR,MAAOH,IAAbhC,WAAAA,KAAZ,IAAIkT,OACL/Y,KAAKiP,SAAU8J,EAAMmC,EAAoBnC,MAIjDgC,qBAAA,SAAU/B,EAAgBrS,GAGtB,IAAiB,IAFTqU,oBAESzV,EAAAyT,EAAMhR,MAAOH,IAAbhC,WAAAA,KAAZ,IAAIC,OACLkV,EAAS9K,KAAM,IAAIiL,GAAiBrV,EAAMa,MAIlDoU,sBAAA,SAAW5Z,EAAa2B,GACpB,IAAkB,QAAAyC,EAAAvF,KAAKgb,SAALnV,WAAAA,KAAb,IAAIuV,OACL5T,EAAI1E,EAAQsY,EAAMnY,KAAMmY,EAAMzU,SAAUxF,KAIhD4Z,wBAAA,SAAa5Z,EAAa2B,GACtB,IAAkB,QAAAyC,EAAAvF,KAAKgb,SAALnV,WAAAA,KAAb,IAAIwV,OACL9T,EAAKzE,EAAQuY,EAAMpY,KAAMoY,EAAM1U,SAAUxF,wBA2BrD,OAlBI,SACW8B,EACP0D,GADO3G,UAAAiD,EAIHjD,KAAK2G,UADQ,IAAbA,EACgBuU,EAAoBjY,GAEX,iBAAb0D,EAER,WACI,IAAM2U,EAAUtb,KAAM2G,GACtB2U,GAAWA,EAAQ9X,MAAOxD,KAAMuB,YAIdoF,MAMhCL,oBAqBN,OADI,SAAoBK,EAA4BC,EAAsBK,gBAAAA,QAAlDjH,cAAA2G,EAA4B3G,aAAA4G,EAAsB5G,UAAAiH,MA0GpEY,GAAgB,sICvNA0T,KAAS/T,KAAID,KAAKiU,KAAMjV,KAAUE,KAAUD,KAM9DiC,GAAW,gBA6EX,aAZAzI,kBAA4B,EAG5BA,uBAAiC,EAU7BA,KAAK4I,IAAMC,IACX7I,KAAKyb,WAAWjY,MAAOxD,KAAMuB,WAgGrC,OAhIWma,WAAP,SAAgBnW,EAAiElB,OAA/DsX,gBAAa7M,iBAAc8M,eAEzC,GAAID,GAAe7M,EAAc,CAC7B,IAAM+M,EAAY,IAAId,GAAU/a,KAAKG,UAAU2O,cAE/C6M,GAAeE,EAAUZ,aAAcU,GACvC7M,GAAgB+M,EAAU/K,MAAOhC,GAEjC9O,KAAKG,UAAU2O,aAAe+M,EAI9BD,GACAxb,OAAO0b,iBAAkB9b,KAAKG,UAAW2Z,KAA4B8B,EAAYG,KAyBzFL,uBAAA,aAEAA,eAAA,SAAI9T,EAAqCjB,EAAUC,GAC/C,GAAsB,iBAAXgB,EAAsB2T,GAAS/T,GAAIxH,KAAM4H,EAAQjB,EAAUC,QACjE,IAAK,IAAImS,KAAQnR,EAAS2T,GAAS/T,GAAIxH,KAAM+Y,EAAMnR,EAAQmR,GAAQnS,GAAWD,GAEnF,OAAO3G,MAGX0b,iBAAA,SAAM9T,EAAqCjB,EAAUC,GACjD,GAAsB,iBAAXgB,EAAsB2T,GAASC,GAAMxb,KAAM4H,EAAQjB,EAAUC,QACnE,IAAK,IAAId,KAAQ8B,EAAS2T,GAASC,GAAMxb,KAAM8F,EAAM8B,EAAQ9B,GAAQc,GAAWD,GAErF,OAAO3G,MAGX0b,gBAAA,SAAK9T,EAAsCjB,EAAWC,GAClD,GAAKgB,EACA,GAAsB,iBAAXA,EAAsB2T,GAAShU,GAAKvH,KAAM4H,EAAQjB,EAAUC,QACvE,IAAK,IAAIc,KAAQE,EAAS2T,GAAShU,GAAKvH,KAAM0H,EAAME,EAAQF,GAAQd,GAAWD,QAFtEY,GAAKvH,UAAM,EAAQ2G,EAAUC,GAI3C,OAAO5G,MAOX0b,oBAAA,SAAQzY,EAAeQ,EAAI3D,EAAIwB,EAAIzB,EAAIW,GAInC,YAHU,IAANX,QAAsB,IAANW,EAAe+F,GAAUvG,KAAMiD,EAAMQ,EAAG3D,EAAGwB,EAAGzB,EAAGW,QACtD,IAANc,EAAekF,GAAUxG,KAAMiD,EAAMQ,EAAG3D,EAAGwB,GAC/CmF,GAAUzG,KAAMiD,EAAMQ,EAAG3D,GACvBE,MAGX0b,qBAAA,SAAU5Y,EAAoBW,EAAgC3D,GAM1D,OALIgD,IACAkZ,EAAchc,KAAM8C,GACpBA,EAAO0E,GAAI/D,EAAI3D,GAAkB,iBAAN2D,EAAwB3D,EAAPE,KAAUA,OAGnDA,MAGX0b,yBAAA,SAAc5Y,EAAoBW,EAAgC3D,GAM9D,OALIgD,IACAkZ,EAAchc,KAAM8C,GACpBA,EAAO0Y,KAAM/X,EAAI3D,GAAkB,iBAAN2D,EAAwB3D,EAAPE,KAAUA,OAGrDA,MAGX0b,0BAAA,SAAeO,EAAuBxY,EAAiC3D,GAC3D,IAAA6I,oBACR,GAAIA,EAAc,CACd,IAAMuT,IAAezY,GAAK3D,GACpBqc,EAAUrc,GAAkB,iBAAN2D,EAAwB3D,EAAPE,KAE7C,GAAIic,EAAU,CACV,IAAMnZ,EAAS6F,EAAcsT,EAASrT,KAClC9F,IACIoZ,UAAmBvT,EAAcsT,EAASrT,KAC9C9F,EAAOyE,IAAK9D,EAAG0Y,EAAQnc,YAG1B,GAAgB,MAAZic,EAAkB,CACvB,IAAK,IAAIrT,KAAOD,EAAeA,EAAcC,GAAMrB,IAAK9D,EAAG0Y,EAAQnc,MAE/Dkc,IAAclc,KAAK2I,kBAAe,IAI9C,OAAO3I,MASX0b,oBAAA,WACQ1b,KAAKoc,YAETpc,KAAKqc,gBACLrc,KAAKuH,MAELvH,KAAKoc,WAAY,IArIHV,KALrBlX,EACAgV,GACGoC,WAAatB,GAAWxJ,MACxB6K,YAAcrB,GAAWxJ,SAEP4K,MA4ITY,GAAiCC,EAAMb,GAAUvb,UAAW,cAAe,cqBtKxFC,OAAOoc,OAAS,SAAErD,EAAYC,GAAiB,OAAAzU,GAAQ6X,OAAQrD,EAAYC,IAC3EhZ,OAAO+C,SAAY/C,OAAO+C,OAASsZ,GACnCrc,OAAO4X,IAAM0E,GChBb,kBAQI,WAAata,GACTpC,KAAKgB,OAASoB,EAAIua,gBAAiB3c,KAAKmS,YAEpCnS,KAAKuK,MAAQnI,EAAIoK,SAAUpK,KAC3BpC,KAAKgB,SAwBjB,OApBI4b,iBAAA,SAAMtH,GACI,IAAA/P,OAAEgF,UAAO4H,WAEX5H,GAAQ+K,EAAU/K,EAAO,MAE7B,IAAK,IAAMnJ,KAAO+Q,EACdmD,EAAUnD,EAAQ/Q,GAAOA,IAIjCwb,sBAAA,SAAWtH,EAAwE7P,GAC/EzF,KAAK6c,KAAM,SAAEhb,EAAaT,GAClBS,aAAiB+a,EACC/a,EAAOib,UAAWxH,EAAU7P,EAAOf,IAAKtD,IAG1DkU,EAAUzT,EAAOT,EAAKqE,WrB7BhC0D,GAAiB,4BA4BvB,OAlBI,SAAaJ,EAAoBgU,gBAAAA,MAC7B,IAAM9T,EAAOF,EACIG,MAAOC,IACPyC,IAAK,SAAAxK,GACF,MAAY,MAARA,EAAqB,aAER,MAAbA,EAAK,GAAqB,mBAAoBA,EAAI4b,OAAQ,QAEvD5b,IAG3BpB,KAAKwP,KAAOuN,GAAa9T,EAAKgU,MAC9Bjd,KAAKsP,OAASrG,EAAKjI,OAEnBiI,EAAKhD,QAAS,QAEdjG,KAAKuP,QAAgB,IAAI5D,SAAU,OAAQ,UAAW1C,EAAK6C,KAAK,cElCtDtF,KAAUgB,KAAID,MAYhC,SAAYmJ,GACRA,qBACAA,uBACAA,+BAHJ,CAAYA,kBAAAA,qBAYZ,kBAqHI,WAAa9H,GA3Db5I,kBAAsC,EAetCA,qBAIAA,mBAAyB,EAIzBA,cAAiC,KAIjCA,iBAAiB,EAKjBA,oBAAqB,EA2JrBA,2BAAqC,EA/HjCA,KAAK4I,IAAM5I,KAAKkd,UAAYtU,EA+KpC,SArSsBmE,EAQXA,WAAP,SAAiByM,EAAuCnV,GAChDmV,EAAY2D,WAAWnd,KAAKG,UAAUid,UAAY5D,EAAY2D,UAClEzB,GAAUnC,SAAS3Y,KAAMZ,KAAMwZ,EAAanV,IAGzC0I,WAAP,SAAiB1I,GAETA,EAAUhE,SAAWL,KAAKK,SAC1BL,KAAKK,OAASgd,EAAchd,SAK7B0M,SAAP,SAAetJ,EAAS3D,GACpB,OAAO,IAAKE,KAAcyD,EAAG3D,IAqBjCiN,oBAAA,WACQ/M,KAAKoc,YAETrS,EAAS/J,MACTA,KAAKyJ,YAAS,EACdzJ,KAAK2J,eAAY,EACjB3J,KAAKuH,MACLvH,KAAKqc,gBACLrc,KAAKoc,WAAY,IAIrBrP,uBAAA,aA4CAA,sBAAA,SAAWuO,EAAoBna,GAC3BqG,GAAIxH,KAAMA,KAAK4Q,iBAAkB0K,EAASna,IAM9C4L,uBAAA,SAAYuO,EAAqBna,GAC7BoG,GAAKvH,KAAMA,KAAK4Q,iBAAkB0K,EAASna,IAM/C4L,4BAAA,SAAiB5L,EAAwBma,GACrCtb,KAAKsd,SAAUnc,EAAQA,EAAOyP,iBAAkB0K,IAWpDvO,wBAAA,SAAazK,EAA+BuH,gBAAAA,MACxC,IAAMgB,EAASyL,GAAexL,MAAO9K,MAC/Bud,EAASjb,EAAI1B,KAAMZ,KAAMA,MAC/Bud,GAAUvd,KAAKiX,IAAKsG,GACpB1S,GAAUyL,GAAenL,OAAQnL,OAKrC+M,uBAAA,SAAYuI,EAAyDzL,GACjE,IAAMgB,EAASyL,GAAexL,MAAO9K,MACrCA,KAAK6c,KAAMvH,GACXzK,GAAUyL,GAAenL,OAAQnL,OAIrC+M,gBAAA,SAAKf,EAAcnC,GACf,GAAImC,EAAQ,CACR,IAAMqH,EAAcrT,KAAKsT,mBAAoBtH,EAAQnC,GACrDwJ,GAAeA,EAAYlI,SAG/B,OAAOnL,MAIX+M,uBAAA,SAAYjK,GACR,OAAO9C,KAAKiX,IAAYnU,EAAS0a,iBAAmB1a,GAAUgO,OAAQ,KAU1E/D,kBAAA,SAAO0Q,EAAY5T,GAAwC,OAAO4T,GAalE1Q,oBAAA,SAAShE,GACL,OAAO2U,EAAkB1d,KAAM+I,EAAW,SAAEtD,EAAQrE,GAAS,OAAAqE,EAAOf,IAAMe,EAAOf,IAAKtD,GAAQqE,EAAQrE,MAM1G2L,qBAAA,WACI,OAAO/M,KAAKyJ,QAQhBsD,qBAAA,WACY,IAAAtD,cACR,OAAOA,EAAyBA,EAAOJ,WAAarJ,KAAK2d,eAY7D5Q,gBAAA,SAAQuI,EAAsD1O,GAC1D,IAAMvE,KACAC,OAAkB,IAAZsE,EAAqB,SAAEyO,EAAGvH,GAAO,OAAAwH,EAAS1U,KAAMgG,EAASyO,EAAGvH,IAAMwH,EAO9E,OALAtV,KAAK6c,KAAM,SAAE9F,EAAK3V,GACd,IAAMmB,EAASD,EAAKyU,EAAK3V,QACV,IAAXmB,GAAoBF,EAAI6N,KAAM3N,KAG/BF,GAMX0K,kBAAA,SAAOlD,GAAuC,MAAM,IAAIqN,MAAO,oBAE/DnK,wBAAA,WACI,OAAOvD,EAAkBxJ,OAAUA,KAAKod,WAI5CrQ,sBAAA,SAAcuI,EAAsD1O,GAChE,IAAMxE,KAQN,OALApC,KAAK6c,KAAM,SAAE9F,EAAK3V,GACd,IAAMmB,EAAS+S,EAAUyB,EAAK3V,QACf,IAAXmB,IAAoBH,EAAKhB,GAAQmB,KAGlCH,GAYXhC,sBAAI2M,mCAAJ,WACI,IAAMxC,EAAQvK,KAAK4d,mBAAsB5d,KAAK4d,iBAAmB,IAAIhB,GAAiB5c,OACtF,OAAOuK,EAAMvJ,OAASuJ,EAAQ,sCAQlCwC,qBAAA,SAAU3K,KAGV2K,+BAAA,SAAoB3L,GAChB,IAAImJ,EAAQvK,KAAK6d,gBACjB,OAASzc,EAAMmJ,GAASA,EAAM4H,OAAQ/Q,GAAQmJ,IAAW,MAI7DwC,gCAAA,SAAqBhE,GACjB,OAAO2U,EAAkB1d,KAAM+I,EAAW,SAAEtD,EAAQrE,GAAS,OAAAqE,EAAOqY,mBAAoB1c,MAI5F2L,gCAAA,SAAqBuI,GACT,IAAAuI,uBACRA,GAAmBA,EAAgBf,UAAWxH,EAAUtV,OAI5D+M,oBAAA,SAAS3L,GACL,OAAQpB,KAAK8d,mBAAoB1c,IAGrC2L,oBAAA,WAAqB,OAAO/M,KAAK4I,KACjCmE,qBAAA,WAAY,OAAO/M,KAAK4I,KAGxBmE,yBAAA,WACY,IAAA9J,wBACR,GAAa,aAATA,EAAsB,OAAOA,GAhSnB8J,OALrBvI,EACAgV,GACG2D,SAAW7C,GAAWzY,QAEzBqD,GAAQwW,KACa3O,YAkWTuJ,IAGTxL,MAAA,SAAOrF,GACH,OAAOA,EAAOsY,eAAyBtY,EAAOsY,cAAe,IAMjE9S,YAAA,SAAaxF,EAAwBoE,GAEjC,IAAMmU,GAASnU,EAAQ+J,OASvB,OARIoK,IAAQvY,EAAOwY,SAAWpU,GAG9BpE,EAAOyY,gBAGPzY,EAAOmY,sBAAmB,EAEnBI,GAMX7S,gBAAQ1F,EAAwB0Y,GAC5B,IAAIC,EAAkB3Y,EAAOwY,SAE7B,GAAIG,EAAiB,CAEjB,KAAO3Y,EAAOwY,UAAU,CACpB,IAAMpU,EAAUpE,EAAOwY,SACvBxY,EAAOwY,SAAW,KAClBzX,GAAUf,EAAQA,EAAOmL,iBAAkBnL,EAAQoE,EAASsU,GAIhE1Y,EAAOsY,cAAe,EAGd,IAAAtU,WACJA,GAAUA,IAAiB0U,GAC3B1U,EAAOoH,kBAAmBpL,EAAQ2Y,QAKtC3Y,EAAOwY,SAAW,KAClBxY,EAAOsY,cAAe,GAU9BM,OAAA,SAAQjN,EAAeC,EAAuBjQ,GAC1C,OAAKiQ,EAAM5H,OAMJ4H,EAAM5H,SAAW2H,GALpBC,EAAM5H,OAAS2H,EACfC,EAAM1H,UAAYvI,GACX,IAQfwQ,KAAA,SAAMR,EAAeC,GACbD,IAAUC,EAAM5H,SAChB4H,EAAM5H,YAAS,EACf4H,EAAM1H,eAAY,KC1ctByB,YAAgBI,kBAA4BL,aAG5C3E,KAyFK8X,IAETjL,YAAA,SAAyC/Q,EAA8CuH,gBAAAA,MACnF,IAAMgB,EAASC,EAAO9K,MACtBsC,EAAI1B,KAAMZ,KAAMA,MAChB6K,GAAUM,GAAQnL,OAItB6Q,kBAAA,SAAmBQ,EAAuBxH,GAC9B,IAAAF,cACF4U,EAAYve,KAAK+K,YAAapB,GAE/B4U,IAA6DA,EAAUC,kBAAmBxe,KAAKye,qBAAsB9U,EAAWE,IAIzI4U,8BAAsBrd,EAAcyI,gBAAAA,MAEhC,IAAMgB,EAASC,EAAO9K,MAElBiL,EAAajL,KAAM6J,IACnBrD,GAAUxG,KAAM,UAAYoB,EAAKpB,KAAMA,KAAKkL,WAAY9J,GAAOyI,GAGnEgB,GAAUM,GAAQnL,OAGtBsT,mBAAA,SAAgDoL,EAAe7U,gBAAAA,MAC3D,IAMIoG,EANEpF,EAASC,EAAO9K,MACd2e,KACAxM,KACEpH,mBACFiB,EAASnC,EAAQqE,MAAQlO,KAAKkO,MAAOwQ,EAAU7U,GAAY6U,EAInE,GAAI1O,GAAkBhQ,KAAMgM,GACxB,IAAK,IAAI+M,KAAQ/M,EAAQ,CACrB,IAAMS,EAAO1B,EAAagO,GAEtBtM,EACIA,EAAKzB,SAAUgB,EAAQ+M,GAAQ/Y,KAAM6J,EAASsI,IAC9CwM,EAAQzO,KAAM6I,IAIlB9I,IAAaA,MACbA,EAAQC,KAAM,IAAK6I,QAS/B,GAAI4F,EAAQ3d,QAAUiK,EAAajL,KAAM6J,GACrC,OAAO,IAAI+U,GAAmB5e,KAAM6K,EAAQsH,EAAQwM,GAIxD,IAA+B,QAAAE,IAAAhZ,WAAAA,SACRsF,OAAQnL,MAG/B6K,GAAUM,GAAQnL,sBA2CtB,WAAoByF,EACAoF,EACAsH,EACAwM,GAHA3e,YAAAyF,EACAzF,YAAA6K,EACA7K,YAAAmS,EACAnS,aAAA2e,EAoBxB,OAjBIC,mBAAA,SAAQT,GAIJ,IAAwB,IAHlB5Y,OAAE4M,WAAQ1M,WAAQkZ,gBAGAG,IAAAjZ,WAAAA,SACRsF,OAAQ1F,GAMxB,IAAgB,IADRyF,eAAY+S,iBACJc,IAAAvZ,WAAAA,KAAX,IAAIpE,OACLoF,GAAUf,EAAQ,UAAYrE,EAAKqE,EAAQyF,EAAY9J,GAAO6c,GAGlEje,KAAK6K,QAAUM,GAAQ1F,EAAQ0Y,SC1N/Bla,KAAUd,KAwCZ6b,oBA4IF,WAAoB/b,EAAe+P,GAAfhT,UAAAiD,EAyEpBjD,aAA2C,KAvEvCA,KAAK6J,QAAUmJ,EAGf,IAAMnJ,EAA6B1G,IAAU8b,YAAeC,cAAiBC,mBAAuBnM,GACpGnJ,EAAQoV,SAAWpV,EAAQoV,SAAStL,QACpC9J,EAAQqV,WAAarV,EAAQqV,WAAWvL,QACxC9J,EAAQsV,eAAiBtV,EAAQsV,eAAexL,QAGtC,IAAA9R,UAAOgL,SAAMqB,UAAOQ,WAAQ0Q,iBAC5B5S,aAAUyS,aAAUC,eAAYC,mBA+C1C,GA3CAnf,KAAK6B,MAAQA,EACb7B,KAAK6M,KAAQA,GAGRhD,EAAQoD,kBAAoBJ,EAC7B7M,KAAKqf,aAAerf,KAAKK,OAEpBif,EAAmBzd,GAExB7B,KAAKqf,aAAe,IAAI1T,SAAU,UAAW4T,KAAKC,UAAW3d,QAG7D7B,KAAKqf,aAAerf,KAAKqf,aAI7Brf,KAAKwe,kBAAoC,IAAjBY,EAExBpf,KAAK0O,YAAoB,IAAXA,EAAoB1O,KAAK0O,OAASA,EAEhD1O,KAAKwM,SAAWA,GAAYxM,KAAKwM,SAE7B3C,EAAQ4V,aACRzf,KAAKwM,SAAWkT,GAAgB1f,KAAKwM,WAQzC0S,EAAWjZ,QAASjG,KAAK2f,SAGzB3f,KAAKkO,MAAQA,GAASlO,KAAKkO,MAGvBlO,KAAK0E,KAAMua,EAAShZ,QAASjG,KAAK0E,KAGtC1E,KAAKyb,WAAW7a,KAAMZ,KAAM6J,GAGxBoV,EAASje,OAAQ,CACjB,IAAM4e,EAAU5f,KAAK6f,QAAUZ,EAASa,OAAQC,IAExCC,gBACRhgB,KAAKwM,SAAW,SAAU5B,EAA8B/I,EAAaT,GACjE,OAAO4e,EAASpf,KAAMZ,KAAM4K,EAAQgV,EAAQhf,KAAMgK,EAAQ/I,EAAOT,GAAOA,IAIhFpB,KAAK8Z,UAAYoF,EAAWle,OAASke,EAAWY,OAAQG,IAAoBjgB,KAAK8Z,UAEjF9Z,KAAKkgB,aAAef,EAAene,OAASme,EAAeW,OAAQK,IAAwBngB,KAAKkgB,aAKxG,OAhNW7R,SAAP,SAAexE,EAA4B5G,GACvC,IAAM4J,EAAOhD,EAAQgD,KAGrB,OAAO,IAFehD,EAAQ+E,aAAgB/B,EAAOA,EAAK+B,WAAaP,IAE7CpL,EAAM4G,IASpCwE,yBAAA,SAAcvH,EAAMG,EAAM4C,KAK1BwE,sBAAA,SAAWpH,EAAYH,EAAY0J,EAA6B3G,GAAuC,OAAO5C,GAG9GoH,oBAAA,SAASpH,EAAYH,EAAY0J,EAA6B3G,GAAuC,OAAO5C,GAK5GoH,sBAAA,SAAW5K,EAAS3D,GAChB,OAAOmE,GAAUR,EAAG3D,IAMxBuO,yBAAA,SAAcpH,EAAYH,EAAY0J,EAA6B3G,KAOnEwE,mBAAA,aAIAA,kBAAA,SAAOxM,EAAa+I,GAChB,OAAO/I,GAGXwM,oBAAA,SAASzD,EAA8B/I,GACnC7B,KAAKkgB,kBAAc,EAAQre,EAAO+I,EAAQoU,KAG9C3Q,qBAAA,SAAUzD,EAA8B/I,EAAaT,KAErDiN,mBAAA,SAAQxM,EAAOT,GACX,OAAOS,GAASA,EAAM6M,OAAS7M,EAAM6M,SAAW7M,GAGpDwM,qCAAA,WACU,IAAA9I,OAAEtC,SAAM4c,YAEd,GAAa,OAAT5c,EACA,OAEIgU,aAAKpV,GACDue,EAAcpgB,KAAMiD,EAAMpB,IAI9B6C,IACImb,EACI,WACI,OAAOA,EAAQjf,KAAMZ,KAAMA,KAAKkL,WAAYjI,GAAQA,IAExD,WAAa,OAAOjD,KAAKkL,WAAYjI,MAazDoL,uBAAA,SAAYpL,EAAe4G,KAI3BwE,mBAAA,SAAQxM,EAAO+I,EAA8Bf,GACzC,IAAMwL,OAAc,IAAVxT,EAAmB7B,KAAKqf,eAAiBxd,EAC/CgB,EAAI7C,KAAK8Z,UAAWzE,OAAG,EAAQzK,EAAQf,GAG3C,OADA7J,KAAKkgB,aAAcrd,OAAG,EAAQ+H,EAAQf,GAC/BhH,GAGXwL,qBAAA,SAAUxM,EAAO+I,EAA8Bf,EAA8BsI,GACjE,IAAAlP,YACFiI,eACApE,EAAOoE,EAAYjI,GAEnBgE,EAAOjH,KAAK8Z,UAAWjY,EAAOiF,EAAM8D,EAAQf,GAGlD,OAFAqB,EAAYjI,GAASgE,IAEjBjH,KAAKqgB,UAAWpZ,EAAMH,KAEtB9G,KAAKkgB,aAAcjZ,EAAMH,EAAM8D,EAAQf,IAChC,IAQfwE,iBAAA,SAAMkK,EAAwB+H,EAAeze,EAAO+I,GAChD8R,GAAWnE,EAAO,4BAA6B3N,EAAO2V,mBAAoBvgB,KAAKiD,UAAYqd,GACvFE,OAAW5V,EACX6V,uBAAyBzgB,KACzB0gB,cAAgB9V,EAAOM,WAAYlL,KAAKiD,MACxC0d,YAAc9e,KAItBwM,yBAAA,WACI,OAAOrO,KAAK6B,YkB9KZ+P,WAAMyM,4BAEd,4DAiHA,OAjHoCrI,OAGhC4K,kBAAA,SAAO/e,GACH,OAAOA,EAAQA,EAAMkP,QAAUlP,GAGnC+e,mBAAA,SAAQ/d,GAAK,OAAOA,GAAKA,EAAE6L,UAE3BkS,mBAAA,SAAQ/e,EAAO+I,EAA8Bf,GACzC,IAAMwL,EAAIxL,EAAQkH,MAAQ/Q,KAAK+Q,MAAOlP,QACxB,IAAVA,EAAmB7B,KAAKqf,eAAiBxd,EAGvCgB,EAAI7C,KAAK8Z,UAAWzE,OAAG,EAAQzK,EAAQf,GAE7C,OADA7J,KAAKkgB,aAAcrd,OAAG,EAAQ+H,EAAQf,GAC/BhH,GAGX+d,qBAAA,SAAU/e,EAAO+I,EAAQf,EAASsI,GACxB,IAEFoL,EAFEnc,EAAMpB,KAAKiD,KAAQiI,eACnBpE,EAAOoE,EAAY9J,GAIzB,GAAImc,EAASvd,KAAK6gB,aAAc/Z,EAAMjF,EAAOgI,GAAY,CACrD,IAAMiX,EAAoBha,EAAKwM,mBAAoBiK,EAAQ1T,GAC3D,SAAIiX,IACI3O,EACAA,EAAOjC,KAAM4Q,GAGbA,EAAkB3V,OAAQP,IAG1B5K,KAAKwe,mBAMjB,IAAMvX,EAAOjH,KAAK8Z,UAAWjY,EAAOiF,EAAM8D,EAAQf,GAGlD,OAFAqB,EAAY9J,GAAQ6F,IAEhBjH,KAAKqgB,UAAWpZ,EAAMH,KAEtB9G,KAAKkgB,aAAcjZ,EAAMH,EAAM8D,EAAQf,IAEhC,IAMf+W,yBAAA,SAAc9Z,EAAsBG,EAAY4C,GAE5C,GAAI/C,GAAgB,MAARG,EAAc,CACtB,KAAIA,aAAgBjH,KAAK6M,MAKrB,OAAO5F,EAHP,GAAI4C,EAAQiH,MAAQ,OAAO7J,EAAKuW,kBAQ5CoD,oBAAA,SAAS3Z,EAAYH,EAAY8D,EAA8Bf,GAE3D,OAAY,MAAR5C,EAAsBA,EAEtBA,aAAgBjH,KAAK6M,OACjB5F,EAAKwJ,SAAcxJ,EAAKwJ,QAAUC,gBAAcqQ,YAChD/gB,KAAKiM,KAAM,QAAS,qEAAsEhF,EAAM2D,GAK7Ff,EAAQiH,MAAQ7J,EAAK8J,QAAU9J,GAG9BjH,KAAK6M,KAAKxM,OAAQ4G,EAAM4C,IAGxC+W,oBAAA,SAAUhW,EAA8B/I,GAChCA,GACA7B,KAAKkgB,kBAAc,EAAQre,EAAO+I,OAI1CgW,qBAAA,SAAUhW,EAA8B/I,GACpC,IAAI0I,EAAQ1I,GAASA,EAAMgc,gBAC3B,GAAItT,EAAQ,OAAOA,GAGvBqW,mBAAA,WACI,OAAa5gB,KAAK6M,KAAMxM,UAG5BugB,uBAAA,SAAY/W,GACRA,EAAQsV,eAAelZ,QAASjG,KAAKghB,gBAGzCJ,0BAAA,SAAe3Z,EAAsBH,EAAsB8D,EAA8Bf,GACjF/C,IACA8K,GAAMhH,EAAQ9D,GACd+C,EAAQyH,OAASxK,EAAK0K,WAGtBvK,IAASoX,GAAQzT,EAAQ3D,EAAMjH,KAAKiD,OACpCjD,KAAKiM,KAAM,QAAS,oEAAqEhF,EAAM2D,OA9GvEyD,IjBE5BlL,mBAUJ,WAAa0G,GAET7J,KAAK6J,SAAYoV,YAAeC,cAAiBC,mBAC7CtV,GAAU1G,GAAQnD,KAAK6J,QAASA,GAyG5C,OAtGI+C,kBAAA,SAAOqU,EAAwB1W,GAC3B,WAAmBiG,EAAO3O,EAAOoB,GAC7B,IAAKge,EAAMrgB,KAAM4P,EAAO3O,EAAOoB,GAAQ,CACnC,IAAMoV,EAAM9N,GAAS0W,EAAM1W,OAAStH,EAAO,gBAC3C,MAAsB,mBAARoV,EAAqBA,EAAIzX,KAAM4P,EAAOvN,GAASoV,GAIrE,IAAMvR,EAAO9G,KAAK6J,QAAQ2C,SAE1B,OAAOxM,KAAKkhB,UACR1U,SAAW1F,WACe0J,EAAO3O,EAAOoB,GACpB,OAAO6D,EAAM0J,EAAO3O,EAAOoB,IAAUuJ,EAAUgE,EAAO3O,EAAOoB,IAElEuJ,KAIvBpM,sBAAIwM,0BAAJ,WACI,OAAOuU,EAAqB,aAAcnhB,uCAG9CI,sBAAIwM,8BAAJ,WACI,OAAO5M,KAAKkhB,UAAWzB,YAAa,qCAGxC7S,qBAAA,SAAUuQ,GACN,OAAOnd,KAAKkhB,UAAW/D,cAG3BvQ,oBAAA,SAASyC,GACL,OAAOrP,KAAKkhB,UAAWnS,UAAYM,KAIvCzC,kBAAA,SAAOtK,GACH,OAAOtC,KAAKkhB,UAAWhT,MAAQ5L,KAGnCsK,mBAAA,SAAQtK,GACJ,OAAOtC,KAAKkhB,UACRxS,OAAwB,mBAARpM,EAAqBA,EAAQA,EAAM,SAAAO,GAAK,OAAAA,GAAKA,EAAE6L,UAAW0S,MAKlFxU,gBAAA,SAAKtK,GACD,OAAOtC,KAAKkhB,UACRjC,SAAWjf,KAAK6J,QAAQoV,SAAS1I,OAAQjU,MAKjDsK,gBAAA,SAAKtK,GAUD,OAAOtC,KAAKkhB,UACRhC,WAAalf,KAAK6J,QAAQqV,WAAW3I,OAVzC,SAAwBtP,EAAMH,EAAM8D,EAA8Bf,GAC9D,GAAI7J,KAAKqgB,UAAWpZ,EAAMH,GAAS,CAC/B,IAAMua,EAAU/e,EAAI1B,KAAMgK,EAAQ3D,EAAMjH,KAAKiD,MAC7C,YAAmB,IAAZoe,EAAqBva,EAAO9G,KAAK2f,QAAS0B,EAASva,EAAM8D,EAAQf,GAG5E,OAAO/C,OAQf8F,yBAAA,SAAchF,GACV,OAAO5H,KAAKkhB,UAAW9B,aAAexX,KAI1CgF,mBAAA,SAAQhB,GACJ,IAAM0V,EAAW,IAAIvG,GAAUnP,GAQ/B,OAAO5L,KAAKkhB,UACR/B,eAAiBnf,KAAK6J,QAAQsV,eAAe5I,OAPjD,SAAmCtP,EAAMH,EAAM8D,GAC3C9D,GAAQA,EAAK6D,SAAW2W,EAAS7P,YAAa7G,EAAQ9D,GAEtDG,GAAQA,EAAK0D,SAAW2W,EAASnQ,UAAWvG,EAAQ3D,QAS5D7G,sBAAIwM,uBAAJ,WACI,OAAO5M,sCAGX4M,qBAAA,SAAU/C,GACN,IAAM0X,EAAS,IAAI3U,EAAwB5M,KAAK6J,SAEhD,OADA1G,GAAQoe,EAAO1X,QAASA,GACjB0X,GAGX3U,kBAAA,SAAO/J,GACH,OAAO7C,KAAKkhB,UAAWrf,MAAQgB,EAAGoK,kBAAmB,UAe7DtB,SAASxL,UAAU0B,MAAQ,SAAUgB,GACjC,OAAO,IAAI+J,IAA0BC,KAAO7M,KAAM6B,MAAQgB,EAAGoK,kBAAmB,KAGpF7M,OAAOwB,eAAgB+J,SAASxL,UAAW,cACvCuE,eAAQ,OAAO1E,KAAKwhB,aAAexhB,KAAK2M,IAAI8S,YAC5CxI,aAAKpU,GAAK7C,KAAKwhB,YAAc3e,KAGjCzC,OAAOwB,eAAgB+J,SAASxL,UAAW,UACvCuE,eAAQ,OAAO1E,KAAK2M,IAAI8U,UAG5BrhB,OAAOwB,eAAgB+J,SAASxL,UAAW,OACvCuE,eAEI,OAAO1E,KAAK0hB,MAAQ,IAAI9U,IACpBC,KAAO7M,KACP6B,MAAQ7B,KAAK4O,WAAWyQ,aACxBpS,sBAAoD,IAAjCjN,KAAK4O,WAAWyQ,gBAI3CpI,aAAKpV,GAAU7B,KAAK0hB,KAAO7f,KCpJ/B,mBAAA,4DA6CA,OA7C8BmU,OAC1B2L,mBAAA,WACI,OAAO,IAAIpU,MAGfoU,oBAAA,SAAS1a,EAAYxD,EAAGmH,GACpB,GAAY,MAAR3D,GAAgBA,aAAgBsG,KAAO,OAAOtG,EAElD,IAAMoG,EAAO,IAAIE,KAAMtG,GACjBwG,EAAYJ,EAAKG,UAMvB,OAJIC,IAAcA,GACdzN,KAAKiM,KAAM,OAAQ,6BAA8BhF,EAAM2D,GAGpDyC,GAGXsU,qBAAA,SAAUnR,EAAO3O,EAAOoB,GACpB,GAAa,MAATpB,EAAe,CACf,IAAM4L,EAAY5L,EAAM2L,UACxB,GAAIC,IAAcA,EAAY,OAAOxK,EAAO,qBAIpD0e,mBAAA,SAAQ9f,GAAU,OAAOA,GAASA,EAAM+f,eAExCD,sBAAA,SAAWle,EAAG3D,GAAM,OAAS2D,GAAKA,EAAE+J,cAAkB1N,GAAKA,EAAE0N,YAE7DmU,mBAAA,SAAQ9f,EAAO+I,EAA8Bf,GAEzC,OAAO7J,KAAK8Z,eAAqB,IAAVjY,EAAmB7B,KAAKqf,eAAiBxd,OAAO,EAAQ+I,EAAQf,IAG3F8X,qBAAA,SAAU9f,EAAO+I,EAAQf,EAASsI,GACpB,IAAAlP,YACAiI,eACFpE,EAAOoE,EAAYjI,GAG3B,OAAOjD,KAAKqgB,UAAWvZ,EAAOoE,EAAYjI,GAASjD,KAAK8Z,UAAWjY,EAAOiF,EAAM8D,EAAQf,KAG5F8X,kBAAA,SAAO9f,GAAU,OAAOA,GAAS,IAAI0L,KAAM1L,EAAM2L,YACjDmU,oBAAA,gBA5C0BtT,SA+CzBO,WAAa+S,GAElB,IAAME,GAAiB,sCAEvB,4DAaA,OAbgC7L,OAC5B8L,oBAAA,SAAS7a,GACL,GAAoB,iBAATA,EAAmB,CAC1B,IAAM8a,EAASF,GAAchU,KAAM5G,GACnC,GAAI8a,EACA,OAAO,IAAIxU,KAAML,OAAQ6U,EAAQ,KAIzC,OAAOJ,GAASxhB,UAAUwf,QAAQnc,MAAOxD,KAAMuB,YAGnDugB,mBAAA,SAAQjgB,GAAU,OAAOA,GAAS,SAAUA,EAAM2L,mBAZtBmU,mBAehC,4DAEA,OAFmC3L,OAC/BgM,mBAAA,SAAQngB,GAAU,OAAOA,GAASA,EAAM2L,cADTmU,WAW5B7F,iBAAkBvO,MACrB0U,WACIvd,eACI,OAAO,IAAIkI,IACPC,KAAOU,KACPqB,WAAakT,OAKzBrU,WACI/I,eACI,OAAO,IAAIkI,IACPC,KAAOU,KACPqB,WAAaoT,SAWxBE,GAAa,0BACbA,GAAa,2BACbA,GAAa,4BACbA,GAAa,6BACbA,GAAa,mCAEdP,GAASxhB,UAAUwf,QAAU,SAAU9d,GACnC,OAAgB,MAATA,GAAiBA,aAAiB0L,KAAO1L,EAAQ,IAAI0L,KAAM4U,GAAetgB,MAIzF,IAAMkM,IAAmB,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IACtCH,GAAiB,oJCnHvB,4DAsBA,OAtBiCoI,OAG7BoM,mBAAA,WACI,OAAO,IAAIpiB,KAAK6M,MAGpBuV,oBAAA,SAASnb,GACL,OAAe,MAARA,GAAgBA,aAAgBjH,KAAK6M,KAAO5F,EAAO,IAAIjH,KAAK6M,KAAM5F,IAG7Emb,mBAAA,SAAQvgB,GACJ,OAAOA,GAASA,EAAM6M,OAAS7M,EAAM6M,SAAW7M,GAGpDugB,kBAAA,SAAOvgB,GACH,OAAO,IAAI7B,KAAK6M,KAAM7M,KAAK0O,OAAQ7M,KAGvCugB,sBAAA,SAAW3e,EAAG3D,GACV,OAAO2D,IAAM3D,MApBYuO,IAwBjC1C,SAASxL,UAAUyO,WAAawT,GAOhC,mBAAA,4DA+BA,OA/BmCpM,OAG/BqM,oBAAA,aACAA,mBAAA,WAAW,OAAOriB,KAAK6M,QAEvBwV,mBAAA,SAAQxgB,GAAU,OAAOA,GAEzBwgB,oBAAA,SAASpb,GAAS,OAAe,MAARA,EAAeA,EAAOjH,KAAK6M,KAAM5F,IAE1Dob,sBAAA,SAAW5e,EAAG3D,GAAM,OAAO2D,IAAM3D,GAEjCuiB,kBAAA,SAAOxgB,GAAU,OAAOA,GAExBwgB,mBAAA,SAAQxgB,EAAO+I,EAA8Bf,GACzC,OAAO7J,KAAK8Z,eAAqB,IAAVjY,EAAmB7B,KAAK6B,MAAQA,OAAO,EAAQ+I,EAAQf,IAGlFwY,qBAAA,SAAUxgB,EAAO+I,EAAQf,EAASsI,GACpB,IAAAlP,YACAiI,eACFpE,EAAOoE,EAAYjI,GAE3B,OAAO6D,KAAWoE,EAAYjI,GAASjD,KAAK8Z,UAAWjY,EAAOiF,EAAM8D,EAAQf,KAGhFwY,uBAAA,WACSriB,KAAK6J,QAAQoD,mBACdjN,KAAK6B,MAAQ7B,KAAK6M,YA5BKwB,YAiC3BO,WAAazB,OAAOyB,WAAayT,GAIzC,mBAAA,4DAuBA,OAvBiCrM,OAG7BsM,mBAAA,WACI,OAAO,GAGXA,oBAAA,SAASrb,EAAMH,EAAO8D,GAClB,IAAM2X,EAAc,MAARtb,EAAeA,EAAOjH,KAAK6M,KAAM5F,GAM7C,OAJIsb,IAAQA,GACRviB,KAAKiM,KAAM,OAAQ,+BAAgChF,EAAM2D,GAGtD2X,GAGXD,qBAAA,SAAU9R,EAAO3O,EAAOoB,GAEpB,GAAa,MAATpB,IAAkB2gB,SAAU3gB,GAC5B,OAAOoB,EAAO,2BApBOof,WAyB1BzT,WAAa0T,GAkBpBG,GAAQ7T,WAAa0T,GACrBpV,OAAOwV,QAAUD,GAGK,oBAAXE,SACPA,OAAOF,QAAUvV,OAAOwV,SAO5B,mBAAA,4DAiBA,OAjB+B1M,OAC3B4M,mBAAA,SAAQ/gB,GAAU,OAAOA,GACzB+gB,oBAAA,aACAA,mBAAA,WAAU,UAEVA,oBAAA,SAAS3b,EAAMH,EAAM8D,GAEjB,OAAY,MAAR3D,GAAgBjF,MAAMoT,QAASnO,GAAgBA,GAEnDjH,KAAKiM,KAAM,OAAQ,wDAAyDhF,EAAM2D,QAKtFgY,kBAAA,SAAO/gB,GACH,OAAOA,GAASA,EAAM8R,YAfCtF,UAmBzBO,WAAagU,GAEnB,mBAAA,4DASA,OATgC5M,OAC5B6M,mBAAA,WAAU,UAEVA,oBAAA,SAAS5b,EAAMH,EAAM8D,GACjB,OAAY,MAAR3D,GAAgC,iBAATA,EAA2BA,GAEtDjH,KAAKiM,KAAM,OAAQ,0DAA2DhF,EAAM2D,WAN5DyD,WAWzBO,WAAaiU,GAIpB,mBAAA,4DAiBA,OAjBkC7M,OAE9B8M,mBAAA,SAAQjhB,KACRihB,mBAAA,WAAU,OAAOC,IACjBD,oBAAA,aAEAA,oBAAA,SAAS7b,EAAMH,EAAM8D,GAEjB,OAAY,MAAR3D,GAAgC,mBAATA,EAA6BA,GAExDjH,KAAKiM,KAAM,OAAQ,6BAA8BhF,EAAM2D,GAEhDmY,KAIXD,kBAAA,SAAOjhB,GAAS,OAAOA,MAhBOwM,aAmBzBO,WAAakU,GgB5Ld,IAAAtb,KAAID,KACNqK,WAAMyM,aAUN2E,GAAiBtS,gBAAcC,OAASD,gBAAcuS,qBAG5D,4DA8HA,OA9HgCjN,OAG3BkN,mBAAA,SAAQrhB,EAAO+I,EAA8Bf,GAC1C,IAAMwL,EAAIxL,EAAQkH,MAAQ/Q,KAAK+Q,MAAOlP,EAAO+I,QAC/B,IAAV/I,EAAmB7B,KAAKqf,eAAiBxd,EAGvCgB,EAAI7C,KAAK8Z,UAAWzE,OAAG,EAAQzK,EAAQf,GAE7C,OADA7J,KAAKkgB,aAAcrd,OAAG,EAAQ+H,EAAQf,GAC/BhH,GAGXqgB,qBAAA,SAAUrhB,EAAO+I,EAAQf,EAASsI,GACxB,IAEFoL,EAFEnc,EAAMpB,KAAKiD,KAAQiI,eACnBpE,EAAOoE,EAAY9J,GAIzB,GAAImc,EAASvd,KAAK6gB,aAAc/Z,EAAMjF,EAAOgI,GAAY,CACrD,IAAMiX,EAAoBha,EAAKwM,mBAAoBiK,EAAQ1T,GAC3D,SAAIiX,IACI3O,EACAA,EAAOjC,KAAM4Q,GAGbA,EAAkB3V,OAAQP,IAG1B5K,KAAKwe,mBAMjB,IAAMvX,EAAOjH,KAAK8Z,UAAWjY,EAAOiF,EAAM8D,EAAQf,GAGlD,OAFAqB,EAAY9J,GAAQ6F,IAEhBjH,KAAKqgB,UAAWpZ,EAAMH,KAEtB9G,KAAKkgB,aAAcjZ,EAAMH,EAAM8D,EAAQf,IAEhC,IAMfqZ,kBAAA,SAAOrhB,EAAuB+I,GAE1B,IAAK/I,GAASA,EAAM4H,SAAWmB,EAAS,OAAO/I,EAG/C,IAAMkP,EAAQlP,EAAMkP,QAEpB,OADAsN,GAAQzT,EAAQmG,EAAO/Q,KAAKiD,MACrB8N,GAIXmS,mBAAA,aAEAA,yBAAA,SAAcpc,EAAsBG,EAAY4C,GAE5C,GAAI/C,GAAgB,MAARG,KAAmBA,aAAgBjH,KAAK6M,MAChD,OAAO5F,GAIfic,oBAAA,SAASjc,EAAYH,EAAY8D,EAA8Bf,GAC3D,GAAY,MAAR5C,GAAgBA,aAAgBjH,KAAK6M,KAAO,OAAO5F,EAGvD,IAAMkc,EAAiB,IAAMnjB,KAAK6M,KAAe5F,EAAM4C,EAASmZ,IAKhE,OAFA3E,GAAQzT,EAAQuY,EAAgBnjB,KAAKiD,MAE9BkgB,GAIXD,qBAAA,SAAU1S,EAAO3O,EAAOoB,KAGxBigB,mBAAA,WACI,OAAO,MAIXA,0BAAA,SAAejc,EAAsBH,EAAsB8D,EAA8Bf,GACjF/C,IAEIA,EAAK2C,SAAWmB,GAChBgH,GAAMhH,EAAQ9D,GACd+C,EAAQyH,OAASxK,EAAK0K,WAGtBjK,GAAKT,EAAMA,EAAK8J,iBAAkB5Q,KAAK+O,UAAWnE,IAItD3D,GAEIA,EAAKwC,SAAWmB,GAChBpD,GAAIP,EAAMA,EAAK2J,iBAAkB5Q,KAAK+O,UAAWnE,IAK7DsY,oBAAA,SAAStY,EAA8B/I,GAC/BA,GACA7B,KAAKkgB,kBAAc,EAAQre,EAAO+I,OAM1CsY,uBAAA,SAAYrZ,GAER,IAAM0U,EAAYve,KAClBA,KAAK+O,UAAY/O,KAAKwe,iBAAmB,SAAUnN,EAAOxH,EAASsU,GAC/Dne,OAASme,GAAane,KAAKye,qBAAsBF,EAAUtb,KAAM4G,IACjEnE,GAEJmE,EAAQsV,eAAelZ,QAASjG,KAAKghB,mBA5Hb3S,gBfmBP+U,EAA+BC,GACpD,IAAMC,EAAeC,KAAyCH,EAAsBI,IAC9EC,EAAgBC,KAAwCJ,EAAcD,GAEtEM,EAAoBC,EAAmBH,GAE7C,aACOE,GACH5Y,YAAc,IAAI4Y,EAAkBrY,eAAgBmY,GACpDI,iBAAmBzjB,OAAO4D,KAAMyf,GAAgB7X,IAAK,SAAAxK,GAAO,OAAAqiB,EAAeriB,KAC3Ewa,WAAa2H,KAAwCD,EAAc,SAAAzgB,GAAK,OAAAA,EAAEihB,6BAC1EC,QAAUC,GAAcP,IACrBQ,GAAYR,GACZS,GAAkBZ,IACrB5Z,WAAa6Z,KAAiBE,EAAe,SAAAU,GAAW,OAAAA,EAAQta,QAAQsT,cgBvCnEiH,IACTC,YAAA,WACI,OAAO7a,EAAkBxJ,OAAUA,KAAKod,WAG5CkH,cAAuBza,GAAvB,wBAAuBA,MACnB,IAAMsT,EAAWnd,KAAKqkB,cAChBE,EAAOvkB,KAAK0O,SAElB,OAAO8V,EACHxkB,KACAA,KAAKykB,QACDtH,EAAS9c,OAAQkkB,EAAM1a,EAAS7J,MAChCmd,EAASI,OAAQvd,KAAKgS,GAAIuS,EAAM1a,EAAS7J,MAC7C6J,EAEA,SAAA0T,GACI1H,EAAKoB,IAAKsG,MAAUrP,OAAQ,GAASrE,OAKjD6a,eAAO7a,GAAP,WACI,oBADGA,MACI2a,EACHxkB,KACAA,KAAKqkB,cAAcM,KAAM3kB,KAAKgS,GAAInI,EAAS7J,MAC3C6J,EAEA,SAAA0a,GAAQ,OAAA1O,EAAKoB,IAAKsN,MAAQrW,OAAQ,GAASrE,OAInD+a,iBAAS/a,GAAT,WACI,oBADKA,MACE2a,EACHxkB,KACAA,KAAKqkB,cAAcO,QAAS5kB,KAAKgS,GAAInI,EAAS7J,MAC9C6J,EAEA,WACY,IAAAN,eACJA,EACAA,EAAWsb,OAAQhP,EAAMhM,GAGzBgM,EAAKrE,cfzCnBhP,GAAaR,MAAM7B,UACnB0D,GAAczD,OAAOD,UAcrBwP,IACFoB,eAAOlP,GAAS,OAAOA,GACvB+J,aAAKkZ,EAAqBxiB,GAAO,UACjCuiB,gBAAQhjB,GAAS,OAAOA,IAIf6N,IAET9D,IAAA,SAAKkZ,EAAqBC,GACtB,IAAIC,KAEJ,IAAK,IAAI5jB,KAAO0jB,EAAKjjB,MAAO,CACxB,IAAMojB,EAAUF,EAAUD,EAAKpS,GAAItR,GAAOA,QAC9B,IAAZ6jB,GAAwBD,EAAO9U,KAAM+U,GAGzC,OAAOD,GAGXH,OAAA,SAAQpf,EAAarE,GAEjB,cADOqE,EAAQrE,GACRqE,GAIXsL,MAAA,SAAOtL,GACH,IAAI8b,KAEJ,IAAK,IAAIngB,KAAOqE,EACZ8b,EAAQngB,GAAQqE,EAAQrE,GAG5B,OAAOmgB,IAKF9R,IAETsB,MAAA,SAAOmU,GACH,OAAOA,EAAMvR,SAGjBkR,OAAA,SAAQK,EAAenkB,GAEnB,OADAmkB,EAAMrQ,OAAQ9T,EAAG,GACVmkB,GAIXtZ,IAAA,SAAKkZ,EAAqBC,GAItB,IAAK,IAHC/jB,EAAS8jB,EAAKjjB,MAAMb,OACpBgkB,EAAShjB,MAAOhB,GAEbD,EAAI,EAAG+R,EAAI,EAAG/R,EAAIC,EAAQD,IAAK,CACpC,IAAMokB,EAAIJ,EAAUD,EAAKpS,GAAI3R,GAAKA,QAC5B,IAANokB,IAAkBH,EAAQlS,KAAQqS,GAKtC,OAFAH,EAAOhkB,SAAW8R,IAAOkS,EAAOhkB,OAAS8R,GAElCkS,kBgBjEX,WAAoBnjB,GAAA7B,WAAA6B,EAwIxB,OA7IWujB,QAAP,SAAmBvjB,EAAWoV,GAC1B,OAAO,IAAIoO,GAAYxjB,EAAOoV,IAUlC7W,sBAAIglB,mCAAJ,WAA8B,OAAOplB,KAAKuK,uCAK1C6a,qBAAA,SAAU9J,GAAV,WACI,OAAO,IAAIgK,GAAWtlB,KAAM,SAAC6C,GACzByY,EAASzY,GACTgT,EAAKoB,IAAKpU,MAKlBzC,sBAAIglB,yBAAJ,WAAA,WACI,MAA6B,kBAAfplB,KAAK6B,OACf0jB,QAAUvlB,KAAK6B,MACf2jB,SAAW,SAAAhlB,GAAK,OAAAqV,EAAKoB,IAAK7J,QAAS5M,EAAEW,OAAOokB,aAE5C1jB,MAAQ7B,KAAK6B,MACb2jB,SAAW,SAAAhlB,GAAK,OAAAqV,EAAKoB,IAAKzW,EAAEW,OAAOU,0CAK3CujB,0BAAA,SAAeviB,GACX7C,KAAKiX,IAAKpU,IAIduiB,mBAAA,SAAQtL,EAA4BtZ,GAChC,IAAMyG,EAAO6S,EAAW9Z,KAAK+Q,QAASvQ,QAC7B,IAATyG,GAAmBjH,KAAKiX,IAAKhQ,IAIjCme,iBAAA,SAAM9J,GAAN,WACI,OAAO,IAAIgK,GAAWtlB,KAAM,SAAA6C,GACxB,IAAMoE,EAAOqU,EAASzY,EAAGgT,EAAKhU,YACrB,IAAToF,GAAmB4O,EAAKoB,IAAKhQ,MAKrCme,mBAAA,SAAQtL,GAAR,WACI,OAAO,SAAAtZ,GAAK,OAAAqV,EAAK0H,OAAQzD,EAAWtZ,KAGxC4kB,mBAAA,SAAQK,GACJ,OAAO,IAAIC,GAAY1lB,KAAMylB,IAGjCL,oBAAA,SAAS/F,GACL,OAAO,IAAIsG,GAAa3lB,KAAMqf,GAAgB,KAIlD+F,qBAAA,SAA+BH,GAC3B,OAAO,IAAIW,GAAc5lB,KAAMilB,IAInCG,iBAAA,WACI,IAAMF,EAAQzV,GAAasB,MAAO/Q,KAAK6B,OACvCG,MAAM7B,UAAU+P,KAAK1M,MAAO0hB,EAAO3jB,WACnCvB,KAAKiX,IAAKiO,IAIdE,oBAAA,WACI,IAAMF,EAAQzV,GAAasB,MAAO/Q,KAAK6B,OACvCG,MAAM7B,UAAU8F,QAAQzC,MAAO0hB,EAAO3jB,WACtCvB,KAAKiX,IAAKiO,IAIdE,mBAAA,WACI,IAAMF,EAAQzV,GAAasB,MAAO/Q,KAAK6B,OACvCG,MAAM7B,UAAU0U,OAAOrR,MAAO0hB,EAAO3jB,WACrCvB,KAAKiX,IAAKiO,IAMdE,gBAAA,SAAKL,GACD,OAAOc,GAAS7lB,KAAK6B,OAAQ+J,IAAK5L,KAAM+kB,IAK5CK,qBAAA,SAAUhkB,GACE,IAAAS,aACJikB,EAAID,GAAShkB,GAEjB7B,KAAKiX,IAAK6O,EAAEjB,OAAQiB,EAAE/U,MAAOlP,GAAST,KAK1CgkB,eAAA,SAAIhkB,GACA,OAAO,IAAI2kB,GAAQ/lB,KAAMoB,IAG7BgkB,kBAAA,WACU,IAAAvjB,aACN,OAAOgkB,GAAShkB,GAAQkP,MAAOlP,IAInCujB,iBAAA,WAGI,IAAK,IAFDvV,KAEK9O,EAAI,EAAGA,EAAIQ,UAAUP,OAAQD,IAAK,CACvC,IAAMK,EAAeG,UAAWR,GAChC8O,EAAOzO,GAAQ,IAAI2kB,GAAQ/lB,KAAMoB,GAGrC,OAAOyO,GAMXuV,kBAAA,SAAOY,EAA4Bzb,GAK/B,OAJKvK,KAAKuK,OAAUyb,EAAWhmB,KAAK6B,SAChC7B,KAAKuK,MAAQA,GAASyb,EAAUzb,OAAS0b,IAGtCjmB,0BAOX,WAAa6B,EAAWoV,GAAxB,MACItB,YAAO9T,gBACPgU,EAAKoB,IAAMA,IAEnB,OAPqCjB,OACjCqP,gBAAA,SAAKxiB,QAD4BuiB,mBAYjC,WAAac,EAAoBjP,GAAjC,MACItB,YAAOuQ,EAAOrkB,aACdgU,EAAKoB,IAAMA,EAEH,IAAA1M,iBACJA,IAAQsL,EAAKtL,MAAQA,KAEjC,OAVoCyL,OAChCsP,gBAAA,SAAKziB,QAD2BuiB,mBAahC,WAAoBc,EAA6BT,GAAjD,MACI9P,YAAOuQ,EAAOrkB,QAAU4jB,gBADR5P,SAAAqQ,EAA6BrQ,cAAA4P,IAOrD,OARgCzP,OAK5B0P,gBAAA,SAAK7iB,GACD7C,KAAKkmB,OAAOjP,IAAKpU,EAAI7C,KAAKylB,YAAc,UANhBL,mBAW5B,WAAoBc,EAA6B7G,GAAjD,MACI1J,YAAuB,MAAhBuQ,EAAOrkB,oBADEgU,SAAAqQ,EAA6BrQ,eAAAwJ,IAOrD,OARiCrJ,OAK7B2P,gBAAA,SAAK9iB,GACD7C,KAAKkmB,OAAOjP,IAAKpU,EAAI7C,KAAKqf,aAAe,UANhB+F,mBAW7B,WAAoBc,EAA6BjB,GAAjD,MACItP,YAAOuQ,EAAOrkB,MAAMhB,QAASokB,IAAa,gBAD1BpP,SAAAqQ,EAA6BrQ,UAAAoP,IAcrD,OAfkCjP,OAK9B4P,gBAAA,SAAK/iB,GAAL,WACQoE,EAAOmG,QAASvK,GAEpB,GAAI7C,KAAK6B,QAAUoF,EAAM,CACrB,IAAI5E,EAAcrC,KAAKkmB,OAAOrkB,MAC1BskB,EAAYtjB,EAAIR,EAAIkU,OAAQvW,KAAKilB,SAAY5iB,EAAImM,OAAQ,SAAAoG,GAAM,OAAAA,IAAOiB,EAAKoP,UAE/EjlB,KAAKkmB,OAAOjP,IAAKkP,QAZKf,IAiB3Ba,GAAe,+BAOlB,WAAqBC,EAA6B9kB,GAAlD,MACIuU,YAAOuQ,EAAOrkB,MAAOT,iBADJyU,SAAAqQ,EAA6BrQ,MAAAzU,IAiBtD,OAlBoC4U,OAKhC+P,mBAAA,WACI/lB,KAAKkmB,OAAOE,SAAepmB,KAAKoB,MAIpC2kB,gBAAA,SAAKljB,GAAL,WACQ7C,KAAK6B,QAAUgB,GACf7C,KAAKkmB,OAAO3I,OAAQ,SAAA1b,GAEhB,OADAA,EAAOgU,EAAKzU,KAAQyB,EACbhB,QAdaujB,IfnNvBiB,IAETC,OAAA,SAAQllB,GACJ,OAAOmlB,GAAWC,GAAexmB,MAAQA,KAAMoB,IAInDqlB,SAAA,SAAUxd,EAAeY,GACrB,OAAO,IAAI6c,GAAgB1mB,KAAMiJ,EAAMY,IAI3C8c,QAAA,WACI,IAAM9W,EAAQ2W,GAAexmB,MAE7B,GAAIuB,UAAUP,OACV,IAAK,IAAID,EAAI,EAAGA,EAAIQ,UAAUP,OAAQD,IAClCwlB,GAAW1W,EAAO7P,KAAMuB,UAAWR,QAGvC,CACQ,IAAAmK,kBAER,IAAK,IAAI9J,KAAO8J,OACU,IAAtBA,EAAY9J,IAAoBmlB,GAAW1W,EAAO7P,KAAMoB,GAIhE,OAAOyO,mBAuBX,WAAoBjF,EAA8BiB,EAAMhK,GAAxD,MACI8T,YAAO9T,gBADSgU,SAAAjL,EAA8BiL,OAAAhK,IAmBtD,OApBgCmK,OAK5BjG,gBAAA,SAAKlN,GACD7C,KAAK4K,OAAQ5K,KAAK6L,MAAShJ,GAK/BzC,sBAAI2P,yBAAJ,WACI,YAAuB,IAAhB/P,KAAK4mB,OACA5mB,KAAK4K,OAAOkT,mBAAoB9d,KAAK6L,MACrC7L,KAAK4mB,YAGrB,SAAW/jB,GACP7C,KAAK4mB,OAAS/jB,sCAlBUuiB,mBAuB5B,WAAoBxa,EAA8B3B,EAAsBY,GAAxE,MACI8L,YAAO/K,EAAOic,QAAS5d,iBADP4M,SAAAjL,EAA8BiL,OAAA5M,EAAsB4M,UAAAhM,IAyB5E,OA1BoCmM,OAOhC5V,sBAAIsmB,yBAAJ,WAKI,YAJoB,IAAhB1mB,KAAK4mB,SACL5mB,KAAK4mB,OAAS5mB,KAAK4K,OAAOkc,oBAAqB9mB,KAAKiJ,OAAU,MAG3DjJ,KAAK4mB,YAGhB,SAAW/jB,GACP7C,KAAK4mB,OAAS/jB,mCAGlBzC,sBAAIsmB,gCAAJ,WACI,OAAO1mB,KAAK4K,OAAOsT,8CAGvBwI,gBAAA,SAAK7jB,GACD7C,KAAK4K,OAAOmc,QAAS/mB,KAAKiJ,KAAMpG,EAAG7C,KAAK6J,aAxBZub,ICrE5BjiB,KAAQ6jB,KAAShP,MAWrBiP,GAAuB,iBAgRvB,WAAavI,EAAgB1L,GAA7B,MACI2C,YAAOsR,YAjOXpR,cAAuB,EAkOnBA,EAAK3K,cAEL,IAAMrB,EAAUmJ,MACVhH,GAAWnC,EAAQqE,MAAQ2H,EAAK3H,MAAOwQ,EAAU7U,GAAa6U,cAEhE1G,GAAIO,MAAQ,GAAI2O,GAAWrR,EAAM7J,GAErC6J,EAAKxK,oBAAsBwK,EAAK3K,WAAa,IAAI2K,EAAK9J,WAAY8J,EAAM7J,EAAQnC,GAEhFgM,EAAK4F,WAAYiD,EAAU1L,GAEvB6C,EAAK/G,cAAe+G,EAAK/G,aAAaqC,UAAW0E,EAAMA,KAyJnE,OAxZ4BG,OAAfwK,EAEFA,WAAP,SAAiBpQ,EAAY/L,KAOtBmc,WAAP,SAAiB9U,GACb,OAAY1L,KAAKwc,QAAStR,WAAaQ,KA+B3C8U,+BAAA,WAAsB,OAAO,IAAIxgB,KAAKsL,eAAgBtL,KAAKqL,sBAM3DjL,sBAAIogB,mCAAJ,WAAuB,OAAOxgB,KAAKkL,4CAKnC9K,sBAAIogB,2BAAJ,WACI,IAAIa,EAAUrhB,KAAKuL,mBAEnB,IAAK8V,EAAS,CACV,IAAMva,EAAO9G,KAAKqL,oBAClBgW,KAIA,IAAiB,IAFX9b,OAAe2F,mCAEJ1F,EAAAxF,KAAK6jB,iBAALhe,WAAAA,KAAZ,IAAIgG,OACCzK,EAAMyK,EAAK5I,KACbpB,EAAQqJ,EAAY9J,GAEpByK,EAAKwU,UAAWxe,EAAOiF,EAAM1F,MAC7BigB,EAASjgB,GAAQS,GAIzB7B,KAAKuL,mBAAqB8V,EAG9B,OAAOA,mCAGXb,8BAAA,SAAmB2G,GACf,IAAKA,EAAO,QAAOnnB,KAAKuT,cAAepQ,MAAYnD,KAAKqhB,SAExD,IAAItK,EAAKsK,GAAyB,EAC9B+F,EAAepnB,KAAK+d,aAAe/d,KAAKqL,oBAAsBrL,KAAKkL,WACnE2D,EAAe7O,KAAK+K,YAExB,IAAK,IAAIc,KAAQsb,EACRtY,EAAWhD,GAAOwU,UAAW+G,EAAKvb,GAAUkL,EAAMoQ,EAAMtb,OAC5DwV,IAAYA,OAAgBxV,GAASkL,GAG1C,OAAOsK,GAGXb,uBAAA,SAAYpf,GACA,IAAAiK,2BACR,QAAKA,IAEEjK,EACCpB,KAAK+K,YAAa3J,GAAMif,UAAWrgB,KAAKkL,WAAY9J,GAAOiK,EAAqBjK,KAC/E4lB,GAAShnB,KAAKqhB,WAG3Bb,qBAAA,SAAUpf,GACN,GAAIA,EAAK,CACG,IAAAiK,2BACR,GAAIA,EAAsB,OAAOA,EAAqBjK,GAG1D,OAAO,MAGXof,kBAAA,WACI,OAAkB,MAAXxgB,KAAKgS,IAGhBwO,gBAAA,SAAKpf,GACD,YAAsB,GAAfpB,KAAMoB,IAKjBof,kBAAA,SAAOpf,EAAcyI,GACjB,IAAMhI,EAAQ7B,KAAMoB,GAEpB,OADApB,KAAKiX,UAAM1R,EAAEnE,QAAQ,SAAYkQ,OAAQ,GAASzH,IAC3ChI,SAIX2e,kBAAA,SAAO3W,GAAP,WACUwd,EAAUxd,GAAWA,EAAQwd,QAMnC,OAJArnB,KAAKqT,YAAa,WACdwC,EAAKyR,YAAazR,EAAK3K,WAAY,SAAErJ,EAAOT,GAAS,OAAAyU,EAAMzU,GAAQimB,EAAU,UAAO,KACrFxd,GAEI7J,MAIXwgB,qBAAA,WACI,IAAMpP,EAAcpR,KAAKyJ,OAIzB,OAAOzJ,KAAK2J,UAAYyH,EAAQA,GAASA,EAAM3H,QAWnDrJ,sBAAIogB,sBAAJ,WAA6B,OAAOxgB,KAAKkL,WAAYlL,KAAKmQ,kBAC1D,SAAQtN,GAAuBud,EAAcpgB,KAAMA,KAAKmQ,YAAatN,oCAgBrE2d,wBAAA,SAAa9U,EAAY4J,GACb,IACJrF,EADIlF,mBAGR,IAAK,IAAIgO,KAAQrN,EAAO,CACpB,IAAMe,EAAO1B,EAAagO,GAEtBtM,EACA6I,EAAU5J,EAAOqN,GAAQA,EAAMtM,IAG/BwD,IAAaA,MACbA,EAAQC,KAAM,IAAK6I,QAIvB9I,GACAjQ,KAAKiM,KAAM,OAAQ,cAAegE,EAAQnE,KAAK,0BAC3CZ,WAAaQ,KAKzB8U,iBAAA,SAAMlL,EAAoD1O,GAChD,IAAAtE,OAAkB,IAAZsE,EAAqB,SAAEyO,EAAGvH,GAAO,OAAAwH,EAAS1U,KAAMgG,EAASyO,EAAGvH,IAAMwH,EACxEpK,kBAEN,IAAK,IAAM9J,KAAOpB,KAAKkL,WAAY,CAC/B,IAAMrJ,EAAQqJ,EAAY9J,QACZ,IAAVS,GAAmBS,EAAKT,EAAOT,KAK3Cof,iBAAA,WACI,IAAMxc,KAIN,OAFAhE,KAAK6c,KAAM,SAAEhb,EAAOT,GAAS,YAAU,IAAVS,GAAoBmC,EAAKkM,KAAM9O,KAErD4C,GAIXwc,mBAAA,WACI,OAAOxgB,KAAK4L,IAAK,SAAA/J,GAAS,OAAAA,KAI9B2e,oBAAA,WAAW,UAGXA,mBAAA,SAAQ/C,GAAQ,OAAOA,GAGvB+C,qBAAA,SAAUxU,gBAAAA,MAIN,IAAiB,IAHX5I,SAGWmkB,wBAAA1hB,WAAAA,KAAZ,IAAIgG,OACCzK,EAAMyK,EAAK5I,KACjBpB,EAAQmK,EAAQ5K,GAEhBgC,EAAUhC,QAAkB,IAAVS,EAAmBgK,EAAKwT,eAAiBxd,EAG/D,OAAOuB,GAwBXod,uBAAA,SAAYxU,EAASnC,KAGrB2W,kBAAA,SAAO3W,gBAAAA,MACH,IAAM8M,EAAc,IAAU3W,KAAKC,YAAcD,KAAKkL,YAAc6F,OAAQ,IAI5E,OAFIlH,EAAQ2d,WAAW7Q,EAAKgH,cAAgB3d,KAAKqJ,YAE1CsN,GAIX6J,sBAAA,WAAqB,OAAOxgB,KAAK+Q,SAGjCyP,4BAAA,SAAiBiH,GAAjB,WACQzmB,EAAY,EAWhB,OATAhB,KAAKsnB,YAAatnB,KAAKkL,WAAY,SAAErJ,EAAOoB,EAAMsb,GAC9C,IAAMhU,EAAQgU,EAAU/R,SAAUqJ,EAAMhU,EAAOoB,GAE3CsH,IACAkd,EAAQxkB,GAASsH,EACjBvJ,OAIDA,GAIXwf,gBAAA,SAAKpf,GACD,OAAOpB,KAAMoB,IAQjBof,mBAAA,WAAA,WACU+D,KAaN,OAXAvkB,KAAKsnB,YAAatnB,KAAKkL,WAAY,SAAErJ,EAAOT,EAAcmE,OAAEmJ,WAExD,QAAc,IAAV7M,EAAkB,CAElB,IAAM6lB,EAAShZ,EAAO9N,KAAMiV,EAAMhU,EAAOT,QAG1B,IAAXsmB,IAAoBnD,EAAMnjB,GAAQsmB,MAIvCnD,GAIX/D,kBAAA,SAAO/C,EAAM5T,GAET,OAAO7J,KAAKyO,OAAQgP,IAOxB+C,oBAAA,SAASvd,EAAepB,EAAagI,GAArC,WA8CI,OA5CA7J,KAAKqT,YAAa,WAQd,IAAK,IAPCpK,EAAQhG,EAAK+E,MAAO,KACtB2f,EAAQ1e,EAAKjI,OAAS,EACtB6K,EAAQ5C,EAAM0e,GAEdnX,EAAQqF,EAGH9U,EAAI,EAAGA,EAAI4mB,EAAG5mB,IAAK,CACxB,IAAMK,EAAM6H,EAAMlI,GAGdkG,EAAUuJ,EAAM9L,IAAM8L,EAAM9L,IAAKtD,GAAQoP,EAAOpP,GAGpD,IAAK6F,EAAM,CACP,IAAM4H,EAAY2B,EAAMzF,YACxB,IAAI8D,EAYC,OAVD,IAAI+Y,EAAW/Y,EAAWzN,GAAMf,SAG5BwJ,GAAWA,EAAQwd,SAAWO,EAAS7c,aACvC6c,EAASC,MAAOhe,GAGpB2G,EAAOpP,GAAQ6F,EAAO2gB,EAM9BpX,EAAQvJ,EAIRuJ,EAAMyG,IACNzG,EAAMyG,UAAM1R,EAAEsG,GAAShK,KAASgI,GAGhC2G,EAAO3E,GAAShK,UAIjB7B,MAIXI,sBAAIogB,8BAAJ,WACI,OAAOxgB,KAAK2J,UAAY,KAAO3J,KAAKyJ,wCAIxC+W,oBAAA,WAAA,WACQxgB,KAAKoc,YAETpc,KAAKsnB,YAAatnB,KAAKkL,WAAY,SAAErJ,EAAOT,EAAKmd,GAC7CA,EAAU/M,QAASqE,EAAMhU,KAG7B8T,YAAMnE,qBAGVgP,iBAAA,SAAMjI,EAAwB+H,EAAehI,GACzCoE,GAAWnE,EAAO,YAAc+H,MAC5BE,OAAWxgB,KACX8nB,yBAA2B9nB,KAAK+K,aAC7BuN,KAIXkI,yBAAA,WACI,OAAO7K,YAAM4K,yBAAkB,UAInCC,+BAAA,SAAoBxU,EAAiBnC,KApZ5B2W,KAlBZhc,GAEG0Y,UAAY,IAGZtM,iBAAmB,SAGnBT,YAAc,OAEjBjL,GAAQkf,GAAeiC,IACvB7M,GACGpW,SAAWkX,GAAWxJ,MACtB5F,WAAaoP,GAAWxJ,MACxBvH,WAAa+Q,GAAWxJ,MACxBiX,WAAazN,GAAWzY,MACxBsO,YAAcmK,GAAWC,cAEhBiG,IAAezT,IA0Z5B5J,GAAQqd,GAAOrgB,UAAWme,IAM1B,kBAMA,OAHI,SAAa1T,EAAiB/H,EAAsBgH,GAChD7J,KAAKgS,GAAKnP,EAAEmP,OAIpBwO,GAAOrgB,UAAU4L,WAAaic,GAE9B,kBAMA,OAHI,SAAanlB,GACT7C,KAAKgS,GAAKnP,EAAEmP,OAIpBwO,GAAOrgB,UAAUmL,eAAiB2c,GAElC,IAAMC,GAAc7Z,GAAQhO,QAASwB,WAAQ,GAAU,MACvD2e,GAAOrgB,UAAU4K,aAAgBiH,GAAKkW,IACtC1H,GAAOrgB,UAAU0jB,kBAAqBqE,IACtC1H,GAAO5R,WAAagS,GC3eZ,IAAAzd,KAAQC,KAEhBod,GAAO3b,SAAW,SAAgCR,GAC9C0I,GAAclI,SAASjE,KAAMZ,KAAMqE,GAGnC,IAAMlC,EAAQnC,mBAEH,4DAEX,OAF2CgW,OAChCmS,QAAQhmB,EADFgmB,KAAhBnjB,GAAgBmjB,IAA0B9jB,EAAU0jB,YAIrD/nB,KAAKmoB,kBAAoBA,EAIrBhmB,EAAM4lB,aAAe1jB,EAAU0jB,aAC/B/nB,KAAK+nB,WAAaI,GAItBC,GAAsBpoB,KAAMkjB,KAGhC1C,GAAOjH,SAAW,SAAUnJ,EAA+B/L,GACvD,IAAMmW,EAAqBnW,EAAUlE,UAG/BoF,0CAAEqW,eAAY9M,iBAAcuZ,qCAClCllB,GAAQnD,KAAKG,UAAWkoB,GAExBjY,EAAWwL,WAAaxY,GAAUgN,EAAWwL,eAAkBA,GAC/DxL,EAAWtB,aAAeA,EAE1B/B,GAAcwM,SAAS3Y,KAAMZ,KAAMoQ,EAAY/L,GAG/CrE,KAAKmoB,kBAAkB3jB,OAAQ4L,EAAW7G,gBAG1CvJ,KAAK+nB,WAAa3X,EAAW2X,WAC7B/nB,KAAK+nB,WAAW5nB,UAAUqQ,MAAQxQ,KAE9BoQ,EAAW+M,WAAWnd,KAAK+nB,WAAW5nB,UAAUid,UAAYhN,EAAW+M,WAG/EqD,GAAO5R,WAAagS,GACpBwH,GAAsB5H,GAAQ0C,ICnDtB,IAAUzc,KAAUD,KAAUgB,KAAID,KAClC4D,aACF6F,GAAUsF,GAAe+H,OAAQ9M,GAAQ+E,GAAe1E,mBA4J1D,WAAuBnM,EACAoF,EACAuH,EACA6B,EACA9B,EACAiC,GALApU,YAAAyF,EACAzF,YAAA6K,EACA7K,WAAAoS,EACApS,aAAAiU,EACAjU,YAAAmS,EACAnS,YAAAoU,EA+C3B,OA5CI5B,mBAAA,SAAQ2L,GAKJ,IAAwB,IAJlB5Y,OAAE4M,WAAQ1M,WACRwY,iBAGgBY,IAAAhZ,WAAAA,KAAfwN,QACOlI,OAAQ1F,GAGpBA,EAAOwL,mBACPwB,GAAqBhN,GAKzB,IAAwB,QAAAqZ,IAAAtZ,WAAAA,KAAnB,IAAI6N,OACL5M,GAAUhB,EAAQ,SAAU4N,EAAY5N,OAAQwY,GAOpD,IAAmB,IAHbqK,OAAElW,UAAO6B,gBAGIsU,IAAAC,WAAAA,KAAV5d,OACLpE,GAAUoE,EAAQ,MAAOA,EAAQnF,EAAQwY,GACzCzX,GAAUf,EAAQ,MAAOmF,EAAQnF,EAAQwY,GAI7C,IAAmB,QAAAwK,IAAAC,WAAAA,KAAd,IAAI9d,OACLpE,GAAUoE,EAAQ,SAAUA,EAAQnF,EAAQwY,GAC5CzX,GAAUf,EAAQ,SAAUmF,EAAQnF,EAAQwY,GAG5Cje,KAAKoU,QACL3N,GAAUhB,EAAQ,OAAQA,EAAQwY,IAGlC7L,EAAMpR,QAAUiT,EAAQjT,SACxByF,GAAUhB,EAAQ,SAAUA,EAAQwY,GAGxCje,KAAK6K,QAAUM,GAAQ1F,EAAQ0Y,SClN/BrT,YAAOK,aAAQF,kBCAfH,YAAOK,aAAQF,kBAGjB6I,IAAkBF,QAAS,GCQzBnN,KAAUD,KACZyE,kBAAaH,YAAOK,aCLlB1E,KACFqE,YAAOK,aAAQF,kBACJ9H,KAAQC,KAErBulB,GAAS,EAiBPhV,GAAQ3R,MAAM7B,UAAUwT,qBAE9B,4DAEA,OAFiCqC,OACtB4S,qBADsB1F,mBAkP7B,WAAa7L,EAA8BxN,EAAkCmD,gBAAlCnD,MAA3C,MACI8L,YAAOgT,mBACP9S,EAAKxF,UACLwF,EAAKvF,SAELuF,EAAKe,WAAcf,EAAKe,gBAEG,IAAvB/M,EAAQ+M,aACRf,EAAKe,WAAa/M,EAAQ+M,WAC1B/M,EAAQ+M,gBAAa,GAGzBf,EAAKrF,MAAcqF,EAAKrF,MAEpB3G,EAAQ2G,QACRqF,EAAKrF,MAAQ3G,EAAQ2G,MACrB3G,EAAQ2G,WAAQ,GAGpBqF,EAAK1F,YAAc0F,EAAKrF,MAAMrQ,UAAUgQ,YAExC0F,EAAKpF,QAAUzD,GAAU,EAErBqK,GAEAwR,GAAqBhT,EADJiT,GAAYjT,EAAMwB,EAASxN,GACPA,GAAS,GAGlDgM,EAAK4F,WAAWjY,MAAOqS,EAAMtU,WAEzBsU,EAAK/G,cAAe+G,EAAK/G,aAAaqC,UAAW0E,EAAMA,KA4QnE,OA5gB4DG,OAA/C+R,EAQTA,yBAAA,SAAc1X,EAAsBxG,GAChC,IACIkf,EAAW,IAAIC,EADIhpB,KAAKC,YAAagpB,SAAUjpB,MAAO6J,QAAQgD,MACrCwD,EAAQxG,GAGrC,OADAkf,EAAOxZ,QAASvP,MACT+oB,GAGJhB,WAAP,SAAiB1jB,GAKb,WAAyBZ,EAAG3D,EAAG6Q,GAC3B5L,EAAKnE,KAAMZ,KAAMyD,EAAG3D,EAAG4Q,gBAAcuS,OAAUtS,EAASD,gBAAcC,OAAS,IAJnF,IAAM5L,EAAO/E,KACbA,KAAKkpB,UAAY,KAMjBvkB,GAAQO,OAAON,SAAUukB,GAEzBA,EAAehpB,UAAYH,KAAKG,UAChCgpB,EAAeva,WAAaga,GAE5B5oB,KAAKopB,KAAOppB,KAAKqpB,OAAcF,EAE/Bpc,GAAclI,SAASjE,KAAMZ,KAAMqE,GACnC+jB,GAAsBpoB,KAAMkjB,KAGzB6E,WAAP,SAAiB3X,EAAmC/L,GAChD,GAAI+L,EAAWkZ,WAAY,CACvB,IAAMzN,EAAY,IAAId,GAAU1W,EAAUlE,UAAU+Q,aACpD2K,EAAUZ,aAAc7K,EAAWkZ,YACnCtpB,KAAKG,UAAU+Q,YAAc2K,EAG7BzL,EAAWwG,aAAa5W,KAAKG,UAAUyW,WAAaxG,EAAWwG,YAEnE7J,GAAcwM,SAAS3Y,KAAMZ,KAAMoQ,IAcvChQ,sBAAI2nB,mCAAJ,WAAuB,OAAO/nB,KAAKqQ,wCAKnCjQ,sBAAI2nB,8BA8CJ,WAAkB,OAAO/nB,KAAK6R,iBA9C9B,SAAgBhP,GAAhB,WACI,cAEeA,GACX,IAAK,SACD7C,KAAK6R,YAAc,SAAEpO,EAAG3D,GACpB,IAAMypB,EAAK9lB,EAAWZ,GAAK2mB,EAAK1pB,EAAW+C,GAC3C,OAAI0mB,IAAOC,EAAY,EAChBD,EAAKC,GAAM,EAAI,GAE1B,MACJ,IAAK,WACgB,IAAb3mB,EAAE7B,OACFhB,KAAK6R,YAAc,SAAEpO,EAAG3D,GACpB,IAAMypB,EAAW1mB,EAAGjC,KAAMiV,EAAMpS,GAAK+lB,EAAW3mB,EAAGjC,KAAMiV,EAAM/V,GAC/D,OAAIypB,IAAOC,EAAY,EAChBD,EAAKC,GAAM,EAAI,GAI1BxpB,KAAK6R,YAAc,SAAEpO,EAAG3D,GAAO,OAAM+C,EAAGjC,KAAMiV,EAAMpS,EAAG3D,IAE3D,MAEJ,QACIE,KAAK6R,YAAc,uCAK/BkW,qBAAA,WACI,OAAO/nB,KAAKypB,SAAYzpB,KAAKypB,OAASzpB,KAAKyJ,OAASzJ,KAAKyJ,OAAOJ,WAAarJ,KAAK2d,gBAMtFoK,yBAAA,SAAcnd,GACV,OAAO,IAAI8e,GAAgB1pB,KAAM4K,IAIrCmd,mBAAA,SAAQ9O,GAAR,WACI,OAAOmM,GAAKvjB,MAAO7B,KAAMiZ,GAAQ,SAAApW,GAAK,OAAAgT,EAAMoD,GAASpW,KAMzDklB,8BAAA,SAAmBnd,EAAYf,EAAmCsU,GAE9D,gBAF2BtU,MAEvBsU,IAAcne,KAAlB,CAEQ,IAAAmQ,mBAEJvF,EAAO2I,WAAYpD,IACnBqD,GAAaxT,KAAKsQ,MAAO1F,GAG7B,IAAMC,EAASC,GAAO9K,MAElBiL,GAAajL,KAAM6J,IAEnBpD,GAAUzG,KAAM,SAAU4K,EAAQf,GAGtCgB,GAAUM,GAAQnL,QAGtB+nB,gBAAA,SAAKrR,GACD,GAAe,MAAXA,EAAJ,CAEA,GAAuB,iBAAZA,EAAsB,CAC7B,IAAM1E,EAAK0E,EAAS1W,KAAKmQ,aACzB,YAAgB,IAAP6B,GAAiBhS,KAAKsQ,MAAO0B,IAAUhS,KAAKsQ,MAAgBoG,EAAS9N,KAG9E,OAAO5I,KAAKsQ,MAAOoG,KAI3BqR,iBAAA,SAAMzS,EAA8C1O,GAIhD,IAAK,IAHCtE,EAAMiT,GAAaD,EAAU1O,GAC7ByJ,cAEGtP,EAAI,EAAGA,EAAIsP,EAAOrP,OAAQD,IAC/BuB,EAAK+N,EAAQtP,GAAKA,IAI1BgnB,kBAAA,SAAOzS,EAAyB1O,GAI5B,IAAK,IAHCtE,EAAMqnB,GAAqBrU,EAAU1O,GACrCyJ,cAEGtP,EAAI,EAAGA,EAAIsP,EAAOrP,OAAQD,IAC/B,IAAKuB,EAAK+N,EAAQtP,GAAKA,GAAM,OAAO,EAGxC,OAAO,GAGXgnB,mBAAA,SAAQzS,EAAyB1O,GACvB,IAAAtE,EAAMqnB,GAAqBrU,EAAU1O,GAG3C,OAAO5G,KAAK4L,IAAK,SAAE/I,EAAG9B,GAAO,OAAAuB,EAAKO,EAAG9B,GAAM8B,OAAI,KAGnDklB,iBAAA,SAAMzS,EAAyB1O,GAI3B,IAAK,IAHCtE,EAAMqnB,GAAqBrU,EAAU1O,GACzCyJ,cAEOtP,EAAI,EAAGA,EAAIsP,EAAOrP,OAAQD,IAC/B,GAAIuB,EAAK+N,EAAQtP,GAAKA,GAAM,OAAOsP,EAAQtP,GAG/C,OAAO,MAGXgnB,iBAAA,SAAMzS,EAAyB1O,GAC3B,OAAOwG,QAASpN,KAAK4pB,KAAMtU,EAAU1O,KAGzCmhB,gBAAA,SAAUzS,EAA2C1O,GAOjD,IAAK,IANCtE,EAAMiT,GAAaD,EAAU1O,GAC7ByJ,cACF2U,EAAShjB,MAAOqO,EAAOrP,QAEvB8R,EAAI,EAEC/R,EAAI,EAAGA,EAAIsP,EAAOrP,OAAQD,IAAK,CACpC,IAAM8B,EAAIP,EAAK+N,EAAQtP,GAAKA,QACtB,IAAN8B,IAAkBmiB,EAAQlS,KAAQjQ,GAKtC,OAFAmiB,EAAOhkB,OAAS8R,EAETkS,GAGX+C,4BAAA,SAAiBN,GAEb,GAAIznB,KAAKyQ,QAAU,OAAO,EAE1B,IAAIoZ,EAAQ,EAUZ,OARA7pB,KAAK6c,KAAM,SAAAjS,GACP,IAAML,EAAQK,EAAOiT,gBACjBtT,IACAkd,EAAQ7c,EAAOhC,KAAQ2B,EACvBsf,OAIDA,GAyCX9B,uBAAA,aAEA3nB,sBAAI2nB,0BAAJ,WAAwB,OAAO/nB,KAAKqQ,OAAOrP,wCAC3C+mB,kBAAA,WAAc,OAAO/nB,KAAKqQ,OAAQ,IAClC0X,iBAAA,WAAa,OAAO/nB,KAAKqQ,OAAQrQ,KAAKqQ,OAAOrP,OAAS,IACtD+mB,eAAA,SAAI+B,GACA,IAAM/X,EAAQ+X,EAAU,EAAIA,EAAU9pB,KAAKqQ,OAAOrP,OAAS8oB,EAC3D,OAAO9pB,KAAKqQ,OAAQ0B,IAIxBgW,kBAAA,SAAOle,gBAAAA,MACH,IAAMwG,EAASrQ,KAAKyQ,QAAUC,gBAAcuS,MAAQjjB,KAAKqQ,OAASrQ,KAAK4L,IAAK,SAAA4E,GAAS,OAAAA,EAAMO,UACrF4F,EAAc,IAAU3W,KAAKC,YAAcoQ,GAAUG,MAAQxQ,KAAKwQ,MAAOoG,WAAa5W,KAAK4W,YAAc5W,KAAKyQ,SAIpH,OAFI5G,EAAQ2d,WAAW7Q,EAAKgH,cAAgB3d,KAAKqJ,YAE1CsN,GAGXoR,mBAAA,WACI,OAAO/nB,KAAKqQ,OAAOzE,IAAK,SAAA4E,GAAS,OAAAA,EAAM9B,YAI3CqZ,gBAAA,SAAK7S,EAA6BrL,GAM9B,gBANCqL,mBAA6BrL,WACH,IAAjBA,EAASuM,KACfpW,KAAKiM,KAAM,OAAQ,oFAAqFpC,GAIxGA,EAAQ2M,MACRxW,KAAKwW,MAAOtB,EAAUrL,OAEtB,CACA,IAAMwJ,EAAcrT,KAAKsT,mBAAoB4B,EAAUrL,GACvDwJ,GAAeA,EAAYlI,SAG/B,OAAOnL,MAUX+nB,wBAAA,SAAagC,GAAb,WACI,GAAIA,EAAS,CACT/pB,KAAKgqB,aAAa,GAElB,IAAMC,EAA4B,mBAAZF,EAAyBA,EAAU,WAAM,OAAA,GAU/D,OARA/pB,KAAKkqB,cACDC,QAAU,SAAA5F,GACN0F,EAAQ1F,IAAU1O,EAAKO,IAAKmO,GAAQrW,OAAQ,EAAM4C,OAAQ,KAG9DmD,QAAU,SAAAjC,GAAM,OAAA6D,EAAKgP,OAAQ7S,KAG1BhS,KAAKqkB,cAAclT,UAAWnR,KAAKkqB,aAAclqB,MAGpDA,KAAKkqB,eACLlqB,KAAKqkB,cAAc5S,YAAazR,KAAKkqB,aAAclqB,MACnDA,KAAKkqB,aAAe,OAOhCnC,kBAAA,SAAO/U,GAAP,wBAAOA,MACH,IAAMnJ,MAAYqE,OAAQ,GAAS8E,GAGnC,OAAOwR,EACHxkB,KAHWA,KAAKqkB,cAIP1J,KAAM9Q,EAAS7J,MACxB6J,EAEA,SAAA0a,GACI,IAAIhiB,EAAesT,EAAKoB,IAAKsN,EAAM6F,IAAElc,OAAQ,GAASrE,IAMtD,OAJIA,EAAQmgB,cACRznB,EAASsT,EAAKmU,YAAangB,EAAQmgB,cAGhCznB,KAKnBwlB,oBAAA,WACI,IAAI/nB,KAAKoc,UAAT,CAIA,IAAmB,IAFbiO,GAAcrqB,KAAKyQ,YAENlL,EAAAvF,KAAKqQ,OAALxK,WAAAA,KAAd,IAAI+E,OACLgH,GAAM5R,KAAM4K,GAERyf,GAAazf,EAAO4G,UAG5BxR,KAAKgqB,aAAa,GAElBrU,YAAMnE,qBAGVuW,kBAAA,SAAO7R,EAA2BrM,gBAAAA,MAC9B,IAAMgB,EAASC,GAAO9K,MAChBsqB,EAAiB9Y,GAASxR,MAYhC,OATIkW,GACA2S,GAAqB7oB,KAAM8oB,GAAY9oB,KAAMkW,EAAYrM,GAAWA,GAAS,GAGjFoB,GAAajL,KAAM6J,GAEnBA,EAAQ+J,QAAUnN,GAAUzG,KAAM,QAASA,KAAMoD,IAAYknB,eAAiBA,GAAkBzgB,IAEhGgB,GAAUM,GAAQnL,MACXA,KAAKqQ,QAIhB0X,gBAAA,SAAK7R,EAA2BrM,gBAAAA,MAC5B,IAAMqL,EAAW4T,GAAY9oB,KAAMkW,EAAYrM,GACzCwJ,EAAcrT,KAAKqQ,OAAOrP,OACpBupB,GAAgBvqB,KAAMkV,EAAUrL,GAChCgf,GAAqB7oB,KAAMkV,EAAUrL,GAEjD,GAAIwJ,EAEA,OADAA,EAAYlI,SACLkI,EAAYjB,OAK3B2V,mBAAA,SAAQrS,EAAoB7L,GACxB,oBADwBA,MACpB6L,EACO1T,MAAMoT,QAASM,GACV8U,GAAYxqB,KAAM0V,EAAc7L,GAChC4gB,GAAWzqB,KAAM0V,EAAc7L,OAQnDke,+BAAA,SAAoB7R,EAA0BrM,gBAAAA,MAC1C,IAAMqL,EAAW4T,GAAY9oB,KAAMkW,EAAYrM,GAE/C,OAAI7J,KAAKqQ,OAAOrP,QACc,IAAnB6I,EAAQgb,OACH0F,GAAgBvqB,KAAMkV,EAAUrL,GAAS,GACzC6gB,GAAgB1qB,KAAMkV,EAAUrL,GAGrCgf,GAAqB7oB,KAAMkV,EAAUrL,IAUpDke,kBAAA,SAAO3mB,GACH,OAAOpB,KAAKqQ,OAAOzE,IAAK,SAAA4E,GAAS,OAAAA,EAAOpP,MAG5C2mB,iBAAA,SAAMle,GACF,gBADEA,MACEgJ,GAAc7S,KAAM6J,GAAW,CAC/B,IAAMgB,EAASC,GAAO9K,MAElBiL,GAAajL,KAAM6J,IACnBpD,GAAUzG,KAAM,OAAQA,KAAM6J,GAGlCgB,GAAUM,GAAQnL,MAGtB,OAAOA,MAIX+nB,iBAAA,SAAKvX,EAAqB3G,GACxB,OAAO7J,KAAKoW,IAAI5F,EAAOrN,IAAQuP,GAAI1S,KAAKgB,QAAS6I,KAInDke,gBAAA,SAAKle,GACH,IAAI2G,EAAQxQ,KAAK0S,GAAG1S,KAAKgB,OAAS,GAElC,OADAhB,KAAK6kB,OAAOrU,MAASc,OAAQ,GAASzH,IAC/B2G,GAKTuX,kBAAA,SAAOjR,EAAwBjN,GAC3B,IAAMhI,EAAQ7B,KAAK0E,IAAKoS,GAExB,OADA9W,KAAK6kB,OAAQ/N,MAAaxF,OAAQ,GAASzH,IACpChI,GAIXkmB,oBAAA,SAAQvX,EAAqB3G,GAC3B,OAAO7J,KAAKoW,IAAI5F,EAAOrN,IAAQuP,GAAI,GAAI7I,KAIzCke,kBAAA,SAAOle,GACL,IAAI2G,EAAQxQ,KAAK0S,GAAG,GAEpB,OADA1S,KAAK6kB,OAAQrU,MAASc,OAAQ,GAASzH,IAChC2G,GAITuX,kBAAA,WACE,OAAOpU,GAAMnQ,MAAMxD,KAAKqQ,OAAQ9O,YAGlCwmB,oBAAA,SAASjR,GACL,IAAMlM,EAAS5K,KAAK0E,IAAKoS,GACzB,OAAO9W,KAAKqQ,OAAOxP,QAAS+J,IAGhCmd,oBAAA,SAASrc,GACL,OAAOA,EAAO1L,KAAKwQ,MAAMrQ,UAAUgQ,cAIvC4X,mBAAA,SAAQvX,EAAWma,GACf,IAAI7jB,EAAOsG,QAASpN,KAAK0E,IAAK8L,IAC1BvJ,OAAkB,IAAX0jB,GAAqB7jB,EAAOsG,QAASud,GAWhD,OATI7jB,IAASG,IACLH,EACA9G,KAAK6kB,OAAQrU,GAGbxQ,KAAKoW,IAAK5F,IAIXvJ,GAGX8gB,iBAAA,SAAMxP,EAAwB+H,EAAeze,GACzC6a,GAAWnE,EAAO,uBAAwBvY,KAAKwQ,MAAMrQ,UAAUogB,mBAAoBvgB,KAAKugB,oBAAsBD,GAC1GsK,SAAW/oB,EACXgpB,kBAAoB7qB,KAAKwQ,MAAMrQ,UAAU4K,eAIjDgd,yBAAA,WACI,OAAOpS,YAAM4K,yBAAkB,cA/F5BwH,aAAanH,GA3aXmH,KAZZvjB,GAEG0Y,UAAY,IACZ1M,MAAQgQ,GACR5P,iBAAmB,UACnBK,kBAAoB,OAEvBuI,GACG5C,WAAa0D,GAAWzY,MACxB2O,MAAQ8J,GAAWC,WACnB+O,WAAahP,GAAWxJ,SAEfiX,IAA+Chb,IAwhB5Dqb,GAAsBL,GAAY7E,IAElC1C,GAAOuH,WAAkBA,GAsBzB,mBACI,WAAoBxe,EAAmBqB,GAAvC,MACI+K,YAAOvI,QAAS7D,EAAW+G,MAAO1F,EAAOhC,oBADzBiN,aAAAtM,EAAmBsM,SAAAjL,IAO3C,OARoCoL,OAKhC0T,gBAAA,SAAK7mB,GACD7C,KAAKuJ,WAAWyN,OAAQhX,KAAK4K,OAAQ/H,OANTuiB,mBS9kBpC,4DAqBA,OArB4BpP,OAExB8U,mBAAA,SAAQjpB,GACJ,OAAOA,GAA0B,iBAAVA,EAAqBA,EAAMmQ,GAAKnQ,GAI3DipB,kBAAA,SAAOjpB,GACH,OAAOA,GAA0B,iBAAVA,EAAqBA,EAAMmQ,GAAKnQ,GAI3DipB,sBAAA,SAAWrnB,EAAoB3D,GAI3B,OAHU2D,IAAyB,MAATA,EAAGuO,GAAavO,EAAaA,EAAGuO,QAChDlS,IAAyB,MAATA,EAAGkS,GAAalS,EAAaA,EAAGkS,MAM9D8Y,qBAAA,SAAUta,EAAO3O,EAAOoB,QApBAoL,IAuB5BmS,GAAOuK,KAAO,SAAeC,GACzB,IAAMC,EAAsBC,GAAgBF,GAO5C,OALiB,IAAIpe,IACjB/K,MAAQ,KACR+M,WAAakc,KAIZpmB,IAAK,SAAUgS,EAA0BzT,GACtC,GAAuB,iBAAZyT,EAAuB,OAAOA,EAGzC,IAAMnN,EAAa0hB,EAAqBjrB,MAClC4K,EAAkB,KAYxB,OATIrB,GAAcA,EAAWvI,SAEzB4J,EAASrB,EAAW7E,IAAKgS,IAAa,KACtC1W,KAAKkL,WAAYjI,GAAS2H,EAG1BA,GAAU5K,KAAK+K,YAAa9H,GAAOid,aAActV,EAAQ,KAAM5K,UAG5D4K,KP1DnBmd,GAAWkB,SAAW,SAAmB+B,GACrC,IAAMhC,EAAWhpB,KAAKkpB,YAAelpB,KAAKkpB,UAAYiC,GAAwBnrB,OAC1EirB,EAAsBC,GAAgBF,GAK1C,OAJe,IAAIpe,IACXC,KAAOmc,IAGCtkB,IACZ,SAAUoR,GAEN,OADCA,GAAQA,EAAKK,cAAgBL,EAAKvG,QAAS0b,EAAqBjrB,OAC1D8V,KAKnB,IAAMF,GAAmBlF,gBAAcuS,MAAQvS,gBAAcqQ,WQtBzD0I,GAAiB,oBAErB,4DAuBA,OAvB2BzT,OACvBoV,qBAAA,WAAqB,OAAOprB,MAG5BorB,gBAAA,SAAKnoB,GAED,IAAIqM,EAAQtP,KAAMiD,GAGlB,OAAIqM,GAAStP,OAASA,KAAK2d,cAAuBrO,EAG3CtP,KAAKyJ,OAASzJ,KAAKyJ,OAAO/E,IAAKzB,GAASjD,KAAK2d,cAAcjZ,IAAKzB,IAG3E7C,sBAAWgrB,gBAAX,WAAqB,OAAO3B,QAC5B,SAAmB4B,GACX5B,IACFA,GAAOjY,UAGTzE,GAAc5M,UAAUwd,cAAgB8L,GAAS4B,sCArB9B7K,OAyBrB8K,OAAS,IAAIF,GCjBJ,OAAA5jB,cAAID,UAAKoD,cAAS6Q,WAAM8B,eAAUjB,oBAAekP,iJAKhE,SAI4B9f,GAKxB,mBAJQ,4DAER,OAFoCuK,OACzBwV,aAAa/f,EADV+f,KAAbhnB,GAAagnB,IAAsBC,aAOxC,SAGuB5oB,GACnB,OAAO,IAAI+J,IAAyB/K,MAAQgB,mBAIhD,SAAmD6oB,GAC/C,OAAY,eAAU,oBAAA7lB,mBAAAA,IAAA6E,kBAClB,IAAInI,EAMJ,OAJAvC,KAAKqT,YAAa,WACd9Q,EAASmpB,EAAOloB,MAAOqS,EAAMnL,KAG1BnI,sB3BDf,SAAiCkZ,GAG7B,WAAgBkQ,GACZC,EAAUD,EAHd,IAAIpc,EAASsc,EAAQD,EAMfhiB,EAA2B,IAAIkiB,QAAS,SAAEC,EAAWC,GAGvDvQ,EADAlM,EAAUwc,EADVF,EAASG,EAEoBxhB,KAOjC,OAJAZ,EAAQY,MAAQ,WACZohB,EAAUA,EAASrc,EAASsc,GAAWA,EAAQ,IAAI3U,MAAO,iBAGvDtN,mQWSX,SAAsB9H,EAAOmqB,GACzB,IAAIA,EAYA,OAAOnqB,EAAM2f,OAVU,oBAAZ/f,SAA2BA,QAAQwqB,YAC1CxqB,QACKwqB,YAAa,cAAepqB,EAAOmqB,GACnCxK,OAAQ3f,EAAOmqB,GAGpBnqB,EAAMmK,KAAM,QAAS,yEAQjC,SAAsBQ,GAClB,OAAOA,EAAKgV"}