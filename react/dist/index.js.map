{"version":3,"file":"index.js","sources":["../src/state.ts","../src/globalState.ts","../../node_modules/tslib/tslib.es6.js","../../node_modules/@linked/value/src/helpers.ts","../../node_modules/@linked/value/src/index.ts","../../node_modules/@linked/react/src/component.ts","../../node_modules/@linked/react/src/hooks.ts","../src/pureRender.tsx","../src/index.ts"],"sourcesContent":["import { useReducer, useRef, useEffect } from 'react'\nimport { Model, Collection, Transactional } from '@type-r/models'\n\nexport const useModel : <M extends typeof Model>( Ctor : M ) => InstanceType<M> = mutableHook( Model => new Mutable( new Model ) );\n\nexport interface CollectionHooks {\n    of<M extends typeof Model>( Ctor : M ) : Collection<InstanceType<M>>\n    ofRefs<M extends typeof Model>( Ctor : M ) : Collection<InstanceType<M>>\n    subsetOf<C extends Collection>( collection : C ) : C\n}\n\nexport const useCollection : CollectionHooks = {\n    of : mutableHook( Model => new Mutable( new ( Collection.of( Model ) )() ) ),\n    ofRefs : mutableHook( Model => new Mutable( new ( Collection.ofRefs( Model ) )() ) ),\n    subsetOf : mutableHook( collection => new Mutable( collection.createSubset([]) ) )\n}\n\nclass Mutable {\n    _onChildrenChange : Function = void 0\n    _changeToken : object\n\n    getStore(){\n        return ( this.value as any )._defaultStore;\n    }\n\n    constructor(\n        public value : Transactional\n    ){\n        this._changeToken = (value as any)._changeToken;\n        (value as any)._owner = this;\n        (value as any)._ownerKey || ( (value as any)._ownerKey = 'reactState' );\n    }\n}\n\nfunction mutableReducer( mutable : Mutable ){\n    // Suppress extra change events.\n    if( mutable._changeToken === (mutable.value as any)._changeToken ) return mutable;\n\n    const copy = new Mutable( mutable.value );\n    copy._onChildrenChange = mutable._onChildrenChange;\n    \n    return copy;\n}\n\nfunction mutableHook( create : ( x : any ) => Mutable ) : any {\n    return ( init : any ) : Transactional => {\n        // Get the model instance.\n        const [ mutable, forceUpdate ] = useReducer( mutableReducer, init, create );\n\n        // TODO: mutable.store = useContext( Store )???\n    \n        useEffect( () => {\n            mutable._onChildrenChange = obj => forceUpdate( obj );\n            return () => mutable.value.dispose();\n        }, emptyArray );\n    \n        return mutable.value as any;\n    }\n}\n\nconst emptyArray = [];","import { useEffect, useReducer } from 'react'\nimport { Transactional } from '@type-r/models';\n\n// Force component update when some global model or collection change.\nexport function useChanges( instance : Transactional ){\n    const forceUpdate = useForceUpdate();\n\n    useEffect( () => {\n        function onChange( x ){\n            forceUpdate( x );\n        }\n\n        instance.onChanges( onChange );\n        return () => instance.offChanges( onChange );\n    }, emptyArray );\n}\n\nconst emptyArray = [];\n\nexport function useForceUpdate(){\n    return useReducer( transactionalUpdate, null )[ 1 ];\n}\n\nfunction transactionalUpdate( _changeToken : object, modelOrCollection : Transactional ){\n    return ( modelOrCollection as any )._changeToken;\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Select appropriate helpers function for particular value type.\n */\nexport interface IterableLink {\n    value : any\n    at( key : number | string ) : any\n}\n\nexport type Iterator = ( link : any, key : string | number ) => any;\n\nexport interface Helper {\n    map( link : IterableLink, iterator : Iterator ) : any[]\n    clone( obj : any ) : any,\n    remove( obj : any, key : string | number ) : any\n}\n\nconst ArrayProto = Array.prototype,\n      ObjectProto = Object.prototype;\n\nexport function helpers( value ) : Helper {\n    if( value && typeof value === 'object' ){\n        switch( Object.getPrototypeOf( value ) ){\n            case ArrayProto  : return arrayHelpers;\n            case ObjectProto : return objectHelpers;\n        }\n    }\n\n    return dummyHelpers;\n}\n\n// Do nothing for types other than Array and plain Object.\nconst dummyHelpers : Helper = {\n    clone( value ){ return value; },\n    map( link : IterableLink, fun ){ return []; },\n    remove( value ){ return value; }\n};\n\n// `map` and `clone` for plain JS objects\nexport const objectHelpers : Helper = {\n    // Map through the link to object\n    map( link : IterableLink, iterator : Iterator ) : any[] {\n        let mapped = [],\n            { value } = link\n\n        for( let key in value ){\n            if( value.hasOwnProperty( key ) ){\n                const element = iterator( link.at( key ), key );\n                element === void 0 || ( mapped.push( element ) );    \n            }\n        }\n\n        return mapped;\n    },\n\n    remove( object : {}, key : string ) : {} {\n        delete object[ key ];\n        return object;\n    },\n\n     // Shallow clone plain JS object\n    clone( object : {} ) : {} {\n        return { ...object };\n    }\n};\n\n// `map` and `clone` helpers for arrays.\nexport const arrayHelpers : Helper = {\n    // Shallow clone array\n    clone( array : any[] ) : any[] {\n        return array.slice();\n    },\n\n    remove( array : any[], i : number ) : any[] {\n        array.splice( i, 1 );\n        return array;\n    },\n\n    // Map through the link to array\n    map( link : IterableLink, iterator : Iterator ) : any[] {\n        const length = link.value.length,\n              mapped = Array( length );\n\n        for( var i = 0, j = 0; i < length; i++ ){\n            const y = iterator( link.at( i ), i );\n            y === void 0 || ( mapped[ j++ ] = y );\n        }\n\n        mapped.length === j || ( mapped.length = j );\n\n        return mapped;\n    }\n};","/**\n * Advanced React links for purely functional two-way data binding\n *\n * MIT License, (c) 2016 Vlad Balin, Volicon.\n */\nimport { arrayHelpers, helpers } from './helpers';\n\nexport * from './helpers'\n\n/** \n * `Linked` class is an abstract linked value - the value, the function to update this value, and its validation error.\n * The enclosed value is considered as immutable.\n */ \nexport abstract class Linked<T>{\n    /** Validation error. Usually is a string with error text, but can hold any type. */ \n    error : any = void 0\n    \n    /** Set linked value */ \n    abstract set( x : T ) : void\n\n    constructor( public value : T ){}\n\n    /** EXPERIMENTAL: Support useRef interface. */ \n    get current(){ return this.value; }\n    set current( x : T ){ this.set( x ); }\n\n    // Private accessor for whenChanged. Uniform with Type-R models and collections API.\n    protected get _changeToken(){\n        return this.value;\n    }\n\n    /** Produce the new link executing the given function before the link value will be updated. */\n    onChange( handler : ( x : T ) => void ) : Linked<T> {\n        return new ClonedValueLink( this, ( x : T ) => {\n            handler( x );\n            this.set( x );\n        });\n    }\n\n    /** Produce the new link which transform the value before `set` with a given function. */\n    pipe( handler : Linked.Transform<T> ) : Linked< T > {\n        return new ClonedValueLink( this, x =>{\n            const next = handler( x, this.value );\n            next === void 0 || this.set( next );\n        } );\n    }\n\n    /** \n     * Create React component props for the <input> component.\n     * \n     * <input { ...link.props } />\n     */ \n    get props(){\n        return typeof this.value === 'boolean' ? {\n            checked : this.value,\n            onChange : e => this.set( Boolean( e.target.checked ) as any )\n        }:{\n            value : this.value,\n            onChange : e => this.set( e.target.value )\n        };\n    }\n\n    /** Update the linked value using given transform function. */ \n    update( transform : Linked.Transform<T>, e? : Object ) : void {\n        const next = transform( this.clone(), e );\n        next === void 0 || this.set( next );\n    }\n\n    // Create UI event handler function which will update the link with a given transform function.\n    action( transform : Linked.Transform< T > ) : Linked.EventHandler {\n        return e => this.update( transform, e );\n    }\n\n    equals( truthyValue : T ) : Linked<boolean> {\n        return new EqualsValueLink( this, truthyValue );\n    }\n\n    enabled( defaultValue? : T ) : Linked<boolean> {\n        return new EnabledValueLink( this, defaultValue || \"\" );\n    }\n\n    // Array-only links methods\n    contains<E>( this : Linked<E[]>, element : E ) : Linked<boolean>{\n        return new ContainsRef( this, element );\n    }\n\n    push<E>( this : Linked<E[]>, ...args : E[] ) : void;\n    push(){\n        const array = arrayHelpers.clone( this.value );\n        Array.prototype.push.apply( array, arguments );\n        this.set( array );\n    }\n\n    unshift<E>( this : Linked<E[]>, ...args : E[] ) : void;\n    unshift() : void {\n        const array = arrayHelpers.clone( this.value );\n        Array.prototype.unshift.apply( array, arguments );\n        this.set( array );\n    }\n\n    \n    splice( this : Linked<any[]>, start : number, deleteCount? : number ) : void;\n    splice() : void {\n        const array = arrayHelpers.clone( this.value );\n        Array.prototype.splice.apply( array, arguments );\n        this.set( array );\n    }\n\n    // Array and objects universal collection methods\n    map<E, Z>( this : Linked<E[]>, iterator : ( link : PropValueLink<E, number>, idx : number ) => Z ) : Z[];\n    map<E, Z>( this : Linked<{[ key : string ] : E }>, iterator : ( link : PropValueLink<E, string>, idx : string ) => Z ) : Z[];\n    map( iterator ) {\n        return helpers( this.value ).map( this, iterator );\n    }\n\n    removeAt<E>( this : Linked<E[]>, key : number ) : void;\n    removeAt<E>( this : Linked<{ [ key : string ] : E }>, key : string ) : void;\n    removeAt( key ){\n        const { value } = this,\n            _ = helpers( value );\n\n        this.set( _.remove( _.clone( value ), key ) );\n    }\n\n    at<E>( this : Linked<E[]>, key : number ) : PropValueLink<E, number>;\n    at<K extends keyof T, E extends T[K]>( key : K ) : PropValueLink<E, K>;\n    at( key ){\n        return new PropValueLink( this, key );\n    }\n\n    clone() : T {\n        let { value } = this;\n        return helpers( value ).clone( value );\n    }\n\n    /**\n     * Convert link to object to the object of links. Optionally filter by \n     */\n    pick< K extends keyof T >( ...keys : K[]) : {[ P in K ]: Linked<T[P]>}\n    pick() {\n        let links = {}, keys = arguments.length ? arguments : Object.keys( this.value );\n\n        for( let i = 0; i < keys.length; i++ ){\n            const key : string = keys[ i ];\n            links[ key ] = new PropValueLink( this, key );\n        }\n\n        return links;\n    }\n\n    /**\n     * Convert link to object to the object of links.\n     * Memorises the result, subsequent calls are cheap.\n     */\n    get $() : T extends object ? Linked.Hash<T> : never {\n        if( !this._value$ ){\n            let links : Linked.Hash<any> = this._value$ = {},\n                { value } = this;\n\n            for( let key in value ){\n                if( value.hasOwnProperty( key ) ){\n                    links[ key ] = new PropValueLink( this, key );\n                }\n            }\n        }\n\n        return this._value$ as any;\n    }\n\n    private _value$ : object\n\n    /**\n     * Validate link with validness predicate and optional custom error object. Can be chained.\n     */\n    check( whenValid : Linked.Validator<T>, error? : any ) : this {\n        if( !this.error && !whenValid( this.value ) ){\n            this.error = error || whenValid.error || defaultError;\n        }\n\n        return this;\n    }\n}\n\nexport namespace Linked {\n    export interface Validator< T >{\n        ( value : T ) : boolean\n        error? : any\n    }    \n\n    export type Transform< T > = ( value : T, event? : {} ) => T\n    export type EventHandler = ( event : {} ) => void\n\n    export type Hash<T extends object = any> = {\n        [K in keyof T] : Linked<T[K]>\n    }\n\n    /** Create linked value out of its value and the set function */ \n    export function value<T>( value : T, set : ( x : T ) => void ) : Linked<T>{\n        return new CustomValueLink( value, set );\n    }\n\n    /**\n    * Unwrap object with links, returning an object of a similar shape filled with link values.\n    */\n    export function getValues<T extends object>( links : Linked.Hash<T> ) : T {\n        return unwrap( links, 'value' ) as any;\n    }\n\n    /**\n     * Unwrap object with links, returning an object of a similar shape filled with link errors.\n     */\n    export function getErrors<T extends object>( links : Linked.Hash<T> ) : { [ name in keyof T ] : any } {\n        return unwrap( links, 'error' ) as any;\n    }\n\n    /**\n     * Return true if an object with links contains any errors.\n     */\n    export function hasErrors<T extends object>( links : Linked.Hash<T> ) : boolean {\n        for( let key in links ){\n            if( links.hasOwnProperty( key ) && links[ key ].error ){\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n    * Assing links with values from the source object.\n    */\n   export function setValues<T extends object>( links : Linked.Hash<T>, source : T ) : void {\n        if( source ){\n            for( let key in links ){\n                const sourceKey = trim( key );\n                if( source.hasOwnProperty( sourceKey ) ){\n                    const sourceVal = source[ sourceKey ];\n                    sourceVal === void 0 || links[ key ].set( sourceVal );\n                }\n            }    \n        }\n    }\n\n}\n\nclass CustomValueLink< T > extends Linked< T > {\n    set( x ){}\n\n    constructor( value : T, set : ( x : T ) => void ){\n        super( value );\n        this.set = set;\n    }\n}\n\nclass ClonedValueLink< T > extends Linked< T > {\n    set( x ){}\n\n    constructor( parent : Linked< T >, set : ( x : T ) => void ){\n        super( parent.value );\n        this.set = set;\n\n        const { error } = parent;\n        if( error ) this.error = error;\n    }\n}\n\nclass EqualsValueLink extends Linked< boolean > {\n    constructor( public parent : Linked< any >, public truthyValue ){\n        super( parent.value === truthyValue );\n    }\n\n    set( x : boolean ) : void {\n        this.parent.set( x ? this.truthyValue : null );\n    }\n}\n\nclass EnabledValueLink extends Linked< boolean > {\n    constructor( public parent : Linked< any >, public defaultValue ){\n        super( parent.value != null );\n    }\n\n    set( x : boolean ){\n        this.parent.set( x ? this.defaultValue : null );\n    }\n}\n\nclass ContainsRef extends Linked< boolean > {\n    constructor( public parent : Linked< any >, public element : any ){\n        super( parent.value.indexOf( element ) >= 0 );\n    }\n\n    set( x : boolean ){\n        var next = Boolean( x );\n\n        if( this.value !== next ){\n            var arr : any[] = this.parent.value,\n                nextValue = x ? arr.concat( this.element ) : arr.filter( el => el !== this.element );\n\n            this.parent.set( nextValue );\n        }\n    }\n}\n\nconst  defaultError = 'Invalid value';\n\n/**\n * Link to array or object element enclosed in parent link.\n * Performs purely functional update of the parent, shallow copying its value on `set`.\n */\nexport class PropValueLink< E, K > extends Linked< E > {\n    constructor( private parent : Linked< any >, public key : K ){\n        super( parent.value[ key ] );\n    }\n\n    remove(){\n        this.parent.removeAt( <any>this.key );\n    }\n\n    // Set new element value to parent array or object, performing purely functional update.\n    set( x : E ) : void {\n        if( this.value !== x ){\n            this.parent.update( value => {\n                value[ this.key ] = x;\n                return value;\n            } );\n        }\n    };\n}\n\nfunction unwrap( links : Linked.Hash, field : string) : object {\n    const values = {};\n\n    for( let key in links ){\n        if( links.hasOwnProperty( key ) ){\n            const value = links[ key ][ field ];\n            if( value !== void 0 ){\n                values[ trim( key ) ] = value;\n            }\n        }\n    }\n\n    return values;\n}\n\nfunction trim( key : string ){\n    return key[ 0 ] === '$' ? key.slice( 1 ) : key;\n}","import * as React from 'react'\nimport { Linked } from '@linked/value'\n\nexport type LinksCache< S, X extends keyof S> = {\n    [ K in X ] : Linked< S[ K ] >\n}\n\nexport interface DataBindingSource< S >{\n    linkAt< K extends keyof S>( key : K ) : Linked< S[ K ] >\n    linkAll<K extends keyof S>( ...keys : K[] ) : LinksCache< S, K >\n    $at< K extends keyof S>( key : K ) : Linked< S[ K ] >\n    state$<K extends keyof S>( ...keys : K[] ) : LinksCache< S, K >\n}\n\nexport abstract class LinkedComponent< P, S > extends React.Component< P, S > implements DataBindingSource< S > {\n    links : LinksCache< S, keyof S > = null;\n\n    // @deprecated use `this.$at( key )`\n    linkAt<K extends keyof S>( key : K ) : Linked<S[K]>{\n        return this.$at( key );\n    }\n\n    // Get the link to the state member with the given key.\n    $at<K extends keyof S>( key : K ) : Linked<S[K]>{\n        const value = this.state[ key ],\n        cache = this.links || ( this.links = {} as any ),\n        cached = cache[ key ];\n\n        return cached && cached.value === value ?\n                    cached :\n                    cache[ key ] = new StateLink( this, key, value );\n    }\n\n    // @deprecated use `this.state$()`\n    linkAll<K extends keyof S>( ...keys : K[] ) : LinksCache< S, K >\n    linkAll(){\n        return this.state$.apply( this, arguments );\n    }\n\n    /**\n     * Get the object with links to the elements of the component's state.\n     * const state$ = this.state$();\n     * \n     * Get the links to the given list of state elements.\n     * const state$ = this.state$( 'a', 'b', 'c' );\n     */ \n    state$<K extends keyof S>( ...keys : K[] ) : LinksCache< S, K >;\n    state$( ...args : ( keyof S )[] ){\n        const { state } = this,\n            cache = this.links || ( this.links = <any>{} ),\n            keys = args.length ? args : <( keyof S )[]>Object.keys( state );\n\n        for( let key of keys ){\n            const value = state[ key ],\n                cached = cache[ key ];\n\n            if( !cached || cached.value !== value ) {\n                cache[ key ] = new StateLink( this, key, value );\n            }\n        }\n\n        return cache;\n    }\n}\n\nexport class StateLink< P, S, K extends keyof S > extends Linked< S[ K ] > {\n    constructor( public component : LinkedComponent< P, S >, public key : K, value : S[ K ] ){\n        super( value );\n    }\n\n    set( x : S[ K ] ) : void {\n        const attrs = <Pick<S, K>> {};\n        attrs[ this.key ] = x;\n        this.component.setState( attrs );\n    }\n}","import { helpers, Linked } from '@linked/value';\nimport { useEffect, useRef, useState } from 'react';\n\n\nclass LinkedUseState<T> extends Linked<T> {\n    // Set the component's state value.\n    set( x : T | ( ( x : T ) => T ) ) : void {}\n\n    update( fun : ( x : T, event? : Object ) => T, event? : Object ) : void {\n        // update function must be overriden to use state set\n        // ability to delay an update, and to preserve link.update semantic.\n        this.set( x => {\n            const value = helpers( x ).clone( x ),\n                result = fun( value, event );\n\n            return result === void 0 ? x : result;\n        });\n    }\n\n    constructor(\n        value : T,\n        set : ( x : T | ( ( x : T ) => T ) ) => void\n    ){\n        super( value );\n        this.set = set;\n    }\n}\n\n/**\n * Create the ref to the local state.\n */\nexport function useLink<S>( initialState : S | (() => S) ){\n    const [ value, set ] = useState( initialState );\n    return new LinkedUseState( value, set );\n}\n\nexport { useLink as useLinked, useSafeLink as useSafeLinked, useBoundLink as useSyncLinked, useSafeBoundLink as useSafeSyncLinked };\n\n/**\n * Create the link to the local state which is safe to set when component is unmounted.\n * Use this for the state which is set when async I/O is completed.\n */\nexport function useSafeLink<S>( initialState : S | (() => S) ){\n    const [ value, set ] = useState( initialState ),\n            isMounted = useIsMountedRef();\n\n    return new LinkedUseState( value, x => isMounted.current && set( x ) );\n}\n\n/**\n * Returns the ref which is true when component it mounted.\n */\nexport function useIsMountedRef(){\n    const isMounted = useRef( true );\n    \n    useEffect( () => (\n        () => isMounted.current = false\n    ), []);\n\n    return isMounted;\n}\n\n/**\n * Create the link to the local state which is bound to another \n * value or link in a single direction. When the source changes, the link changes too.\n */\nexport function useBoundLink<T>( source : T | Linked<T>) : Linked<T> {\n    const value = source instanceof Linked ? source.value : source,\n          link = useLink( value );\n\n    useEffect(() => link.set( value ), [ value ]);\n\n    link.action\n    return link;\n}\n\n/**\n * Create the safe link to the local state which is synchronized with another \n * value or link in a single direction.\n * When the source change, the linked state changes too.\n */\nexport function useSafeBoundLink<T>( source : T | Linked<T> ) : Linked<T> {\n    const value = source instanceof Linked ? source.value : source,\n          link = useSafeLink( value );\n \n    useEffect(() => link.set( value ), [ value ]);\n\n    return link;\n}\n\n/**\n * Persists links in local storage under the given key. \n * Links will be loaded on component's mount, and saved on unmount.\n * @param key - string key for the localStorage entry.\n * @param state - links to persist wrapped in an object `{ lnk1, lnk2, ... }`\n */\nexport function useLocalStorage( key : string, state : Linked.Hash ){\n    // save state to use on unmount...\n    const stateRef = useRef<Linked.Hash>();\n    stateRef.current = state;\n\n    useEffect(()=>{\n        const savedData = JSON.parse( localStorage.getItem( key ) || '{}' );\n        Linked.setValues( stateRef.current, savedData );\n\n        return () =>{\n            const dataToSave = Linked.getValues( stateRef.current );\n            localStorage.setItem( key, JSON.stringify( dataToSave ) );\n        }\n    },[]);\n}\n\n/**\n * Wait for the promise (or async function) completion.\n * Execute operation once when mounted, returning:\n * - `false` while the I/O operation is pending;\n * - `true` if I/O is complete without exception;\n * - `exception` object if I/O promise failed.\n * \n * const isReady = useIO( async () => {\n *      const data = await fetchData();\n *      link.set( data );\n * });\n */\nexport function useIO( fun : () => Promise<any>, condition : any[] = [] ) : boolean | any {\n    // Counter of open I/O requests. If it's 0, I/O is completed.\n    // Counter is needed to handle the situation when the next request\n    // is issued before the previous one was completed.\n    const $isReady = useSafeLink<[ number, any ]>( null );\n\n    useEffect(()=>{\n        // function in set instead of value to avoid race conditions with counter increment.\n        $isReady.set( state => {\n            const [ x, res ] = state || [ 0, null ];\n            return [ x + 1, res ]\n        });\n\n        fun()\n            .then( () => $isReady.set( ([ x, res ]) => [ x - 1, null ] ))\n            .catch( e => $isReady.set( ([ x, res ]) => [ x - 1, e ] ))\n    }, condition );\n\n    // `null` is used to detect the first render when no requests issued yet,\n    // but the I/O is not completed.\n    const { value } = $isReady;\n    return value === null || value[ 0 ] ? false : ( value[ 1 ] || true );\n}\n\n// Return an array of values to be used in useEffect hook.\nexport function whenChanged( ...objs : any[] ) : any[];\nexport function whenChanged( a, b, c, d ) : any[] {\n    const { length } = arguments;\n    switch( length ){\n        case 1: return [ extractChangeToken( a ) ];\n        case 2: return [ extractChangeToken( a ), extractChangeToken( b ) ];\n        case 3: return [ extractChangeToken( a ), extractChangeToken( b ), extractChangeToken( c ) ];\n        \n        default:\n            const array = [ extractChangeToken( a ), extractChangeToken( b ), extractChangeToken( c ), extractChangeToken( d ) ];\n            \n            for( let i = 4; i < length; i++ ){\n                array.push( extractChangeToken( arguments[ i ] ) );\n            }\n\n            return array;\n    }\n}\n\nfunction extractChangeToken( x : any ){\n    return x && x._changeToken !== void 0 ? x._changeToken : x;\n}","import React, { ComponentType, Component } from 'react'\nimport { InferAttrs, attributes, Transactional, Linked } from '@type-r/models';\n\n/**\n * Create the pure-render version of component\n * @param props props types definition using Type-R notation\n * @param React React component\n */\nexport function pureRenderProps<T extends object>( props : T, Comp : ComponentType<InferAttrs<T>> ) : ComponentType<InferAttrs<T>> {\n    const { prototype } = attributes( props ),\n          { _attributes } = prototype as any,\n          keys = Object.keys( props );\n\n    const createVector = new Function( `props`, `\n        return [\n            ${ keys.map( key =>\n                propForType( _attributes[ key ].type, key )\n            ).join( ', ')}\n        ]\n    `);\n\n    const compareVector = new Function( `props`, `vector`,`\n        return ${ keys.map( ( key, idx ) =>\n            `vector[${idx}] !== ( ${propForType( _attributes[ key ].type, key )} )`\n        ).join( ' || ')};\n    `);\n\n    class PureRenderWrapper extends Component<InferAttrs<T>> {\n        private _vector : any[]\n\n        constructor( props ){\n            super( props );\n            this._vector = createVector( this.props );\n        }\n\n        shouldComponentUpdate( nextProps ){\n            return compareVector( nextProps, this._vector );\n        }\n\n        componentDidUpdate(){\n            this._vector = createVector( this.props );\n        }\n\n        render(){\n            return <Comp {...this.props} />;\n        }\n    }\n\n    return PureRenderWrapper as any;\n}\n\nfunction propForType( type : Function, key : string ) : string {\n    return  type.prototype instanceof Transactional ? `props.${key} && props.${key}._changeToken` :\n            type === Date ? `props.${key} && props.${key}.getTime()` :\n            type.prototype instanceof Linked ? `props.${key} && props.${key}.value` :\n            `props.${key}`;\n}","import { useEffect } from 'react'\nimport { Messenger } from '@type-r/models'\n\nexport * from './state'\nexport * from './globalState'\nexport * from '@linked/react'\nexport * from './pureRender'\n\n/**\n * Listen to event sent my Messenger.trigger( event, a1, a2, ... )\n * @param source\n * @param event \n * @param handler\n */\nexport function useEvent( source : Messenger, event : string, handler : Function ){\n    useEffect( () => {\n        source.on( event, handler );\n\n        return () => {\n            source.off( event, handler );\n        }\n    }, [] );\n}"],"names":["useModel","mutableHook","Model","Mutable","useCollection","of","Collection","ofRefs","subsetOf","collection","createSubset","this","value","_defaultStore","_changeToken","_owner","_ownerKey","mutableReducer","mutable","copy","_onChildrenChange","create","init","_a","forceUpdate","useEffect","obj","dispose","emptyArray","useForceUpdate","useReducer","transactionalUpdate","modelOrCollection","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","__assign","assign","t","s","i","n","arguments","length","call","apply","ArrayProto","ObjectProto","helpers","getPrototypeOf","arrayHelpers","objectHelpers","dummyHelpers","Linked","clone","map","link","fun","remove","iterator","mapped","key","element","at","push","object","array","slice","splice","j","y","x","set","handler","ClonedValueLink","_this","next","checked","onChange","e","Boolean","target","transform","update","truthyValue","EqualsValueLink","defaultValue","EnabledValueLink","ContainsRef","unshift","_","PropValueLink","links","keys","_value$","whenValid","error","defaultError","CustomValueLink","unwrap","source","sourceKey","trim","sourceVal","tslib_1.__extends","_super","parent","arr","nextValue","concat","filter","el","indexOf","removeAt","field","values","React.Component","LinkedComponent","$at","state","cache","cached","StateLink","state$","_i","args","keys_1","attrs","component","setState","LinkedUseState","event","result","useLink","initialState","useSafeLink","isMounted","useIsMountedRef","current","useRef","useBoundLink","useSafeBoundLink","extractChangeToken","propForType","type","Transactional","Date","props","Comp","_attributes","createVector","Function","join","compareVector","idx","_vector","Component","PureRenderWrapper","nextProps","React","instance","onChanges","offChanges","on","off","condition","$isReady","then","catch","stateRef","savedData","JSON","parse","localStorage","getItem","setValues","dataToSave","getValues","setItem","stringify","a","c"],"mappings":"4TAGaA,EAAqEC,EAAa,SAAAC,GAAS,OAAA,IAAIC,EAAS,IAAID,KAQ5GE,EAAkC,CAC3CC,GAAKJ,EAAa,SAAAC,GAAS,OAAA,IAAIC,EAAS,IAAMG,aAAWD,GAAIH,OAC7DK,OAASN,EAAa,SAAAC,GAAS,OAAA,IAAIC,EAAS,IAAMG,aAAWC,OAAQL,OACrEM,SAAWP,EAAa,SAAAQ,GAAc,OAAA,IAAIN,EAASM,EAAWC,aAAa,WAO3EP,qBAAA,WACI,OAASQ,KAAKC,MAAeC,kBAGjC,WACWD,GAAAD,WAAAC,EARXD,4BAA+B,EAU3BA,KAAKG,aAAgBF,EAAcE,aAClCF,EAAcG,OAASJ,KACvBC,EAAcI,YAAgBJ,EAAcI,UAAY,cAIjE,SAASC,EAAgBC,GAErB,GAAIA,EAAQJ,eAAkBI,EAAQN,MAAcE,aAAe,OAAOI,EAE1E,IAAMC,EAAO,IAAIhB,EAASe,EAAQN,OAGlC,OAFAO,EAAKC,kBAAoBF,EAAQE,kBAE1BD,EAGX,SAASlB,EAAaoB,GAClB,OAAO,SAAEC,GAEC,IAAAC,sBAAEL,OAASM,OASjB,OALAC,YAAW,WAEP,OADAP,EAAQE,kBAAoB,SAAAM,GAAO,OAAAF,EAAaE,IACzC,WAAM,OAAAR,EAAQN,MAAMe,YAC5BC,GAEIV,EAAQN,OAIvB,IAAMgB,EAAa,GC3CnB,IAAMA,EAAa,YAEHC,IACZ,OAAOC,aAAYC,EAAqB,MAAQ,GAGpD,SAASA,EAAqBjB,EAAuBkB,GACjD,OAASA,EAA2BlB,aCRxC,IAAImB,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOhC,KAAKiC,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOf,OAAOc,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAG5E,IAAIG,EAAW,WAQlB,OAPAA,EAAWV,OAAOW,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIV,KADTS,EAAIG,UAAUF,GACOd,OAAOS,UAAUJ,eAAea,KAAKL,EAAGT,KAAIQ,EAAER,GAAKS,EAAET,IAE9E,OAAOQ,IAEKO,MAAM5C,KAAMyC,YCrB1BI,EAAajB,MAAMM,UACnBY,EAAcrB,OAAOS,mBAEXa,EAAS9C,GACrB,GAAIA,GAA0B,iBAAVA,EAChB,OAAQwB,OAAOuB,eAAgB/C,IAC3B,KAAK4C,EAAc,OAAOI,EAC1B,KAAKH,EAAc,OAAOI,EAIlC,OAAOC,EAIX,ICwJiBC,EDxJXD,EAAwB,CAC1BE,eAAOpD,GAAS,OAAOA,GACvBqD,IAAA,SAAKC,EAAqBC,GAAO,MAAO,IACxCC,gBAAQxD,GAAS,OAAOA,IAIfiD,EAAyB,CAElCI,IAAA,SAAKC,EAAqBG,GAClB,IAAAC,EAAS,GACP1D,UAEN,IAAK,IAAI2D,KAAO3D,EACZ,GAAIA,EAAM6B,eAAgB8B,GAAO,CAC7B,IAAMC,EAAUH,EAAUH,EAAKO,GAAIF,GAAOA,QAC9B,IAAZC,GAAwBF,EAAOI,KAAMF,GAI7C,OAAOF,GAGXF,OAAA,SAAQO,EAAaJ,GAEjB,cADOI,EAAQJ,GACRI,GAIXX,MAAA,SAAOW,GACH,YAAYA,KAKPf,EAAwB,CAEjCI,MAAA,SAAOY,GACH,OAAOA,EAAMC,SAGjBT,OAAA,SAAQQ,EAAe1B,GAEnB,OADA0B,EAAME,OAAQ5B,EAAG,GACV0B,GAIXX,IAAA,SAAKC,EAAqBG,GAItB,IAHA,IAAMhB,EAASa,EAAKtD,MAAMyC,OACpBiB,EAAS/B,MAAOc,GAEbH,EAAI,EAAG6B,EAAI,EAAG7B,EAAIG,EAAQH,IAAK,CACpC,IAAM8B,EAAIX,EAAUH,EAAKO,GAAIvB,GAAKA,QAC5B,IAAN8B,IAAkBV,EAAQS,KAAQC,GAKtC,OAFAV,EAAOjB,SAAW0B,IAAOT,EAAOjB,OAAS0B,GAElCT,ICrEX,WAAoB1D,GAAAD,WAAAC,EALpBD,gBAAc,YAQdyB,sBAAI2B,2BAAJ,WAAe,OAAOpD,KAAKC,WAC3B,SAAaqE,GAAStE,KAAKuE,IAAKD,oCAGhC7C,sBAAc2B,gCAAd,WACI,OAAOpD,KAAKC,uCAIhBmD,qBAAA,SAAUoB,GAAV,WACI,OAAO,IAAIC,EAAiBzE,KAAM,SAAEsE,GAChCE,EAASF,GACTI,EAAKH,IAAKD,MAKlBlB,iBAAA,SAAMoB,GAAN,WACI,OAAO,IAAIC,EAAiBzE,KAAM,SAAAsE,GAC9B,IAAMK,EAAOH,EAASF,EAAGI,EAAKzE,YACrB,IAAT0E,GAAmBD,EAAKH,IAAKI,MASrClD,sBAAI2B,yBAAJ,WAAA,WACI,MAA6B,kBAAfpD,KAAKC,MAAsB,CACrC2E,QAAU5E,KAAKC,MACf4E,SAAW,SAAAC,GAAK,OAAAJ,EAAKH,IAAKQ,QAASD,EAAEE,OAAOJ,YAC9C,CACE3E,MAAQD,KAAKC,MACb4E,SAAW,SAAAC,GAAK,OAAAJ,EAAKH,IAAKO,EAAEE,OAAO/E,0CAK3CmD,mBAAA,SAAQ6B,EAAiCH,GACrC,IAAMH,EAAOM,EAAWjF,KAAKqD,QAASyB,QAC7B,IAATH,GAAmB3E,KAAKuE,IAAKI,IAIjCvB,mBAAA,SAAQ6B,GAAR,WACI,OAAO,SAAAH,GAAK,OAAAJ,EAAKQ,OAAQD,EAAWH,KAGxC1B,mBAAA,SAAQ+B,GACJ,OAAO,IAAIC,EAAiBpF,KAAMmF,IAGtC/B,oBAAA,SAASiC,GACL,OAAO,IAAIC,EAAkBtF,KAAMqF,GAAgB,KAIvDjC,qBAAA,SAAiCS,GAC7B,OAAO,IAAI0B,EAAavF,KAAM6D,IAIlCT,iBAAA,WACI,IAAMa,EAAQhB,EAAaI,MAAOrD,KAAKC,OACvC2B,MAAMM,UAAU6B,KAAKnB,MAAOqB,EAAOxB,WACnCzC,KAAKuE,IAAKN,IAIdb,oBAAA,WACI,IAAMa,EAAQhB,EAAaI,MAAOrD,KAAKC,OACvC2B,MAAMM,UAAUsD,QAAQ5C,MAAOqB,EAAOxB,WACtCzC,KAAKuE,IAAKN,IAKdb,mBAAA,WACI,IAAMa,EAAQhB,EAAaI,MAAOrD,KAAKC,OACvC2B,MAAMM,UAAUiC,OAAOvB,MAAOqB,EAAOxB,WACrCzC,KAAKuE,IAAKN,IAMdb,gBAAA,SAAKM,GACD,OAAOX,EAAS/C,KAAKC,OAAQqD,IAAKtD,KAAM0D,IAK5CN,qBAAA,SAAUQ,GACE,IAAA3D,aACJwF,EAAI1C,EAAS9C,GAEjBD,KAAKuE,IAAKkB,EAAEhC,OAAQgC,EAAEpC,MAAOpD,GAAS2D,KAK1CR,eAAA,SAAIQ,GACA,OAAO,IAAI8B,EAAe1F,KAAM4D,IAGpCR,kBAAA,WACU,IAAAnD,aACN,OAAO8C,EAAS9C,GAAQoD,MAAOpD,IAOnCmD,iBAAA,WAGI,IAFA,IAAIuC,EAAQ,GAAIC,EAAOnD,UAAUC,OAASD,UAAYhB,OAAOmE,KAAM5F,KAAKC,OAE/DsC,EAAI,EAAGA,EAAIqD,EAAKlD,OAAQH,IAAK,CAClC,IAAMqB,EAAegC,EAAMrD,GAC3BoD,EAAO/B,GAAQ,IAAI8B,EAAe1F,KAAM4D,GAG5C,OAAO+B,GAOXlE,sBAAI2B,qBAAJ,WACI,IAAKpD,KAAK6F,QAAS,CACX,IAAAF,EAA2B3F,KAAK6F,QAAU,GACxC5F,aAEN,IAAK,IAAI2D,KAAO3D,EACRA,EAAM6B,eAAgB8B,KACtB+B,EAAO/B,GAAQ,IAAI8B,EAAe1F,KAAM4D,IAKpD,OAAO5D,KAAK6F,yCAQhBzC,kBAAA,SAAO0C,EAAiCC,GAKpC,OAJK/F,KAAK+F,OAAUD,EAAW9F,KAAKC,SAChCD,KAAK+F,MAAQA,GAASD,EAAUC,OAASC,GAGtChG,UAIEoD,EAAAA,WAAAA,oBAcb,SAA0BnD,EAAWsE,GACjC,OAAO,IAAI0B,EAAiBhG,EAAOsE,IAMvBnB,YAAhB,SAA6CuC,GACzC,OAAOO,EAAQP,EAAO,UAMVvC,YAAhB,SAA6CuC,GACzC,OAAOO,EAAQP,EAAO,UAMVvC,YAAhB,SAA6CuC,GACzC,IAAK,IAAI/B,KAAO+B,EACZ,GAAIA,EAAM7D,eAAgB8B,IAAS+B,EAAO/B,GAAMmC,MAC5C,OAAO,EAIf,OAAO,GAMI3C,YAAhB,SAA6CuC,EAAwBQ,GAChE,GAAIA,EACA,IAAK,IAAIvC,KAAO+B,EAAO,CACnB,IAAMS,EAAYC,EAAMzC,GACxB,GAAIuC,EAAOrE,eAAgBsE,GAAa,CACpC,IAAME,EAAYH,EAAQC,QACZ,IAAdE,GAAwBX,EAAO/B,GAAMW,IAAK+B,MAQ9D,SAAmCC,MAAAnD,UAC/B6C,gBAAA,SAAK3B,QAEL,WAAarE,EAAWsE,GAAxB,MACIiC,YAAOvG,gBACPyE,EAAKH,IAAMA,IAInB,SAAmCgC,MAAAnD,UAC/BqB,gBAAA,SAAKH,QAEL,WAAamC,EAAsBlC,GAAnC,MACIiC,YAAOC,EAAOxG,aACdyE,EAAKH,IAAMA,EAEH,IAAAwB,iBACJA,IAAQrB,EAAKqB,MAAQA,KAIjC,SAA8BQ,MAAAnD,UAK1BgC,gBAAA,SAAKd,GACDtE,KAAKyG,OAAOlC,IAAKD,EAAItE,KAAKmF,YAAc,UAL5C,WAAoBsB,EAA+BtB,GAAnD,MACIqB,YAAOC,EAAOxG,QAAUkF,gBADRT,SAAA+B,EAA+B/B,cAAAS,IASvD,SAA+BoB,MAAAnD,UAK3BkC,gBAAA,SAAKhB,GACDtE,KAAKyG,OAAOlC,IAAKD,EAAItE,KAAKqF,aAAe,UAL7C,WAAoBoB,EAA+BpB,GAAnD,MACImB,YAAuB,MAAhBC,EAAOxG,oBADEyE,SAAA+B,EAA+B/B,eAAAW,IASvD,SAA0BkB,MAAAnD,UAKtBmC,gBAAA,SAAKjB,GAAL,WACQK,EAAOI,QAAST,GAEpB,GAAItE,KAAKC,QAAU0E,EAAM,CACrB,IAAI+B,EAAc1G,KAAKyG,OAAOxG,MAC1B0G,EAAYrC,EAAIoC,EAAIE,OAAQ5G,KAAK6D,SAAY6C,EAAIG,OAAQ,SAAAC,GAAM,OAAAA,IAAOpC,EAAKb,UAE/E7D,KAAKyG,OAAOlC,IAAKoC,QAXzB,WAAoBF,EAA+B5C,GAAnD,MACI2C,YAA0C,GAAnCC,EAAOxG,MAAM8G,QAASlD,iBADba,SAAA+B,EAA+B/B,UAAAb,IAgBvD,MAAOmC,EAAe,mBAMqBO,MAAAnD,UAKvCsC,mBAAA,WACI1F,KAAKyG,OAAOO,SAAehH,KAAK4D,MAIpC8B,gBAAA,SAAKpB,GAAL,WACQtE,KAAKC,QAAUqE,GACftE,KAAKyG,OAAOvB,OAAQ,SAAAjF,GAEhB,OADAA,EAAOyE,EAAKd,KAAQU,EACbrE,QAbnB,WAAqBwG,EAA+B7C,GAApD,MACI4C,YAAOC,EAAOxG,MAAO2D,iBADJc,SAAA+B,EAA+B/B,MAAAd,IAmBxD,SAASsC,EAAQP,EAAqBsB,GAClC,IAAMC,EAAS,GAEf,IAAK,IAAItD,KAAO+B,EACZ,GAAIA,EAAM7D,eAAgB8B,GAAO,CAC7B,IAAM3D,EAAQ0F,EAAO/B,GAAOqD,QACd,IAAVhH,IACAiH,EAAQb,EAAMzC,IAAU3D,GAKpC,OAAOiH,EAGX,SAASb,EAAMzC,GACX,MAAoB,MAAbA,EAAK,GAAcA,EAAIM,MAAO,GAAMN,WC3UO2C,MAAAY,aAIlDC,mBAAA,SAA2BxD,GACvB,OAAO5D,KAAKqH,IAAKzD,IAIrBwD,gBAAA,SAAwBxD,GACpB,IAAM3D,EAAQD,KAAKsH,MAAO1D,GAC1B2D,EAAQvH,KAAK2F,QAAW3F,KAAK2F,MAAQ,IACrC6B,EAASD,EAAO3D,GAEhB,OAAO4D,GAAUA,EAAOvH,QAAUA,EACtBuH,EACAD,EAAO3D,GAAQ,IAAI6D,EAAWzH,KAAM4D,EAAK3D,IAKzDmH,oBAAA,WACI,OAAOpH,KAAK0H,OAAO9E,MAAO5C,KAAMyC,YAWpC2E,mBAAA,eAAQ,aAAAO,mBAAAA,IAAAC,kBAKJ,IAJQ,IAAAN,aACJC,EAAQvH,KAAK2F,QAAW3F,KAAK2F,MAAa,QAG9BkC,EAFLD,EAAKlF,OAASkF,EAAsBnG,OAAOmE,KAAM0B,GAE5C1G,WAAAA,IAAM,CAAjB,IAAIgD,OACC3D,EAAQqH,EAAO1D,GACjB4D,EAASD,EAAO3D,GAEf4D,GAAUA,EAAOvH,QAAUA,IAC5BsH,EAAO3D,GAAQ,IAAI6D,EAAWzH,KAAM4D,EAAK3D,IAIjD,OAAOsH,MA/Cf,aAAA,qDACI7C,QAAmC,gBAkDmB6B,MAAAnD,UAKtDqE,gBAAA,SAAKnD,GACD,IAAMwD,EAAqB,GAC3BA,EAAO9H,KAAK4D,KAAQU,EACpBtE,KAAK+H,UAAUC,SAAUF,OAP7B,WAAoBC,EAA4CnE,EAAS3D,GAAzE,MACIuG,YAAOvG,gBADSyE,YAAAqD,EAA4CrD,MAAAd,IC9DpE,SAAgC2C,OAAAnD,UAE5B6E,iBAAA,SAAK3D,KAEL2D,oBAAA,SAAQzE,EAAuC0E,GAG3ClI,KAAKuE,IAAK,SAAAD,GACN,IAAMrE,EAAQ8C,EAASuB,GAAIjB,MAAOiB,GAC9B6D,EAAS3E,EAAKvD,EAAOiI,GAEzB,YAAkB,IAAXC,EAAoB7D,EAAI6D,SAIvC,YACIlI,EACAsE,GAFJ,MAIIiC,YAAOvG,gBACPyE,EAAKH,IAAMA,aAOH6D,GAAYC,GAClB,IAAAzH,gBAAEX,OAAOsE,OACf,OAAO,IAAI0D,EAAgBhI,EAAOsE,YAStB+D,GAAgBD,GACtB,IAAAzH,gBAAEX,OAAOsE,OACPgE,EAAYC,KAEpB,OAAO,IAAIP,EAAgBhI,EAAO,SAAAqE,GAAK,OAAAiE,EAAUE,SAAWlE,EAAKD,cAMrDkE,KACZ,IAAMD,EAAYG,UAAQ,GAM1B,OAJA5H,YAAW,WAAM,kBACP,OAAAyH,EAAUE,SAAU,IAC3B,IAEIF,WAOKI,GAAiBxC,GAC7B,IAAMlG,EAAQkG,aAAkB/C,SAAS+C,EAAOlG,MAAQkG,EAClD5C,EAAO6E,GAASnI,GAKtB,OAHAa,YAAU,WAAM,OAAAyC,EAAKgB,IAAKtE,IAAS,CAAEA,IAG9BsD,WAQKqF,GAAqBzC,GACjC,IAAMlG,EAAQkG,aAAkB/C,SAAS+C,EAAOlG,MAAQkG,EAClD5C,EAAO+E,GAAarI,GAI1B,OAFAa,YAAU,WAAM,OAAAyC,EAAKgB,IAAKtE,IAAS,CAAEA,IAE9BsD,EAiFX,SAASsF,GAAoBvE,GACzB,OAAOA,QAAwB,IAAnBA,EAAEnE,aAA0BmE,EAAEnE,aAAemE,ECtH7D,SAASwE,GAAaC,EAAiBnF,GACnC,OAAQmF,EAAK7G,qBAAqB8G,gBAAgB,SAASpF,eAAgBA,kBACnEmF,IAASE,KAAO,SAASrF,eAAgBA,eACzCmF,EAAK7G,qBAAqBkB,SAAS,SAASQ,eAAgBA,WAC5D,SAASA,gJA/C8BsF,EAAWC,GAClD,MACAC,wCACFxD,EAAOnE,OAAOmE,KAAMsD,GAEpBG,EAAe,IAAIC,SAAU,QAAS,mCAEjC1D,EAAKtC,IAAK,SAAAM,GACT,OAAAkF,GAAaM,EAAaxF,GAAMmF,KAAMnF,KACxC2F,KAAM,2BAIVC,EAAgB,IAAIF,SAAU,QAAS,SAAS,oBACxC1D,EAAKtC,IAAK,SAAEM,EAAK6F,GACvB,MAAA,UAAUA,aAAcX,GAAaM,EAAaxF,GAAMmF,KAAMnF,UAChE2F,KAAM,mBAMR,WAAaL,GAAb,MACI1C,YAAO0C,gBACPxE,EAAKgF,QAAUL,EAAc3E,EAAKwE,SAgB1C,OArBgCnH,MAAA4H,aAQ5BC,kCAAA,SAAuBC,GACnB,OAAOL,EAAeK,EAAW7J,KAAK0J,UAG1CE,+BAAA,WACI5J,KAAK0J,QAAUL,EAAcrJ,KAAKkJ,QAGtCU,mBAAA,WACI,OAAOE,gBAACX,OAASnJ,KAAKkJ,oDNxCNa,GACxB,IAAMlJ,EAAcK,IAEpBJ,YAAW,WACP,SAAS+D,EAAUP,GACfzD,EAAayD,GAIjB,OADAyF,EAASC,UAAWnF,GACb,WAAM,OAAAkF,EAASE,WAAYpF,KACnC5D,0COAmBkF,EAAoB+B,EAAgB1D,GAC1D1D,YAAW,WAGP,OAFAqF,EAAO+D,GAAIhC,EAAO1D,GAEX,WACH2B,EAAOgE,IAAKjC,EAAO1D,KAExB,yCFuGgBhB,EAA0B4G,gBAAAA,MAI7C,IAAMC,EAAW/B,GAA8B,MAE/CxH,YAAU,WAENuJ,EAAS9F,IAAK,SAAA+C,GACJ,IAAA1G,cACN,MAAO,MAAM,UAGjB4C,IACK8G,KAAM,WAAM,OAAAD,EAAS9F,IAAK,SAAC3D,OAAE0D,YAAa,MAAA,CAAEA,EAAI,EAAG,UACnDiG,MAAO,SAAAzF,GAAK,OAAAuF,EAAS9F,IAAK,SAAC3D,OAAE0D,YAAa,MAAA,CAAEA,EAAI,EAAGQ,QACzDsF,GAIK,IAAAnK,UACR,OAAiB,OAAVA,IAAkBA,EAAO,KAAgBA,EAAO,KAAO,gFAjDjC2D,EAAc0D,GAE3C,IAAMkD,EAAW9B,WACjB8B,EAAS/B,QAAUnB,EAEnBxG,YAAU,WACN,IAAM2J,EAAYC,KAAKC,MAAOC,aAAaC,QAASjH,IAAS,MAG7D,OAFAR,SAAO0H,UAAWN,EAAS/B,QAASgC,GAE7B,WACH,IAAMM,EAAa3H,SAAO4H,UAAWR,EAAS/B,SAC9CmC,aAAaK,QAASrH,EAAK8G,KAAKQ,UAAWH,MAEjD,6IAyCuBI,EAAG3J,EAAG4J,EAAG7J,GAC1B,IAAAmB,mBACR,OAAQA,GACJ,KAAK,EAAG,MAAO,CAAEmG,GAAoBsC,IACrC,KAAK,EAAG,MAAO,CAAEtC,GAAoBsC,GAAKtC,GAAoBrH,IAC9D,KAAK,EAAG,MAAO,CAAEqH,GAAoBsC,GAAKtC,GAAoBrH,GAAKqH,GAAoBuC,IAEvF,QAGI,IAFA,IAAMnH,EAAQ,CAAE4E,GAAoBsC,GAAKtC,GAAoBrH,GAAKqH,GAAoBuC,GAAKvC,GAAoBtH,IAEtGgB,EAAI,EAAGA,EAAIG,EAAQH,IACxB0B,EAAMF,KAAM8E,GAAoBpG,UAAWF,KAG/C,OAAO0B"}